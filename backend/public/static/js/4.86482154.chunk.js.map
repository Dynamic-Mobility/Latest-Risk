{"version":3,"sources":["@coremat/CmtAdvCard/CmtAdvCardContent.style.js","@coremat/CmtAdvCard/CmtAdvCardContent.js","@coremat/CmtAdvCard/index.style.js","@coremat/CmtAdvCard/index.js","@jumbo/components/Common/CounterCard/index.js","routes/Pages/Dashboard/DashboardHeader.js","@coremat/CmtBackDrop/CmtBackDrop.style.js","@coremat/CmtTransitions/SlideHeight.js","@coremat/CmtBackDrop/index.js","@coremat/CmtProgressBar/index.style.js","@coremat/CmtProgressBar/index.js","routes/Pages/Dashboard/GeneralDashboard/RisksGraphs/ControlsChart.js","routes/Pages/Dashboard/GeneralDashboard/RisksGraphs/ProbabilityBubbleChat.js","routes/Pages/Dashboard/GeneralDashboard/RisksGraphs/LossTypeProbabilityChart.js"],"names":["useStyles","makeStyles","advCardContent","props","backgroundStyles","padding","position","zIndex","overlayStyles","content","left","top","width","height","alignCenter","display","alignItems","flexDirection","textAlign","marginRight","marginBottom","gridOrder1","order","gridOrder2","CmtAdvCardContent","icon","avatar","title","titleProps","subTitle","subTitleProps","extraContent","backgroundColor","backgroundImage","gradientDirection","overlay","columnSizes","reverseDir","children","className","rest","getBackgroundStyle","getOverLayStyle","classes","alignCenterClass","blockClasses","blockFirst","blockSecond","extraContentRender","Box","clsx","Grid","container","spacing","item","xs","sm","md","CmtContentHead","defaultProps","colors","opacity","direction","advCardRoot","overflow","cardOverlay","actionMenu","right","hexToRgba","deepPurple","minWidth","fontSize","CmtAdvCard","actions","actionHandleIcon","actionHandler","actionMenuClassName","headerRef","useRef","childrenWithProps","Children","map","child","isValidElement","type","render","name","cloneElement","ref","Card","onMouseEnter","current","onHeaderMouseEntered","onMouseLeave","onHeaderMouseLeft","style","length","ml","CmtDropdownMenu","TriggerComponent","IconButton","size","items","onItemClick","theme","containerRoot","containerRootCenter","justifyContent","paddingTop","paddingBottom","contentRoot","contentRootCenter","marginLeft","marginTop","titleRoot","CounterCard","number","numberProps","numberType","label","labelProps","counterProps","color","CmtCard","CmtCardContent","CmtImage","src","alt","xl","component","start","end","useEasing","separator","prototype","PropTypes","oneOfType","string","element","object","bool","DashboardCard","font","ComplianceDashboardHeader","GridContainer","backGroundColors","PlaylistAddCheck","AssuredWorkload","Gavel","NavigationButton","React","useState","anchorEl","setAnchorEl","history","useHistory","open","Boolean","menuItems","id","url","Button","variant","endIcon","ArrowDropDown","aria-controls","undefined","aria-haspopup","aria-expanded","onClick","event","currentTarget","Menu","onClose","MenuListProps","MenuItem","key","e","push","handleMenuChange","DashboardHeader","WarningAmber","revealArea","backLayer","palette","common","white","boxSizing","bottom","background","primary","main","secondary","backLayerHeader","iconBlock","iconView","frontLayer","headerSize","paper","borderTopLeftRadius","borderTopRightRadius","frontLayerSubHeader","borderBottom","divider","defaultStyle","transition","SlideHeight","inProp","in","styleProp","slidableHeight","timeout","Transition","state","childProps","entering","transform","entered","exiting","exited","CmtBackDrop","concealedIcon","backLayerConcealed","backLayerRevealed","extrasContainer","subHeader","onRevealed","revealed","setRevealed","backLayerContentRef","createRef","frontLayerRef","backLayerContentHeight","getBackLayerContentHeight","frontLayerHeight","getFrontLayerHeight","expandableValue","setExpandableValue","setHeight","clientHeight","useEffect","onConcealedClick","onRevealClose","flex","mr","Typography","pointer","root","flexRoot","barContainer","borderRadius","thickness","fillStyle","pointerSize","pointerColor","textContainer","text","textContainerCenter","textContainerRight","labelContainer","labelContainerCenter","labelContainerRight","topPositions","bottomPositions","CmtProgressBar","labelPos","valuePos","value","total","renderValue","containedColor","hideValue","onlyContained","emptyColor","restProps","barWidth","toString","setPointerColor","Math","round","fillBarStyle","setFillBarStyle","fillBarStyleValue","pointerColorValue","totalColors","Array","isArray","split","firstColor","lastColor","join","getFillBarStyleAndPointerColors","newFillBarStyleValue","renderContent","renderLabel","includes","mb","mt","memo","require","Highcharts","cardContentRoot","letterSpacing","listItemRoot","subTitleRoot","lossCategoryRoot","fill","countryCellItem","cursor","alpha","dark","boxShadow","ControlMapKey","data","index","bgcolor","px","slug","mx","risks","ControlBubbleChart","chartOptions","chart","styleMode","exporting","enabled","credits","tooltip","useHTML","pointFormat","plotOptions","packedbubble","minSize","maxSize","layoutAlgorithm","gravitationalConstant","splitSeries","seriesInteraction","dragBetweenSeries","parentNodeLimit","dataLabels","format","filter","property","operator","textOutline","fontWeight","series","highcharts","options","ControlsChart","currentFilter","setCurrentFilter","filters","handleFilterChange","target","COLORS","selectBoxRoot","labelId","onChange","gutterBottom","ProbabilityBubbleChart","getColor","product","x","y","computeResidual","residualRisk","residualList","find","getLabelX","tick","probabilityList","orderIndex","getLabelY","severColor","severityList","margin","dataKey","allowDuplicatedCategory","tickFormatter","range","strokeDasharray","active","payload","residual","Paper","gridRowGap","entry","ProbabilityKey","z","LossTypeProgress","CmtList","renderRow","ListItem","LossTypeProbabilityChart","lossTypeData","CmtCardHeader","Select","lg","align"],"mappings":"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","file":"static/js/4.86482154.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  advCardContent: props => ({\n    ...props.backgroundStyles,\n    padding: 24,\n    position: 'relative',\n    '& > *': {\n      position: 'relative',\n      zIndex: 3,\n    },\n    '&:before': props.overlayStyles\n      ? {\n          ...props.overlayStyles,\n          content: \"''\",\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          zIndex: 0,\n          width: '100%',\n          height: '100%',\n        }\n      : {},\n  }),\n  alignCenter: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    textAlign: 'center',\n    '& .Cmt-content-head': {\n      flexDirection: 'column',\n    },\n    '& .Cmt-avatar': {\n      marginRight: 0,\n      marginBottom: 15,\n    },\n  },\n  gridOrder1: {\n    order: 1,\n  },\n  gridOrder2: {\n    order: 2,\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Grid } from '@material-ui/core';\nimport CmtContentHead from '../CmtTypography/CmtContentHead';\nimport useStyles from './CmtAdvCardContent.style';\nimport clsx from 'clsx';\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\n\nconst CmtAdvCardContent = ({\n  icon,\n  avatar,\n  title,\n  titleProps,\n  subTitle,\n  subTitleProps,\n  extraContent,\n  backgroundColor,\n  backgroundImage,\n  gradientDirection,\n  overlay,\n  columnSizes,\n  alignCenter,\n  reverseDir,\n  children,\n  className,\n  ...rest\n}) => {\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\n  const overlayStyles = getOverLayStyle(overlay);\n\n  const classes = useStyles({ overlayStyles, backgroundStyles, alignCenter });\n  const alignCenterClass = alignCenter ? classes.alignCenter : {};\n  const blockClasses = reverseDir ? [classes.gridOrder1, classes.gridOrder2] : [classes.gridOrder2, classes.gridOrder1];\n  const [blockFirst, blockSecond] = blockClasses;\n\n  let extraContentRender = null;\n  if (extraContent) {\n    extraContentRender = typeof extraContent === 'function' ? extraContent() : extraContent;\n  }\n\n  return (\n    <Box className={clsx(classes.advCardContent, 'Cmt-card-content', 'CmtAdvCard-Content', className)} {...rest}>\n      {extraContentRender || icon || avatar || title || subTitle ? (\n        <Grid container spacing={6}>\n          <Grid\n            item\n            xs={alignCenter ? 12 : 12}\n            sm={alignCenter ? 12 : columnSizes[0] === 12 ? 12 : 6}\n            md={alignCenter ? 12 : columnSizes[0]}\n            className={clsx(blockFirst, alignCenterClass)}>\n            <Box>\n              <CmtContentHead\n                icon={icon}\n                avatar={avatar}\n                title={title}\n                titleProps={titleProps}\n                subTitle={subTitle}\n                subTitleProps={subTitleProps}\n              />\n            </Box>\n            {extraContentRender && <Box>{extraContentRender}</Box>}\n          </Grid>\n          {children && (\n            <Grid\n              item\n              xs={alignCenter ? 12 : columnSizes[1] === 0 ? 0 : 12}\n              sm={alignCenter ? 12 : columnSizes[1] === 0 ? 0 : 6}\n              md={alignCenter ? 12 : columnSizes[1]}\n              className={blockSecond}>\n              <Box width={1}>{children}</Box>\n            </Grid>\n          )}\n        </Grid>\n      ) : (\n        <Grid container spacing={6}>\n          <Grid item xs={12} md={12}>\n            <Box width={1}>{children}</Box>\n          </Grid>\n        </Grid>\n      )}\n    </Box>\n  );\n};\n\nCmtAdvCardContent.propTypes = {\n  icon: PropTypes.element,\n  avatar: PropTypes.element,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  titleProps: PropTypes.object,\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  subTitleProps: PropTypes.object,\n  extraContent: PropTypes.oneOfType([PropTypes.string, PropTypes.element, PropTypes.func]),\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  backgroundImage: PropTypes.string,\n  gradientDirection: PropTypes.string,\n  overlay: PropTypes.object,\n  reverseDir: PropTypes.bool,\n  columnSizes: PropTypes.array,\n  alignCenter: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nCmtAdvCardContent.defaultProps = {\n  title: '',\n  subTitle: '',\n  overlay: { colors: '', opacity: 0, direction: '' },\n  reverseDir: false,\n  columnSizes: [6, 6],\n  alignCenter: false,\n  className: '',\n};\n\nexport default CmtAdvCardContent;\n","import { makeStyles } from '@material-ui/core';\nimport { hexToRgba } from '../CmtHelpers/JssHelper';\nimport { deepPurple } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles({\n  advCardRoot: {\n    position: 'relative',\n    zIndex: 1,\n    overflow: 'hidden',\n    height: '100%',\n  },\n  cardOverlay: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    zIndex: 0,\n    width: '100%',\n    height: '100%',\n  },\n  actionMenu: {\n    position: 'absolute',\n    top: 15,\n    right: 15,\n    zIndex: 4,\n    '& button': {\n      backgroundColor: 'rgba(' + hexToRgba(deepPurple[500]) + ', 0.5)',\n      padding: 0,\n      height: 40,\n      width: 40,\n      minWidth: 'auto',\n      fontSize: 10,\n      '&:hover': {\n        backgroundColor: 'rgba(' + hexToRgba(deepPurple[500]) + ', 0.7)',\n      },\n    },\n  },\n});\n\nexport default useStyles;\n","import React, { Children, cloneElement, isValidElement, useRef } from 'react';\nimport { Box, Card } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport CmtDropdownMenu from '../CmtDropdownMenu';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useStyles from './index.style';\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst CmtAdvCard = ({\n  className,\n  actions,\n  actionHandleIcon,\n  actionHandler,\n  actionMenuClassName,\n  backgroundColor,\n  backgroundImage,\n  gradientDirection,\n  overlay,\n  children,\n}) => {\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\n  const overlayStyles = getOverLayStyle(overlay);\n\n  const classes = useStyles();\n\n  const headerRef = useRef(null);\n\n  const handleMouseEnter = () => {\n    if (headerRef.current) headerRef.current.onHeaderMouseEntered();\n  };\n\n  const handleMouseLeave = () => {\n    if (headerRef.current) headerRef.current.onHeaderMouseLeft();\n  };\n\n  const childrenWithProps = Children.map(children, child => {\n    // Checking isValidElement is the safe way and avoids a TS error too.\n    if (isValidElement(child)) {\n      if (child.type.render && child.type.render.name) {\n        if (child.type.render.name === 'CmtCardHeader') {\n          return cloneElement(child, { ref: headerRef });\n        }\n      } else {\n        return cloneElement(child);\n      }\n    }\n\n    return child;\n  });\n\n  return (\n    <Card\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      className={clsx(classes.advCardRoot, className)}\n      style={backgroundStyles}>\n      {actions.length > 0 && (\n        <Box ml={2} className={clsx(classes.actionMenu, actionMenuClassName)}>\n          <CmtDropdownMenu\n            TriggerComponent={<IconButton size=\"small\">{actionHandleIcon || <MoreVertIcon fontSize=\"small\" />}</IconButton>}\n            items={actions}\n            onItemClick={actionHandler}\n          />\n        </Box>\n      )}\n      {childrenWithProps}\n      {overlay.colors && <Box className={classes.cardOverlay} style={overlayStyles} />}\n    </Card>\n  );\n};\n\nCmtAdvCard.propTypes = {\n  actions: PropTypes.array,\n  actionHandleIcon: PropTypes.element,\n  actionHandler: PropTypes.func,\n  actionMenuClassName: PropTypes.string,\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  backgroundImage: PropTypes.string,\n  gradientDirection: PropTypes.string,\n  overlay: PropTypes.object,\n};\n\nCmtAdvCard.defaultProps = {\n  overlay: { colors: '', opacity: 0, direction: '' },\n  actions: [],\n  actionMenuClassName: '',\n  actionHandler: null,\n};\n\nexport default CmtAdvCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CountUp from 'react-countup';\nimport clsx from 'clsx';\n\nimport Box from '@material-ui/core/Box';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nimport CmtCard from '../../../../@coremat/CmtCard';\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\nimport CmtImage from '../../../../@coremat/CmtImage';\n\nconst useStyles = makeStyles(theme => ({\n  containerRoot: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  containerRootCenter: {\n    justifyContent: 'center',\n    flexDirection: 'column',\n    paddingTop: 16,\n    paddingBottom: 16,\n  },\n  contentRoot: {\n    position: 'relative',\n  },\n  contentRootCenter: {\n    marginLeft: 0,\n    marginTop: 13,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    textAlign: 'center',\n  },\n  titleRoot: {\n    marginBottom: 2,\n  },\n}));\n\nconst CounterCard = ({\n  icon,\n  number,\n  numberProps,\n  numberType,\n  label,\n  labelProps,\n  counterProps,\n  color,\n  gradientDirection,\n  alignCenter,\n  ...rest\n}) => {\n  const classes = useStyles();\n  return (\n    <CmtCard gradientDirection={gradientDirection} {...rest}>\n      <CmtCardContent>\n        <Box\n          className={clsx(classes.containerRoot, 'container', {\n            [classes.containerRootCenter]: alignCenter,\n          })}\n          color={color}>\n          {typeof icon === 'string' ? <CmtImage src={icon} alt={label} /> : icon}\n          <Box\n            ml={{ xs: 3, xl: 5 }}\n            className={clsx(classes.contentRoot, 'content-wrapper', {\n              [classes.contentRootCenter]: alignCenter,\n            })}>\n            <Box component=\"h3\" fontSize={{ xs: 20, xl: 24 }} className={clsx(classes.titleRoot, 'title')} {...numberProps}>\n              {numberType === 'currency' && 'KES '}\n              {typeof number === 'string' ? (\n                number\n              ) : (\n                <CountUp start={0} end={number} useEasing={false} separator={','} {...counterProps} />\n              )}\n              {numberType === 'percent' && '%'}\n            </Box>\n            <Box component=\"p\" {...labelProps}>\n              {label}\n            </Box>\n          </Box>\n        </Box>\n      </CmtCardContent>\n    </CmtCard>\n  );\n};\n\nCounterCard.prototype = {\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  numberProps: PropTypes.object,\n  label: PropTypes.string,\n  numberType: PropTypes.string,\n  labelProps: PropTypes.object,\n  counterProps: PropTypes.object,\n  color: PropTypes.string,\n  gradientDirection: PropTypes.string,\n  alignCenter: PropTypes.bool,\n};\n\nCounterCard.defaultProps = {\n  color: 'common.white',\n  gradientDirection: '180deg',\n  alignCenter: false,\n  numberType: 'number',\n};\n\nexport default CounterCard;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { AssuredWorkload, WarningAmber } from '@mui/icons-material';\nimport GridContainer from '../../../@jumbo/components/GridContainer';\nimport CounterCard from '../../../@jumbo/components/Common/CounterCard';\nimport { useHistory } from 'react-router-dom';\nimport { Box, Button, Menu, MenuItem } from '@mui/material';\nimport { ArrowDropDown, Gavel, PlaylistAddCheck } from '@material-ui/icons';\nimport { backGroundColors } from '../../../@jumbo/utils/commonHelper';\n\nconst navigationMenu = user => {\n  return [\n    {\n      id: 1,\n      name: 'Risk Universe',\n      url: 'risk-universe',\n    },\n    {\n      id: 2,\n      name: 'Risk Assessment',\n      url: 'risk-assessment',\n    },\n    {\n      id: 3,\n      name: 'Incident Management',\n      url: 'risk-incident',\n    },\n  ];\n};\nconst DashboardCard = props => {\n  const {\n    icon,\n    number,\n    label,\n    font = 15,\n    numberType,\n    backgroundColor = ['#8E49F0 -18.96%', '#4904AB 108.17%'],\n    gradientDirection = '180deg',\n  } = props;\n  return (\n    <CounterCard\n      icon={icon}\n      number={number}\n      label={label}\n      numberType={numberType}\n      labelProps={{\n        fontSize: font,\n      }}\n      backgroundColor={backgroundColor}\n      gradientDirection={gradientDirection}\n    />\n  );\n};\nconst DashboardHeader = () => {\n  return (\n    <>\n      <GridContainer>\n        {/*<Grid item md={3} xs={12}>*/}\n        {/*  <DashboardCard*/}\n        {/*    {...{*/}\n        {/*      icon: '/images/dashboard/projectIcon.svg',*/}\n        {/*      number: 80,*/}\n        {/*      numberType: 'percent',*/}\n        {/*      label: 'Compliance',*/}\n        {/*      backgroundColor: backGroundColors[0],*/}\n        {/*    }}*/}\n        {/*  />*/}\n        {/*</Grid>*/}\n        <Grid item md={4} xs={12}>\n          <DashboardCard\n            {...{\n              icon: <WarningAmber style={{ fontSize: 50 }} />,\n              number: 2000,\n              label: 'Risks',\n              backgroundColor: backGroundColors[1],\n            }}\n          />\n        </Grid>\n        <Grid item md={4} xs={12}>\n          <DashboardCard\n            {...{\n              icon: '/images/dashboard/tasksIcon.svg',\n              number: 1200,\n              label: 'Incidents',\n              backgroundColor: backGroundColors[2],\n            }}\n          />\n        </Grid>\n        <Grid item md={4} xs={12}>\n          <DashboardCard\n            {...{\n              number: 10000,\n              numberType: 'currency',\n              label: 'Total Loss Amount',\n              backgroundColor: backGroundColors[3],\n            }}\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\nexport const ComplianceDashboardHeader = () => {\n  return (\n    <>\n      <GridContainer>\n        <Grid item md={3} xs={12}>\n          <DashboardCard\n            {...{\n              icon: '/images/dashboard/projectIcon.svg',\n              number: 80,\n              numberType: 'percent',\n              label: 'Overall Compliance',\n              backgroundColor: backGroundColors[0],\n            }}\n          />\n        </Grid>\n        <Grid item md={3} xs={12}>\n          <DashboardCard\n            {...{\n              icon: <PlaylistAddCheck style={{ fontSize: 50 }} />,\n              number: 75,\n              numberType: 'percent',\n              label: 'Statutory Compliance',\n              backgroundColor: backGroundColors[3],\n            }}\n          />\n        </Grid>\n        <Grid item md={3} xs={12}>\n          <DashboardCard\n            {...{\n              icon: <AssuredWorkload style={{ fontSize: 50 }} />,\n              number: 80,\n              numberType: 'percent',\n              label: 'Enterprise Compliance',\n              backgroundColor: backGroundColors[1],\n            }}\n          />\n        </Grid>\n        <Grid item md={3} xs={12}>\n          <DashboardCard\n            {...{\n              icon: <Gavel style={{ fontSize: 50 }} />,\n              number: 90,\n              numberType: 'percent',\n              label: 'Legal Compliance',\n              backgroundColor: backGroundColors[2],\n            }}\n          />\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\nexport const NavigationButton = () => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const user = 'Admin';\n  const history = useHistory();\n  const open = Boolean(anchorEl);\n  const menuItems = navigationMenu(user);\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleMenuChange = url => {\n    history.push(`../${url}`);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <Box display={'flex'} justifyContent={'flex-end'}>\n      <Button\n        id={'basic-button'}\n        variant={'contained'}\n        color={'primary'}\n        endIcon={<ArrowDropDown />}\n        aria-controls={open ? 'basic-menu' : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined}\n        onClick={handleClick}>\n        Navigate To\n      </Button>\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}>\n        {menuItems.length !== 0 &&\n          menuItems.map(({ id, name, url }) => (\n            <MenuItem key={id} onClick={e => handleMenuChange(url)}>\n              {name}\n            </MenuItem>\n          ))}\n      </Menu>\n    </Box>\n  );\n};\n\nexport default DashboardHeader;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  revealArea: {\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  backLayer: {\n    color: theme.palette.common.white,\n    boxSizing: 'border-box',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    zIndex: 1,\n    //backgroundColor: theme.palette.primary.main,\n    background: `linear-gradient(45deg,${theme.palette.primary.main}  50%, ${theme.palette.secondary.main}  90%)`,\n    paddingBottom: 65,\n  },\n  backLayerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '16px 24px',\n  },\n  iconBlock: {\n    display: 'block',\n  },\n  iconView: {\n    '& .MuiSvgIcon-root': {\n      display: 'block',\n    },\n  },\n  frontLayer: props => ({\n    position: 'relative',\n    zIndex: 2,\n    marginBottom: props.headerSize,\n    backgroundColor: theme.palette.background.paper,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n  }),\n  frontLayerSubHeader: {\n    display: 'flex',\n    padding: '18px 24px',\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\nexport default useStyles;\n","import React, { cloneElement } from 'react';\nimport { Transition } from 'react-transition-group';\n\nconst defaultStyle = {\n  transition: `transform 0.3s ease`,\n};\n\nconst getTransitionStyles = height => {\n  return {\n    entering: { transform: `translateY(${height}px)` },\n    entered: { transform: `translateY(${height}px)` },\n    exiting: { transform: `translateY(${height}px)` },\n    exited: { transform: `translateY(${height}px)` },\n  };\n};\n\nconst SlideHeight = ({ in: inProp, style: styleProp, slidableHeight, timeout, children }) => {\n  const style = {\n    ...styleProp,\n    ...(React.isValidElement(children) ? children.props.style : {}),\n  };\n\n  return (\n    <Transition in={inProp} timeout={timeout || 300}>\n      {(state, childProps) =>\n        cloneElement(children, {\n          style: {\n            ...defaultStyle,\n            ...style,\n            ...getTransitionStyles(slidableHeight)[state],\n          },\n          ...childProps,\n        })\n      }\n    </Transition>\n  );\n};\n\nexport default SlideHeight;\n","import React, { cloneElement, createRef, isValidElement, useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\n\nimport { Box } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport Typography from '@material-ui/core/Typography';\n\nimport CmtCard from '../CmtCard';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport useStyles from './CmtBackDrop.style';\nimport SlideHeight from '../CmtTransitions/SlideHeight';\n\nconst CmtBackDrop = ({\n  concealedIcon,\n  backLayerConcealed,\n  backLayerRevealed,\n  extrasContainer,\n  headerSize,\n  subHeader,\n  onRevealed,\n  children,\n  ...rest\n}) => {\n  const classes = useStyles({ headerSize });\n  const [revealed, setRevealed] = useState(false);\n  const backLayerContentRef = createRef();\n  const frontLayerRef = createRef();\n  const [backLayerContentHeight, getBackLayerContentHeight] = useState(0);\n  const [frontLayerHeight, getFrontLayerHeight] = useState(0);\n  const [expandableValue, setExpandableValue] = useState(headerSize);\n\n  const setHeight = () => {\n    if (backLayerContentRef.current) getBackLayerContentHeight(backLayerContentRef.current.clientHeight);\n    if (frontLayerRef.current) getFrontLayerHeight(frontLayerRef.current.clientHeight);\n    if (onRevealed) onRevealed(revealed);\n  };\n\n  useEffect(() => {\n    if (revealed && backLayerContentHeight > 0) {\n      if (backLayerContentHeight + headerSize > frontLayerHeight) {\n        setExpandableValue(frontLayerHeight);\n      } else {\n        setExpandableValue(backLayerContentHeight + headerSize);\n      }\n    } else {\n      setExpandableValue(headerSize);\n    }\n  }, [revealed, backLayerContentHeight, frontLayerHeight, headerSize]);\n\n  const onConcealedClick = () => {\n    setRevealed(!revealed);\n    setHeight();\n  };\n  const onRevealClose = () => {\n    setRevealed(false);\n    setHeight();\n  };\n\n  const renderConcealedIcon = () => {\n    if (concealedIcon && isValidElement(concealedIcon)) {\n      return cloneElement(concealedIcon, {\n        className: classes.iconBlock,\n      });\n    }\n\n    return null;\n  };\n\n  const backLayerComponent = () => {\n    return (\n      <Box className={clsx(classes.backLayer, 'Cmt-BackDrop-backLayer')}>\n        <Box className={clsx(classes.backLayerHeader, 'Cmt-BackDrop-backLayerHeader')}>\n          <Box flex={1} display=\"flex\" alignItems=\"center\" className=\"pointer\" onClick={onConcealedClick}>\n            <Box mr={4} className={classes.iconView}>\n              {concealedIcon && !revealed && renderConcealedIcon()}\n\n              {revealed && <CloseIcon className={classes.iconBlock} />}\n            </Box>\n            {typeof backLayerConcealed === 'string' ? (\n              <Typography component=\"div\" variant=\"h4\">\n                {backLayerConcealed}\n              </Typography>\n            ) : (\n              backLayerConcealed\n            )}\n          </Box>\n          <Box ml={3}>{extrasContainer}</Box>\n        </Box>\n        <PerfectScrollbar style={{ height: frontLayerHeight - headerSize - 20 }}>\n          <Box ref={backLayerContentRef}>{backLayerRevealed}</Box>\n        </PerfectScrollbar>\n      </Box>\n    );\n  };\n\n  const frontLayerComponent = () => {\n    return (\n      <SlideHeight in={revealed} slidableHeight={expandableValue}>\n        <Box ref={frontLayerRef} className={clsx(classes.frontLayer, 'Cmt-BackDrop-frontLayer')}>\n          {subHeader && (\n            <Box\n              className={clsx(classes.frontLayerSubHeader, 'Cmt-BackDrop-frontLayerSubHeader', { pointer: revealed })}\n              onClick={onRevealClose}>\n              <Box flex={1} mr={3}>\n                {typeof subHeader === 'string' ? <Typography>{subHeader}</Typography> : subHeader}\n              </Box>\n\n              {revealed && <ExpandLessIcon className={classes.iconBlock} />}\n            </Box>\n          )}\n          <Box>{children}</Box>\n        </Box>\n      </SlideHeight>\n    );\n  };\n\n  return (\n    <CmtCard className={clsx(classes.revealArea, 'Cmt-BackDrop')} {...rest}>\n      {backLayerComponent()}\n      {frontLayerComponent()}\n    </CmtCard>\n  );\n};\n\nCmtBackDrop.propTypes = {\n  concealedIcon: PropTypes.element,\n  backLayerConcealed: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  backLayerRevealed: PropTypes.element,\n  extrasContainer: PropTypes.element,\n  headerSize: PropTypes.number,\n  subHeader: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  onRevealed: PropTypes.func,\n};\n\nCmtBackDrop.defaultProps = {\n  concealedIcon: '',\n  headerSize: 60,\n  subHeader: '',\n};\n\nexport default CmtBackDrop;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: 8,\n  },\n  flexRoot: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  barContainer: props => ({\n    borderRadius: props.thickness,\n    height: props.thickness,\n  }),\n  fillStyle: props => ({\n    position: 'relative',\n    borderRadius: props.thickness,\n    height: props.thickness,\n    transition: 'width 1s ease-in-out',\n    '&:after': props.pointer\n      ? {\n          content: '\"\"',\n          height: props.pointerSize ? props.pointerSize : props.thickness + 4,\n          width: props.pointerSize ? props.pointerSize : props.thickness + 4,\n          position: 'absolute',\n          right: 0,\n          left: 'auto',\n          top: '50%',\n          transform: 'translateY(-50%)',\n          backgroundColor: props.pointerColor,\n          borderRadius: '50%',\n        }\n      : {\n          height: 0,\n          width: 0,\n        },\n  }),\n  textContainer: {\n    textAlign: 'left',\n    fontSize: 12,\n    color: theme.palette.text.secondary,\n  },\n  textContainerCenter: {\n    textAlign: 'center',\n  },\n  textContainerRight: {\n    textAlign: 'right',\n  },\n  labelContainer: {\n    textAlign: 'left',\n  },\n  labelContainerCenter: {\n    textAlign: 'center',\n  },\n  labelContainerRight: {\n    textAlign: 'right',\n  },\n}));\nexport default useStyles;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport { Box } from '@material-ui/core';\n\nimport useStyles from './index.style';\n\nconst getFillBarStyleAndPointerColors = (containedColor, gradientDirection) => {\n  let fillBarStyleValue, pointerColorValue;\n  const totalColors = containedColor.length;\n  if (Array.isArray(containedColor) && totalColors > 0) {\n    if (gradientDirection && totalColors === 1) {\n      const [firstColor] = containedColor[0].split(' ');\n      fillBarStyleValue = {\n        backgroundColor: firstColor,\n      };\n      pointerColorValue = firstColor;\n    } else {\n      const [firstColor] = containedColor[0].split(' ');\n      const [lastColor] = containedColor[containedColor.length - 1].split(' ');\n      fillBarStyleValue = {\n        backgroundColor: firstColor,\n        backgroundImage: `linear-gradient(${gradientDirection}, ${containedColor.join(', ')})`,\n      };\n      pointerColorValue = lastColor;\n    }\n  } else {\n    fillBarStyleValue = {\n      backgroundColor: containedColor,\n    };\n    pointerColorValue = containedColor;\n  }\n\n  return [fillBarStyleValue, pointerColorValue];\n};\n\nconst topPositions = ['top-left', 'top-right', 'top-center'];\nconst bottomPositions = ['bottom-left', 'bottom-right', 'bottom-center'];\nconst positions = [...topPositions, ...bottomPositions, 'right', 'left'];\nconst CmtProgressBar = ({\n  label,\n  labelPos,\n  valuePos,\n  value,\n  total,\n  renderValue,\n  containedColor,\n  hideValue,\n  gradientDirection,\n  onlyContained,\n  emptyColor,\n  thickness,\n  pointer,\n  pointerSize,\n  ...restProps\n}) => {\n  const barWidth = (value * 100) / total;\n\n  const [pointerColor, setPointerColor] = useState(containedColor.toString());\n  const [fillBarStyle, setFillBarStyle] = useState({\n    width: `${Math.round(barWidth)}%`,\n    backgroundColor: containedColor.toString(),\n  });\n\n  useEffect(() => {\n    const [newFillBarStyleValue, pointerColorValue] = getFillBarStyleAndPointerColors(containedColor, gradientDirection);\n    setFillBarStyle({\n      ...fillBarStyle,\n      ...newFillBarStyleValue,\n    });\n    setPointerColor(pointerColorValue);\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [containedColor, gradientDirection]);\n\n  const classes = useStyles({\n    thickness,\n    pointer,\n    pointerColor,\n    pointerSize,\n    valuePos,\n  });\n\n  const renderContent = (component = 'span') => {\n    return hideValue ? null : (\n      <Box\n        component={component}\n        ml={valuePos === 'right' ? 2 : 0}\n        mr={valuePos === 'left' ? 2 : 0}\n        className={clsx(classes.textContainer, 'Cmt-text-container', {\n          [classes.textContainerRight]: valuePos === 'top-right' || valuePos === 'bottom-right',\n          [classes.textContainerCenter]: valuePos === 'top-center' || valuePos === 'bottom-center',\n        })}>\n        {(renderValue && renderValue(value, total)) || value}\n      </Box>\n    );\n  };\n\n  const renderLabel = () => {\n    return label ? (\n      <Box\n        ml={labelPos === 'right' ? 2 : 0}\n        mr={labelPos === 'left' ? 2 : 0}\n        className={clsx(classes.labelContainer, 'Cmt-label-container', {\n          [classes.labelContainerRight]: labelPos === 'top-right' || labelPos === 'bottom-right',\n          [classes.labelContainerCenter]: labelPos === 'top-center' || labelPos === 'bottom-center',\n        })}>\n        {label}\n      </Box>\n    ) : null;\n  };\n\n  return (\n    <Box className={clsx(classes.root, 'CmtProgressBar-root')} {...restProps}>\n      {topPositions.includes(labelPos) && <Box mb={2}>{renderLabel()}</Box>}\n      {topPositions.includes(valuePos) && <Box mb={2}>{renderContent('div')}</Box>}\n\n      <div className={classes.flexRoot}>\n        {labelPos === 'left' && renderLabel()}\n        {valuePos === 'left' && renderContent()}\n\n        {onlyContained ? (\n          <div className={clsx(classes.fillStyle, 'Cmt-fill-progress')} style={fillBarStyle} />\n        ) : (\n          <div className={classes.barContainer} style={{ backgroundColor: emptyColor, flex: 1 }}>\n            <div className={clsx(classes.fillStyle, 'Cmt-fill-progress')} style={fillBarStyle} />\n          </div>\n        )}\n\n        {valuePos === 'right' && renderContent()}\n        {labelPos === 'right' && renderLabel()}\n      </div>\n\n      {bottomPositions.includes(valuePos) && <Box mt={2}>{renderContent('div')}</Box>}\n      {bottomPositions.includes(labelPos) && <Box mt={2}>{renderLabel()}</Box>}\n    </Box>\n  );\n};\n\nCmtProgressBar.propTypes = {\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  labelPos: PropTypes.oneOf(positions),\n  total: PropTypes.number,\n  value: PropTypes.number.isRequired,\n  valuePos: PropTypes.oneOf(positions),\n  renderValue: PropTypes.func,\n  containedColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  emptyColor: PropTypes.string,\n  thickness: PropTypes.number,\n  pointer: PropTypes.bool,\n  pointerSize: PropTypes.number,\n  onlyContained: PropTypes.bool,\n  hideValue: PropTypes.bool,\n  gradientDirection: PropTypes.string,\n};\n\nCmtProgressBar.defaultProps = {\n  labelPos: 'top-left',\n  total: 100,\n  valuePos: 'right',\n  containedColor: '#1a90ff',\n  gradientDirection: 'to right',\n  emptyColor: '#e9ecef',\n  thickness: 4,\n  pointer: false,\n  pointerSize: 8,\n  onlyContained: false,\n  hideValue: false,\n};\n\nexport default React.memo(CmtProgressBar);\n","import React, { useState } from 'react';\nimport CmtBackDrop from '../../../../../@coremat/CmtBackDrop';\nimport CmtImage from '../../../../../@coremat/CmtImage';\nimport { Box, MenuItem, Select, Typography } from '@material-ui/core';\nimport CmtCardContent from '../../../../../@coremat/CmtCard/CmtCardContent';\nimport AppSelectBox from '../../../../../@jumbo/components/Common/formElements/AppSelectBox';\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts';\nimport CmtCardHeader from '../../../../../@coremat/CmtCard/CmtCardHeader';\nimport CmtAdvCardContent from '../../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\nimport Grid from '@material-ui/core/Grid';\nimport CmtAdvCard from '../../../../../@coremat/CmtAdvCard';\nimport { COLORS } from '../../dummyData';\nimport clsx from 'clsx';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { alpha } from '@material-ui/core/styles';\n\nrequire('highcharts/modules/exporting')(Highcharts);\nrequire('highcharts/highcharts-more')(Highcharts);\n\nconst useStyles = makeStyles(theme => ({\n  cardContentRoot: {\n    position: 'relative',\n  },\n  titleRoot: {\n    letterSpacing: 0.5,\n    marginBottom: 20,\n  },\n  listItemRoot: {\n    padding: 0,\n    '& .root': {\n      marginBottom: 1,\n    },\n    '& .Cmt-label-container': {\n      fontSize: 12,\n      color: theme.palette.text.secondary,\n    },\n  },\n  subTitleRoot: {\n    fontSize: 12,\n    color: theme.palette.text.secondary,\n  },\n  lossCategoryRoot: {\n    color: theme.palette.text.primary,\n    '& text': {\n      fill: theme.palette.text.primary,\n    },\n  },\n  countryCellItem: {\n    cursor: 'pointer',\n    padding: 10,\n    fontSize: 12,\n    transition: 'all .2s',\n    borderRadius: 4,\n    '&:hover, &.active': {\n      backgroundColor: alpha(theme.palette.common.dark, 0.04),\n      '& .text-hover': {\n        color: theme.palette.text.primary,\n      },\n    },\n    '&:hover': {\n      transform: 'translateY(-4px)',\n      boxShadow: `0 3px 10px 0 ${alpha(theme.palette.common.dark, 0.2)}`,\n    },\n  },\n}));\nconst Filter = props => {\n  const { currentFilter, setCurrentFilter, classes, filters = [] } = props;\n  const handleChange = event => {\n    setCurrentFilter(event.target.value);\n  };\n\n  return (\n    <CmtCardContent>\n      <Box className={classes.backdropContent}>\n        <AppSelectBox\n          label=\"Filter with\"\n          data={filters}\n          valueKey=\"label\"\n          labelKey=\"label\"\n          value={currentFilter}\n          onChange={handleChange}\n        />\n      </Box>\n    </CmtCardContent>\n  );\n};\nconst FilterHeader = ({ currentFilter, classes }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\" mx={{ xs: -2, sm: -4 }}>\n      <Box className={classes.headerItem}>\n        {/*<DashboardIcon />*/}\n        {currentFilter}\n      </Box>\n      {/*<Box className={classes.headerItem}>*/}\n      {/*  <CalendarTodayIcon />*/}\n      {/*  {getFormattedDate(startDate, ' DD MMM')} - {getFormattedDate(endDate, ' DD MMM')}*/}\n      {/*</Box>*/}\n    </Box>\n  );\n};\nconst OldControlsChart = props => {\n  const { classes, currentFilter = 'Control Categories', data, setCurrentFilter, filters } = props;\n  const [revealed, setRevealed] = useState(false);\n  const handleOnRevealed = () => {\n    setRevealed(!revealed);\n  };\n  return (\n    <CmtBackDrop\n      concealedIcon={<CmtImage src={'/images/icons/filter_icon.png'} alt=\"filter\" />}\n      backLayerConcealed={revealed ? '' : <FilterHeader {...{ currentFilter, classes }} />}\n      backLayerRevealed={<Filter {...{ currentFilter, classes, setCurrentFilter, filters }} />}\n      onRevealed={handleOnRevealed}>\n      {/*<Box display=\"flex\" alignItems=\"center\" p={{ xs: 4, lg: 6, xl: 8 }}>*/}\n      {/*  <Box>*/}\n      {/*    <Box pl={{ xs: 4, lg: 6, xl: 8 }}>*/}\n      {/*      <Box display=\"flex\" alignItems=\"baseline\">*/}\n      {/*        /!*<Typography component=\"div\" variant=\"h4\">*!/*/}\n      {/*        /!*  Number of Risks per Loss Type*!/*/}\n      {/*        /!*</Typography>*!/*/}\n      {/*      </Box>*/}\n      {/*    </Box>*/}\n      {/*  </Box>*/}\n      {/*</Box>*/}\n      <Box padding={2}>\n        <ControlBubbleChart {...{ data }} />\n      </Box>\n    </CmtBackDrop>\n  );\n};\nconst ControlsChart = props => {\n  const { classes, currentFilter = 'Control Categories', data, setCurrentFilter, filters } = props;\n  const handleFilterChange = e => {\n    setCurrentFilter(e.target.value);\n  };\n  const getFilters = () => {\n    return (\n      <>\n        <Box component=\"span\" mr={3} height={10} width={10} bgcolor={COLORS[4]} borderRadius=\"50%\" />\n        <Select\n          className={classes.selectBoxRoot}\n          labelId=\"simple-select-label\"\n          id=\"simple\"\n          value={currentFilter}\n          onChange={handleFilterChange}>\n          {filters.map((item, index) => (\n            <MenuItem key={index} value={item.label}>\n              {item.label}\n            </MenuItem>\n          ))}\n        </Select>\n      </>\n    );\n  };\n  return (\n    <CmtAdvCard>\n      <CmtCardHeader title={'Risk Category Report'} subTitle={`Number of Risks based on ${currentFilter}`}>\n        {getFilters()}\n      </CmtCardHeader>\n      <CmtAdvCardContent className={classes.cardContentRoot}>\n        <Box padding={2}>\n          <ControlBubbleChart {...{ data }} />\n        </Box>\n        <Box padding={2}>\n          <Typography gutterBottom variant={'h4'}>\n            KEY\n          </Typography>\n          <ControlMapKey {...{ data }} />\n        </Box>\n      </CmtAdvCardContent>\n    </CmtAdvCard>\n  );\n};\nconst ControlMapKey = ({ data, ...rest }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Grid container spacing={1}>\n        {data !== undefined &&\n          data.length !== 0 &&\n          data[0].data.map((item, index) => (\n            <Grid item xs={12} md={3} key={index}>\n              <Box\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"space-between\"\n                className={clsx(classes.countryCellItem, {\n                  // active: department.name === item.name,\n                })}\n                {...rest}>\n                <Box component=\"span\" ml={3} height={10} width={10} bgcolor={item.color} borderRadius=\"50%\" />\n                <Box>\n                  <Box className=\"text-hover\" px={1}>\n                    <b>{item.slug}</b> - {item.name}\n                  </Box>\n                </Box>\n                <Box px={1} display=\"flex\" alignItems=\"center\">\n                  <Box mx={1}>{item.risks}</Box>\n                </Box>\n              </Box>\n            </Grid>\n          ))}\n      </Grid>\n    </>\n  );\n};\nconst ControlBubbleChart = props => {\n  const { data } = props;\n  const chartOptions = {\n    chart: {\n      type: 'packedbubble',\n      height: 400,\n      styleMode: false,\n    },\n    exporting: { enabled: false },\n    credits: {\n      enabled: false,\n    },\n    title: {\n      text: '',\n    },\n    tooltip: {\n      useHTML: true,\n      pointFormat: '<b>{point.name}:</b> {point.value}',\n    },\n    plotOptions: {\n      packedbubble: {\n        minSize: '50%',\n        maxSize: '120%',\n        // zMin: 0,\n        // zMax: 1000,\n        layoutAlgorithm: {\n          gravitationalConstant: 0.05,\n          splitSeries: true,\n          seriesInteraction: false,\n          dragBetweenSeries: false,\n          parentNodeLimit: true,\n        },\n        dataLabels: {\n          enabled: true,\n          format: '{point.slug}',\n          filter: {\n            property: 'y',\n            operator: '>',\n            value: 0,\n          },\n          style: {\n            color: 'black',\n            textOutline: 'none',\n            fontWeight: 'normal',\n          },\n        },\n      },\n    },\n    series: data,\n  };\n  return (\n    <>\n      <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n    </>\n  );\n};\nexport default ControlsChart;\n","import React, { useState } from 'react';\nimport CmtImage from '../../../../../@coremat/CmtImage';\nimport { Box, Paper, Typography } from '@material-ui/core';\nimport CmtBackDrop from '../../../../../@coremat/CmtBackDrop';\nimport CmtCardContent from '../../../../../@coremat/CmtCard/CmtCardContent';\nimport AppSelectBox from '../../../../../@jumbo/components/Common/formElements/AppSelectBox';\nimport {\n  CartesianGrid,\n  Cell,\n  Legend,\n  ResponsiveContainer,\n  Scatter,\n  ScatterChart,\n  Tooltip,\n  XAxis,\n  YAxis,\n  ZAxis,\n} from 'recharts';\nimport { probabilityList, residualList, severityList } from '../../../RiskManagement/dummyData';\nimport { blendColors } from '../../../../../@jumbo/utils/commonHelper';\nimport { alpha } from '@material-ui/core/styles';\nimport { GRADIENT_COLORS } from '../../dummyData';\n\nconst Filter = props => {\n  const { currentFilter, setCurrentFilter, classes, filters = [] } = props;\n  const handleChange = event => {\n    setCurrentFilter(event.target.value);\n  };\n\n  return (\n    <CmtCardContent>\n      <Box className={classes.backdropContent}>\n        <AppSelectBox\n          label=\"Filter with\"\n          data={filters}\n          valueKey=\"label\"\n          labelKey=\"label\"\n          value={currentFilter}\n          onChange={handleChange}\n        />\n      </Box>\n    </CmtCardContent>\n  );\n};\nconst FilterHeader = ({ currentFilter, classes }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\" mx={{ xs: -2, sm: -4 }}>\n      <Box className={classes.headerItem}>\n        {/*<DashboardIcon />*/}\n        {currentFilter}\n      </Box>\n      {/*<Box className={classes.headerItem}>*/}\n      {/*  <CalendarTodayIcon />*/}\n      {/*  {getFormattedDate(startDate, ' DD MMM')} - {getFormattedDate(endDate, ' DD MMM')}*/}\n      {/*</Box>*/}\n    </Box>\n  );\n};\nconst ProbabilityChat = props => {\n  const { classes, currentFilter = 'Likelihood Vs Impact', data, filters, setCurrentFilter } = props;\n  const [revealed, setRevealed] = useState(false);\n  const handleOnRevealed = () => {\n    setRevealed(!revealed);\n  };\n  return (\n    <CmtBackDrop\n      concealedIcon={<CmtImage src={'/images/icons/filter_icon.png'} alt=\"filter\" />}\n      backLayerConcealed={revealed ? '' : <FilterHeader {...{ currentFilter, classes }} />}\n      backLayerRevealed={<Filter {...{ currentFilter, classes, filters, setCurrentFilter }} />}\n      onRevealed={handleOnRevealed}>\n      <Box display=\"flex\" alignItems=\"center\" p={{ xs: 4, lg: 6, xl: 8 }}>\n        <Box>\n          <Box pl={{ xs: 4, lg: 6, xl: 8 }}>\n            <Box display=\"flex\" alignItems=\"baseline\">\n              <Typography component=\"div\" variant=\"h4\">\n                Likelihood Vs Impact\n              </Typography>\n              <Box flex={'1 0 auto'} />\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n      <Box padding={2}>\n        <ProbabilityBubbleChart {...{ data }} />\n      </Box>\n    </CmtBackDrop>\n  );\n};\n\nexport const ProbabilityBubbleChart = props => {\n  const { data } = props;\n  const getColor = data => {\n    const product = data.x * data.y;\n    return computeResidual(product);\n    // const probability = [...probabilityList];\n    // const severity = [...severityList];\n    // const probColor = probability.find(element => element.orderIndex + 1 === data.x);\n    // const severColor = severity.find(element => element.orderIndex + 1 === data.y);\n    // return blendColors(probColor.color, severColor.color, 1);\n  };\n  const computeResidual = value => {\n    const residualRisk = [...residualList];\n    let index;\n    if (value > 0 && value <= 4) {\n      index = 4;\n    } else if (value > 4 && value <= 8) {\n      index = 8;\n    } else if (value > 8 && value <= 12) {\n      index = 12;\n    } else if (value > 12 && value <= 16) {\n      index = 16;\n    }\n    const residual = residualRisk.find(element => element.value === index);\n    return residual.color;\n  };\n  const getGradientColor = color => {\n    const gradientColor = GRADIENT_COLORS.find(element => element[0] === color);\n    console.log(`${color + ':' + gradientColor}`);\n    if (gradientColor !== undefined) {\n      return gradientColor[1];\n    }\n    return null;\n  };\n  const getLabelX = tick => {\n    const probability = [...probabilityList];\n    const probColor = probability.find(element => element.orderIndex + 1 === tick);\n    return probColor.name;\n  };\n  const getLabelY = tick => {\n    //console.log(tick);\n    const severity = [...severityList];\n    const severColor = severity.find(element => element.orderIndex + 1 === tick);\n    if (tick !== 0) {\n      return severColor.name;\n    }\n    return '';\n  };\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      const residual = payload[0].value * payload[1].value;\n      return (\n        <Box component={Paper} gridRowGap={'2px'} boxShadow={2} padding={2} bgcolor={alpha(computeResidual(residual), 0.5)}>\n          <Typography variant={'h5'}>{payload[0].payload.name}</Typography>\n          <Typography variant={'caption'} component={'p'}>{`${payload[0].name} : ${getLabelX(\n            payload[0].value,\n          )}`}</Typography>\n          <Typography variant={'caption'} component={'p'}>{`${payload[1].name} : ${getLabelY(\n            payload[1].value,\n          )}`}</Typography>\n          <Typography variant={'caption'} component={'p'}>{`No of ${payload[2].name} : ${payload[2].value}`}</Typography>\n        </Box>\n      );\n    }\n    return null;\n  };\n  return (\n    <ResponsiveContainer width={'100%'} height={300}>\n      <ScatterChart\n        margin={{\n          top: 20,\n          right: 20,\n          bottom: 20,\n          left: 20,\n        }}>\n        {/*<CartesianGrid strokeDasharray=\"3 3\" />*/}\n        <XAxis\n          dataKey=\"x\"\n          // type={'category'}\n          name=\"Likelihood\"\n          //tick={customLabelAxis}\n          allowDuplicatedCategory={false}\n          tickFormatter={getLabelX}\n        />\n        <YAxis\n          dataKey=\"y\"\n          // type={'category'}\n          name=\"Impact\"\n          //tick={customLabelYAxis}\n          allowDuplicatedCategory={false}\n          tickFormatter={getLabelY}\n        />\n        <ZAxis dataKey=\"z\" type={'number'} range={[200, 800]} name=\"Risks\" />\n        <Tooltip cursor={{ strokeDasharray: '3 3' }} content={CustomTooltip} />\n        <Scatter name=\"Risks\" data={data}>\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={`${getColor(entry)}`} />\n          ))}\n        </Scatter>\n        {/*<defs>*/}\n        {/*  {data.map((risk, index) => (*/}\n        {/*    <linearGradient key={index} id={`color${index}`} x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\" gradientTransform=\"rotate(90)\">*/}\n        {/*      <stop offset=\"20%\" stopColor={getColor(risk)} stopOpacity={1} />*/}\n        {/*      <stop offset=\"100%\" stopColor={getGradientColor(`${getColor(risk)}`)} stopOpacity={1} />*/}\n        {/*    </linearGradient>*/}\n        {/*  ))}*/}\n        {/*</defs>*/}\n      </ScatterChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default ProbabilityChat;\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport CmtAdvCard from '../../../../../@coremat/CmtAdvCard';\nimport CmtCardHeader from '../../../../../@coremat/CmtCard/CmtCardHeader';\nimport CmtAdvCardContent from '../../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\nimport GridContainer from '../../../../../@jumbo/components/GridContainer';\nimport { MenuItem, Select, Typography } from '@material-ui/core';\nimport CmtList from '../../../../../@coremat/CmtList';\nimport { ListItem } from '@mui/material';\nimport CmtProgressBar from '../../../../../@coremat/CmtProgressBar';\nimport { ProbabilityBubbleChart } from './ProbabilityBubbleChat';\nimport clsx from 'clsx';\nimport {COLORS, GRADIENT_COLORS} from '../../dummyData';\nimport { alpha } from '@material-ui/core/styles';\nimport { residualList } from '../../../RiskManagement/dummyData';\n\nconst useStyles = makeStyles(theme => ({\n  cardContentRoot: {\n    position: 'relative',\n  },\n  selectBoxRoot: {\n    '&:before, &:after': {\n      display: 'none',\n    },\n    '& .MuiSelect-select:focus': {\n      backgroundColor: 'transparent',\n    },\n  },\n  titleRoot: {\n    letterSpacing: 0.5,\n    marginBottom: 20,\n  },\n  listItemRoot: {\n    padding: 0,\n    '& .root': {\n      marginBottom: 1,\n    },\n    '& .Cmt-label-container': {\n      fontSize: 12,\n      color: theme.palette.text.secondary,\n    },\n  },\n  subTitleRoot: {\n    fontSize: 12,\n    color: theme.palette.text.secondary,\n  },\n  lossCategoryRoot: {\n    color: theme.palette.text.primary,\n    '& text': {\n      fill: theme.palette.text.primary,\n    },\n  },\n  countryCellItem: {\n    cursor: 'pointer',\n    padding: 10,\n    fontSize: 12,\n    transition: 'all .2s',\n    borderRadius: 4,\n    '&:hover, &.active': {\n      backgroundColor: alpha(theme.palette.common.dark, 0.04),\n      '& .text-hover': {\n        color: theme.palette.text.primary,\n      },\n    },\n    '&:hover': {\n      transform: 'translateY(-4px)',\n      boxShadow: `0 3px 10px 0 ${alpha(theme.palette.common.dark, 0.2)}`,\n    },\n  },\n}));\n\nconst LossTypeProbabilityChart = props => {\n  const { data, lossTypeData, currentFilter, setCurrentFilter, filters } = props;\n  const classes = useStyles();\n  const handleFilterChange = e => {\n    setCurrentFilter(e.target.value);\n  };\n  const getFilters = () => {\n    return (\n      <>\n        <Box component=\"span\" mr={3} height={10} width={10} bgcolor={COLORS[4]} borderRadius=\"50%\" />\n        <Select\n          className={classes.selectBoxRoot}\n          labelId=\"simple-select-label\"\n          id=\"simple\"\n          value={currentFilter}\n          onChange={handleFilterChange}>\n          {filters.map((item, index) => (\n            <MenuItem key={index} value={item.label}>\n              {item.label}\n            </MenuItem>\n          ))}\n        </Select>\n      </>\n    );\n  };\n  return (\n    <CmtAdvCard>\n      <CmtCardHeader title={'Likelihood Vs Impact Report'} subTitle={`Number of Risks based on ${currentFilter}`}>\n        {getFilters()}\n      </CmtCardHeader>\n      <CmtAdvCardContent className={classes.cardContentRoot}>\n        <GridContainer>\n          <Grid item xs={12} lg={8}>\n            <GridContainer spacing={1}>\n              <Grid item xs={12} md={12}>\n                <ProbabilityBubbleChart {...{ data }} />\n              </Grid>\n              <Grid item xs={12} md={12}>\n                <Typography variant={'h4'} gutterBottom>\n                  KEY\n                </Typography>\n                <ProbabilityKey {...{ data }} />\n              </Grid>\n            </GridContainer>\n          </Grid>\n          <Grid item xs={12} lg={4}>\n            <Typography align={'center'} variant={'h4'}>\n              Loss Category (%)\n            </Typography>\n            <Box mt={1} className={classes.lossCategoryRoot}>\n              <LossTypeProgress data={lossTypeData} />\n            </Box>\n          </Grid>\n        </GridContainer>\n      </CmtAdvCardContent>\n    </CmtAdvCard>\n  );\n};\nconst ProbabilityKey = ({ data, ...rest }) => {\n  const classes = useStyles();\n  const computeResidual = value => {\n    const residualRisk = [...residualList];\n    let index;\n    if (value > 0 && value <= 4) {\n      index = 4;\n    } else if (value > 4 && value <= 8) {\n      index = 8;\n    } else if (value > 8 && value <= 12) {\n      index = 12;\n    } else if (value > 12 && value <= 16) {\n      index = 16;\n    }\n    const residual = residualRisk.find(element => element.value === index);\n    return residual.color;\n  };\n  return (\n    <>\n      <Grid container spacing={1}>\n        {data.length !== 0 &&\n          data.map((item, index) => (\n            <Grid item xs={12} md={6} key={index}>\n              <Box\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"space-between\"\n                className={clsx(classes.countryCellItem, {\n                  //active: department.name === item.name,\n                })}\n                {...rest}>\n                <Box\n                  component=\"span\"\n                  ml={3}\n                  height={10}\n                  width={10}\n                  bgcolor={computeResidual(item.x * item.y)}\n                  borderRadius=\"50%\"\n                />\n                <Box>\n                  <Box className=\"text-hover\" px={1}>\n                    <b>{item.slug}</b> - {item.name}\n                  </Box>\n                </Box>\n                <Box px={1} display=\"flex\" alignItems=\"center\">\n                  <Box mx={1}>{item.z}</Box>\n                </Box>\n              </Box>\n            </Grid>\n          ))}\n      </Grid>\n    </>\n  );\n};\nconst LossTypeProgress = ({ data }) => {\n  const classes = useStyles();\n  return (\n    <CmtList\n      data={data}\n      renderRow={(item, index) => {\n        return (\n          <ListItem key={index} component=\"div\" className={classes.listItemRoot}>\n            <Box width={'100%'}>\n              <CmtProgressBar\n                label={<Box mb={-1}>{item.label}</Box>}\n                labelPos=\"top-left\"\n                value={item.value}\n                renderValue={value => {\n                  return `${value}%`;\n                }}\n                containedColor={item.color}\n                thickness={7}\n                onlyContained\n              />\n            </Box>\n          </ListItem>\n        );\n      }}\n    />\n  );\n};\n\nexport default LossTypeProbabilityChart;\n"],"sourceRoot":""}