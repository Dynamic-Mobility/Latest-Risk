{"version":3,"sources":["redux/actions/Compliance.js","routes/Pages/ComplianceModule/StatutoryCompliance/AddEditStatutoryCompliance/AddDepartmentForm.js","routes/Pages/ComplianceModule/StatutoryCompliance/AddEditStatutoryCompliance/index.js"],"names":["fetchLegalCompliance","dispatch","a","axiosInstance","useAxios","get","API_URL","FETCH_LEGAL","then","res","status","REQUEST_STATUS","STATUS_OK","type","COMPLIANCE","LEGAL","GET_ALL","payload","data","catch","err","addLegalCompliance","callBackFunc","post","CREATE_LEGAL","fetchSuccess","id","ADD_ONE","console","log","undefined","response","BAD_REQUEST","fetchError","errors","Name","message","updateLegalCompliance","updatedData","UPDATE_LEGAL","UPDATE_ONE","fetchEnterpriseCompliance","FETCH_ENTERPRISE","ENTERPRISE","addEnterpriseCompliance","CREATE_ENTERPRISE","updateEnterpriseCompliance","UPDATE_ENTERPRISE","fetchStatutoryCompliance","FETCH_STATUTORY","STATUTORY","fetchCompliances","FETCH_COMPLIANCES","formattedData","length","map","datum","push","compliance","GET_COMPLIANCES","fetchApprovals","FETCH_APPROVALS","GET_APPROVALS","addStatutoryCompliance","CREATE_STATUTORY","updateStatutoryCompliance","UPDATE_STATUTORY","approveCompliance","APPROVE_COMPLIANCE","success","complyCompliance","COMPLY_COMPLIANCE","AddDepartmentForm","props","departments","sections","subSections","organization","complianceDetails","index","handleOnDepartmentChange","handleOnSectionChange","handleOnSubSectionChange","handleRemoveDept","GridContainer","Grid","item","md","xs","Autocomplete","fullWidth","options","getFilteredOptions","value","getAutoCompleteValue","departmentId","getOptionLabel","option","name","onChange","renderOption","selected","key","renderInput","params","TextField","required","helperText","companyId","size","variant","label","sectionId","subSectionId","IconButton","color","onClick","e","Close","fontSize","initialBreadcrumbs","HEADER","DASHBOARD","link","AppHeader","classes","useStyles","handleOnSave","showForm","handleOnCancel","isEditable","setIsEditable","Box","className","inBuildAppHeader","inBuildAppHeaderSidebar","style","history","back","ArrowBack","Typography","inBuildAppHeaderTitle","component","inBuildAppHeaderContent","ml","display","alignItems","Button","backgroundColor","steps","SideBarIncident","activeStep","handleNext","handlePrev","setActiveStep","inBuildAppSidebar","perfectScrollbarContactSidebar","justifyItems","justifyContent","mt","disabled","ArrowBackIos","m","ArrowForwardIos","List","appNav","CmtList","renderRow","SideBarItem","labelRef","useRef","Fragment","ListItem","ref","button","title","clsx","appNavItem","appTaskNavItem","active","completed","ListItemText","primary","ComplianceContent","useDispatch","risks","useSelector","riskUniverse","subsidiaries","currentSubsidiary","users","utils","currencies","priorities","complianceFrequencies","setComplianceDetails","useState","Date","selectedDeadline","setSelectedDeadline","initValue","statutoryComplianceData","useEffect","fetchRisks","flags","event","departmentName","sectionName","subSectionName","splice","submissionDeadline","moment","format","fetchSubsidiaries","fetchDepartments","fetchSections","fetchSubSections","fetchUsers","fetchComplianceFrequencies","fetchPriorities","fetchCurrencies","initialOrganization","inBuildAppMainContent","minHeight","perfectScrollbarContactCon","p","width","AppTextInput","target","multiline","minRows","description","authority","riskUniverseId","riskTitle","riskUniverseName","find","subsidiary","companyName","mb","startIcon","AddCircle","org","user","primaryOwnerId","firstName","lastName","primaryOwnerName","secondaryOwnerId","secondaryOwnerName","escalationOwnerId","escalationOwnerName","newValue","penaltyType","penalty","InputProps","startAdornment","InputAdornment","position","select","penaltyCurrency","disableUnderline","MenuItem","penaltyNarrative","AppSelectBox","valueKey","labelKey","priority","frequency","DatePicker","autoOk","clearable","inputVariant","date","animateYearScrolling","FormControlLabel","control","Checkbox","checked","hasSubCompliance","labelPlacement","isSubCompliance","hasAttachment","subId","pb","flex","Preview","rawHTML","isView","TableContainer","inBuildAppCard","Table","aria-label","TableHead","tableHeader","TableRow","TableCell","tableHeaderCell","TableBody","React","createElement","dangerouslySetInnerHTML","__html","departmentsName","sectionsName","subSectionsName","SuccessPage","handleReset","isUpdate","flexDirection","CmtImage","src","instructions","marginTop","to","AddEditStatutoryCompliance","initialDetails","complianceType","sourceDoc","breadcrumbs","setBreadcrumbs","setIsUpdate","location","useLocation","state","STATUTORY_COMPLIANCE","url","UPDATE_STATUTORY_COMPLIANCE","isActive","CREATE_STATUTORY_COMPLIANCE","PageContainer","heading","inBuildAppContainer","preventDefault","parseFloat"],"mappings":"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","file":"static/js/3.3e9226ff.chunk.js","sourcesContent":["import { COMPLIANCE, DEPARTMENTS } from '../../@jumbo/constants/ActionTypes';\r\nimport { fetchError, fetchSuccess } from './Common';\r\nimport { API_URL, REQUEST_STATUS } from '../../@jumbo/utils/apis';\r\nimport useAxios from '../../services/Requests/useAxios';\r\n\r\n//------------------ Legal Compliance -----------------------//\r\nexport const fetchLegalCompliance = () => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .get(`${API_URL.FETCH_LEGAL}`)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch({\r\n            type: COMPLIANCE.LEGAL.GET_ALL,\r\n            payload: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // if (err.response.status !== undefined) {\r\n        //   if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n        //     dispatch(fetchError(err.response.data.errors.Name[0]));\r\n        //   }\r\n        // } else {\r\n        //   dispatch(fetchError(err.message));\r\n        // }\r\n      });\r\n  };\r\n};\r\nexport const addLegalCompliance = (data, callBackFunc) => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.CREATE_LEGAL}`, data)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch(fetchSuccess('Legal Compliance Created Successfully!'));\r\n          data.id = res.data?.id;\r\n          dispatch({\r\n            type: COMPLIANCE.LEGAL.ADD_ONE,\r\n            payload: data,\r\n          });\r\n          callBackFunc();\r\n        }\r\n        console.log(res);\r\n      })\r\n      .catch(err => {\r\n        if (err.response.status !== undefined) {\r\n          if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n            dispatch(fetchError(err.response.data.errors?.Name[0]));\r\n          }\r\n        } else {\r\n          dispatch(fetchError(err.message));\r\n        }\r\n      });\r\n  };\r\n};\r\nexport const updateLegalCompliance = (updatedData, callBackFunc) => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.UPDATE_LEGAL}`, updatedData)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch(fetchSuccess('Compliance Updated Successfully!'));\r\n          dispatch({\r\n            type: COMPLIANCE.LEGAL.UPDATE_ONE,\r\n            payload: updatedData,\r\n          });\r\n          callBackFunc();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.response?.status !== undefined) {\r\n          if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n            dispatch(fetchError(err.response.data.errors?.Name[0]));\r\n          }\r\n        } else {\r\n          dispatch(fetchError(err.message));\r\n        }\r\n      });\r\n  };\r\n  // return dispatch => {\r\n  //   dispatch({\r\n  //     type: DEPARTMENTS.UPDATE_ONE,\r\n  //     payload: updatedData,\r\n  //   });\r\n  //   dispatch(fetchSuccess('Department Updated Successfully!'));\r\n  // };\r\n};\r\nexport const deleteLegalCompliance = id => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: COMPLIANCE.LEGAL.DELETE_ONE,\r\n      payload: id,\r\n    });\r\n    dispatch(fetchSuccess('Compliance Removed Successfully!'));\r\n  };\r\n};\r\n\r\n//------------------ Enterprise Compliance -----------------------//\r\nexport const fetchEnterpriseCompliance = () => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .get(`${API_URL.FETCH_ENTERPRISE}`)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch({\r\n            type: COMPLIANCE.ENTERPRISE.GET_ALL,\r\n            payload: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // if (err.response.status !== undefined) {\r\n        //   if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n        //     dispatch(fetchError(err.response.data.errors.Name[0]));\r\n        //   }\r\n        // } else {\r\n        //   dispatch(fetchError(err.message));\r\n        // }\r\n      });\r\n  };\r\n};\r\nexport const addEnterpriseCompliance = (data, callBackFunc) => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.CREATE_ENTERPRISE}`, data)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch(fetchSuccess('Enterprise Compliance Created Successfully!'));\r\n          data.id = res.data?.id;\r\n          dispatch({\r\n            type: COMPLIANCE.ENTERPRISE.ADD_ONE,\r\n            payload: data,\r\n          });\r\n          callBackFunc();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.response.status !== undefined) {\r\n          if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n            dispatch(fetchError(err.response.data.errors?.Name[0]));\r\n          }\r\n        } else {\r\n          dispatch(fetchError(err.message));\r\n        }\r\n      });\r\n  };\r\n};\r\nexport const updateEnterpriseCompliance = (updatedData, callBackFunc) => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.UPDATE_ENTERPRISE}`, updatedData)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch(fetchSuccess('Compliance Updated Successfully!'));\r\n          dispatch({\r\n            type: COMPLIANCE.ENTERPRISE.UPDATE_ONE,\r\n            payload: updatedData,\r\n          });\r\n          callBackFunc();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.response?.status !== undefined) {\r\n          if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n            dispatch(fetchError(err.response.data.errors?.Name[0]));\r\n          }\r\n        } else {\r\n          dispatch(fetchError(err.message));\r\n        }\r\n      });\r\n  };\r\n  // return dispatch => {\r\n  //   dispatch({\r\n  //     type: DEPARTMENTS.UPDATE_ONE,\r\n  //     payload: updatedData,\r\n  //   });\r\n  //   dispatch(fetchSuccess('Department Updated Successfully!'));\r\n  // };\r\n};\r\nexport const deleteEnterpriseCompliance = id => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: COMPLIANCE.ENTERPRISE.DELETE_ONE,\r\n      payload: id,\r\n    });\r\n    dispatch(fetchSuccess('Compliance Removed Successfully!'));\r\n  };\r\n};\r\n\r\n//------------------ Statutory Compliance -----------------------//\r\nexport const fetchStatutoryComplianceMain = () => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .get(`${API_URL.FETCH_STATUTORY_MAIN}`)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch({\r\n            type: COMPLIANCE.STATUTORY.GET_ALL,\r\n            payload: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // if (err.response.status !== undefined) {\r\n        //   if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n        //     dispatch(fetchError(err.response.data.errors.Name[0]));\r\n        //   }\r\n        // } else {\r\n        //   dispatch(fetchError(err.message));\r\n        // }\r\n      });\r\n  };\r\n};\r\nexport const fetchStatutoryCompliance = () => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .get(`${API_URL.FETCH_STATUTORY}`)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch({\r\n            type: COMPLIANCE.STATUTORY.GET_ALL,\r\n            payload: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // if (err.response.status !== undefined) {\r\n        //   if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n        //     dispatch(fetchError(err.response.data.errors.Name[0]));\r\n        //   }\r\n        // } else {\r\n        //   dispatch(fetchError(err.message));\r\n        // }\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchCompliances = () => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .get(`${API_URL.FETCH_COMPLIANCES}`)\r\n      .then(res => {\r\n        const { data } = res;\r\n        const formattedData = [];\r\n        if (data.length > 0) {\r\n          data.map(datum => formattedData.push({ ...datum.compliance }));\r\n        }\r\n\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch({\r\n            type: COMPLIANCE.STATUTORY.GET_COMPLIANCES,\r\n            payload: formattedData,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // if (err.response.status !== undefined) {\r\n        //   if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n        //     dispatch(fetchError(err.response.data.errors.Name[0]));\r\n        //   }\r\n        // } else {\r\n        //   dispatch(fetchError(err.message));\r\n        // }\r\n      });\r\n  };\r\n};\r\n\r\n\r\n// FETCH APPROVALS\r\nexport const fetchApprovals = () => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance.get(`${API_URL.FETCH_APPROVALS}`).then(res => {\r\n      const { data } = res;\r\n      const formattedData = [];\r\n      if (data.length > 0) {\r\n        data.map(datum => formattedData.push({ ...datum.compliance }));\r\n      }\r\n\r\n      if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n        dispatch({\r\n          type: COMPLIANCE.STATUTORY.GET_APPROVALS,\r\n          payload: formattedData,\r\n        });\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchStatutoryComplianceSub = id => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    return await axiosInstance\r\n      .post(`${API_URL.FETCH_STATUTORY_SUB}`, { id })\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch({\r\n            type: COMPLIANCE.STATUTORY.GET_SUB,\r\n            payload: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // if (err.response.status !== undefined) {\r\n        //   if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n        //     dispatch(fetchError(err.response.data.errors.Name[0]));\r\n        //   }\r\n        // } else {\r\n        //   dispatch(fetchError(err.message));\r\n        // }\r\n      });\r\n  };\r\n};\r\nexport const addStatutoryCompliance = (data, callBackFunc) => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.CREATE_STATUTORY}`, data)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch(fetchSuccess('Statutory Compliance Created Successfully!'));\r\n          data.id = res.data?.id;\r\n          dispatch({\r\n            type: COMPLIANCE.STATUTORY.ADD_ONE,\r\n            payload: data,\r\n          });\r\n          callBackFunc();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.response.status !== undefined) {\r\n          if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n            dispatch(fetchError(err.response.data.errors?.Name[0]));\r\n          }\r\n        } else {\r\n          dispatch(fetchError(err.message));\r\n        }\r\n      });\r\n  };\r\n};\r\nexport const updateStatutoryCompliance = (updatedData, callBackFunc) => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.UPDATE_STATUTORY}`, updatedData)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch(fetchSuccess('Compliance Updated Successfully!'));\r\n          dispatch({\r\n            type: COMPLIANCE.STATUTORY.UPDATE_ONE,\r\n            payload: updatedData,\r\n          });\r\n          callBackFunc();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.response?.status !== undefined) {\r\n          if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n            dispatch(fetchError(err.response.data.errors?.Name[0]));\r\n          }\r\n        } else {\r\n          dispatch(fetchError(err.message));\r\n        }\r\n      });\r\n  };\r\n  // return dispatch => {\r\n  //   dispatch({\r\n  //     type: DEPARTMENTS.UPDATE_ONE,\r\n  //     payload: updatedData,\r\n  //   });\r\n  //   dispatch(fetchSuccess('Department Updated Successfully!'));\r\n  // };\r\n};\r\nexport const deleteStatutoryCompliance = id => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: COMPLIANCE.STATUTORY.DELETE_ONE,\r\n      payload: id,\r\n    });\r\n    dispatch(fetchSuccess('Compliance Removed Successfully!'));\r\n  };\r\n};\r\n\r\n// APPROVE COMPLIANCE\r\nexport const approveCompliance = data => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.APPROVE_COMPLIANCE}`, data)\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          dispatch(fetchSuccess('Compliance Approved Successfully!'));\r\n        } else {\r\n          dispatch(fetchError(res.data.message ?? 'Ann error occured try again later!'));\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\n\r\n// COMPLY COMPLIANCE\r\nexport const complyCompliance = data => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.COMPLY_COMPLIANCE}`, data)\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          dispatch(fetchSuccess('Complied Successfully!'));\r\n        } else {\r\n          dispatch(fetchError(res.data.message ?? 'Ann error occured try again later!'));\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport GridContainer from '../../../../../@jumbo/components/GridContainer';\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { getAutoCompleteValue } from '../../../../../@jumbo/utils/commonHelper';\r\nimport { getFilteredOptions } from '../../../../../@jumbo/utils/commonHelper';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { Close } from '@material-ui/icons';\r\n\r\n  \r\nexport const AddDepartmentForm = props => {\r\n    \r\n  const {\r\n    departments,\r\n    sections,\r\n    subSections,\r\n    organization,\r\n    complianceDetails,\r\n    index,\r\n    handleOnDepartmentChange,\r\n    handleOnSectionChange,\r\n    handleOnSubSectionChange,\r\n    handleRemoveDept,\r\n  } = props;\r\n\r\n\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <Grid item md={4} xs={12}>\r\n          <Autocomplete\r\n            fullWidth\r\n            id={`department_${index}`}\r\n            options={getFilteredOptions(departments, complianceDetails, 'companyId')}\r\n            value={getAutoCompleteValue(departments, organization.departmentId)}\r\n            getOptionLabel={option => option.name}\r\n            onChange={handleOnDepartmentChange(index)}\r\n            renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\r\n            renderInput={params => (\r\n              <TextField\r\n                required\r\n                helperText={complianceDetails.companyId === '' ? 'Select Subsidiary' : ''}\r\n                fullWidth\r\n                {...params}\r\n                size={'small'}\r\n                variant={'outlined'}\r\n                label=\"Department\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n        <Grid item md={3} xs={12}>\r\n          <Autocomplete\r\n            fullWidth\r\n            options={getFilteredOptions(sections, organization, 'departmentId', 'departmentsId')}\r\n            value={getAutoCompleteValue(sections, organization.sectionId)}\r\n            getOptionLabel={option => option.name}\r\n            onChange={handleOnSectionChange(index)}\r\n            renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\r\n            renderInput={params => (\r\n              <TextField\r\n                helperText={organization.departmentId === '' ? 'Select Department' : ''}\r\n                fullWidth\r\n                {...params}\r\n                size={'small'}\r\n                variant={'outlined'}\r\n                label=\"Section\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n        <Grid item md={4} xs={12}>\r\n          <Autocomplete\r\n            fullWidth\r\n            options={getFilteredOptions(subSections, organization, 'sectionId', 'sectionsId')}\r\n            value={getAutoCompleteValue(subSections, organization.subSectionId)}\r\n            getOptionLabel={option => option.name}\r\n            onChange={handleOnSubSectionChange(index)}\r\n            renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\r\n            renderInput={params => (\r\n              <TextField fullWidth {...params} size={'small'} variant={'outlined'} label=\"Sub-Section\" />\r\n            )}\r\n          />\r\n        </Grid>\r\n        <Grid item md={1} xs={12}>\r\n          <IconButton color={'secondary'} onClick={e => handleRemoveDept(index)}>\r\n            <Close fontSize={'small'} />\r\n          </IconButton>\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from 'react';\nimport PageContainer from '../../../../../@jumbo/components/PageComponents/layouts/PageContainer';\nimport { HEADER } from '../../../../../@jumbo/constants/HeaderMessages';\nimport { AddDepartmentForm } from './AddDepartmentForm';\nimport { AddCircle } from '@material-ui/icons';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { fetchStatutoryCompliance } from '../../../../../redux/actions/Compliance';\nimport { fetchRisks } from '../../../../../redux/actions/RiskUniverse';\nimport {\n  Box,\n  Button,\n  Grid,\n  IconButton,\n  InputAdornment,\n  MenuItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { NotificationContainer } from 'react-notifications';\nimport useStyles from '../../../Roles/index.style';\nimport { ArrowBack } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { ArrowBackIos, ArrowForwardIos } from '@mui/icons-material';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CmtList from '../../../../../@coremat/CmtList';\nimport List from '@material-ui/core/List';\nimport GridContainer from '../../../../../@jumbo/components/GridContainer';\nimport AppTextInput from '../../../../../@jumbo/components/Common/formElements/AppTextInput';\nimport AppSelectBox from '../../../../../@jumbo/components/Common/formElements/AppSelectBox';\nimport { frequencies, priority } from '../../dummyData';\nimport { DatePicker } from '@material-ui/pickers';\nimport moment from 'moment';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchSubsidiaries } from '../../../../../redux/actions/Subsidiaries';\nimport { fetchDepartments } from '../../../../../redux/actions/Departments';\nimport { fetchSections } from '../../../../../redux/actions/Sections';\nimport { fetchSubSections } from '../../../../../redux/actions/SubSections';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Autocomplete } from '@material-ui/lab';\nimport { fetchUsers } from '../../../../../redux/actions/Users';\nimport { addStatutoryCompliance, updateStatutoryCompliance } from '../../../../../redux/actions/Compliance';\nimport CmtImage from '../../../../../@coremat/CmtImage';\nimport { fetchComplianceFrequencies, fetchCurrencies, fetchPriorities } from '../../../../../redux/actions/Utils';\nimport { fetchError } from '../../../../../redux/actions';\nimport { getAutoCompleteValue } from '../../../../../@jumbo/utils/commonHelper';\n\nconst initialBreadcrumbs = [{ label: HEADER.DASHBOARD, link: '/' }];\nconst AppHeader = props => {\n  const classes = useStyles();\n  const { handleOnSave, showForm, handleOnCancel, isEditable, setIsEditable } = props;\n  const handleBackClick = e => {\n    // eslint-disable-next-line no-restricted-globals\n    history.back();\n  };\n\n  return (\n    <Box className={classes.inBuildAppHeader}>\n      <Box className={classes.inBuildAppHeaderSidebar}>\n        {/*<CmtImage src={'/images/roles.png'} style={{ width: '50px' }} />*/}\n        <IconButton style={{ color: 'white' }} onClick={handleBackClick}>\n          <ArrowBack />\n        </IconButton>\n        <Typography className={classes.inBuildAppHeaderTitle} component=\"div\" variant=\"h1\">\n          Compliance\n        </Typography>\n      </Box>\n      <Box className={classes.inBuildAppHeaderContent}>\n        {showForm && (\n          <Box ml=\"auto\" display=\"flex\" alignItems=\"center\">\n            {isEditable ? (\n              <>\n                <Box ml={1}>\n                  <Button\n                    variant={'contained'}\n                    style={{ backgroundColor: 'green', color: 'white' }}\n                    size={'small'}\n                    onClick={handleOnSave}>\n                    Save\n                  </Button>\n                </Box>\n              </>\n            ) : (\n              <>\n                <Box ml={1}>\n                  <Button\n                    variant={'contained'}\n                    style={{ backgroundColor: 'green', color: 'white' }}\n                    size={'small'}\n                    onClick={() => setIsEditable(true)}>\n                    Edit\n                  </Button>\n                </Box>\n              </>\n            )}\n            <Box ml={1}>\n              <Button\n                variant={'contained'}\n                style={{ backgroundColor: 'darkred', color: 'white' }}\n                size={'small'}\n                onClick={handleOnCancel}>\n                Close\n              </Button>\n            </Box>\n          </Box>\n        )}\n      </Box>\n    </Box>\n  );\n};\nconst steps = ['1. Compliance Details', '2. Finish'];\nconst AddEditStatutoryCompliance = () => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const initialDetails = {\n    title: '',\n    description: '',\n    authority: '',\n    riskUniverseId: '',\n    companyId: '',\n    organization: [\n      {\n        departmentId: null,\n        departmentName: '',\n        sectionId: null,\n        sectionName: '',\n        subSectionId: null,\n        subSectionName: '',\n      },\n    ],\n    penaltyType: '',\n    penalty: 0,\n    penaltyNarrative: '',\n    penaltyCurrency: 'KES',\n    primaryOwnerId: null,\n    secondaryOwnerId: null,\n    escalationOwnerId: null,\n    priority: '',\n    frequency: 0,\n    // obligationStatus:'',\n    active: true,\n    submissionDeadline: '',\n    //\"nextDeadline\": \"2022-07-27T05:37:06.521Z\",\n    complianceType: '',\n    sourceDoc: '',\n    isSubCompliance: false,\n    hasSubCompliance: false,\n    subId: null,\n    hasAttachment: false\n  };\n  const [complianceDetails, setComplianceDetails] = useState(initialDetails);\n  const [breadcrumbs, setBreadcrumbs] = useState(initialBreadcrumbs);\n  const [isUpdate, setIsUpdate] = useState(false);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n  const handleReset = () => {\n    setComplianceDetails(initialDetails);\n    setIsUpdate(false);\n    setActiveStep(0);\n  };\n  const handleOnSave = e => {\n    e.preventDefault();\n    let data = { ...complianceDetails, penalty: parseFloat(complianceDetails.penalty) };\n    if (isUpdate) {\n      dispatch(updateStatutoryCompliance(data, () => handleNext()));\n    } else {\n      dispatch(addStatutoryCompliance(data, () => handleNext()));\n    }\n  };\n  const handlePrev = () => {\n    setActiveStep(activeStep - 1);\n  };\n  useEffect(() => {\n    if (location.state !== undefined) {\n      setBreadcrumbs([\n        ...breadcrumbs,\n        { label: HEADER.STATUTORY_COMPLIANCE.name, link: `/compliance/${HEADER.STATUTORY_COMPLIANCE.url}` },\n        { label: HEADER.UPDATE_STATUTORY_COMPLIANCE, isActive: true },\n      ]);\n      setComplianceDetails(location.state);\n      setIsUpdate(true);\n    } else {\n      setBreadcrumbs([\n        ...breadcrumbs,\n        { label: HEADER.STATUTORY_COMPLIANCE.name, link: `/compliance/${HEADER.STATUTORY_COMPLIANCE.url}` },\n        { label: HEADER.CREATE_STATUTORY_COMPLIANCE, isActive: true },\n      ]);\n      setComplianceDetails(initialDetails);\n      setIsUpdate(false);\n    }\n  }, [location]);\n\n  return (\n    <React.Fragment>\n      <PageContainer\n        heading={isUpdate ? HEADER.UPDATE_STATUTORY_COMPLIANCE : HEADER.CREATE_STATUTORY_COMPLIANCE}\n        breadcrumbs={breadcrumbs}>\n        <Box className={classes.inBuildAppCard}>\n          <AppHeader />\n          {activeStep === steps.length ? (\n            <Box className={clsx(classes.inBuildAppContainer)} minHeight={400}>\n              <Box width={'100%'} m={5}>\n                <SuccessPage {...{ classes, handleReset, isUpdate }} />\n              </Box>\n            </Box>\n          ) : (\n            <Box className={clsx(classes.inBuildAppContainer)}>\n              <SideBarIncident {...{ activeStep, handleNext, handlePrev, setActiveStep }} />\n              <ComplianceContent\n                {...{\n                  classes,\n                  isUpdate,\n                  activeStep,\n                  handleNext,\n                  handlePrev,\n                  handleReset,\n                  complianceDetails,\n                  setComplianceDetails,\n                  handleOnSave,\n                }}\n              />\n            </Box>\n          )}\n        </Box>\n      </PageContainer>\n      <NotificationContainer />\n    </React.Fragment>\n  );\n};\nconst SideBarIncident = props => {\n  const classes = useStyles();\n  const { activeStep, handleNext, handlePrev, setActiveStep } = props;\n  return (\n    <Box className={classes.inBuildAppSidebar}>\n      <PerfectScrollbar className={classes.perfectScrollbarContactSidebar}>\n        <Box display=\"flex\" justifyItems={'center'} justifyContent={'center'} mt={2}>\n          <IconButton color={'primary'} onClick={handlePrev} disabled={activeStep === 0}>\n            <ArrowBackIos />\n          </IconButton>\n          <Box m={1} />\n          <IconButton color={'primary'} onClick={handleNext} disabled={activeStep === steps.length - 1}>\n            <ArrowForwardIos />\n          </IconButton>\n        </Box>\n        <Box mt={5}>\n          <List component=\"nav\" className={classes.appNav}>\n            <CmtList\n              data={steps}\n              renderRow={(item, index) => (\n                <SideBarItem {...{ key: index, index, activeStep, item, classes, setActiveStep }} />\n              )}\n            />\n          </List>\n        </Box>\n      </PerfectScrollbar>\n    </Box>\n  );\n};\nconst SideBarItem = props => {\n  const { index, item, classes, activeStep, setActiveStep } = props;\n  const labelRef = useRef(null);\n\n  return (\n    <React.Fragment>\n      <ListItem\n        ref={labelRef}\n        button\n        title={item}\n        //disabled={activeStep < index}\n        onClick={e => setActiveStep(index)}\n        className={clsx(classes.appNavItem, classes.appTaskNavItem, {\n          active: index === activeStep,\n          completed: activeStep > index,\n        })}>\n        <ListItemText primary={item} className=\"Cmt-nav-text\" />\n      </ListItem>\n    </React.Fragment>\n  );\n};\n\nconst ComplianceContent = props => {\n  const dispatch = useDispatch();\n  const { risks } = useSelector(({riskUniverse}) => riskUniverse);\n  console.log(risks);\n  const { subsidiaries, currentSubsidiary } = useSelector(({ subsidiaries }) => subsidiaries);\n  const { departments } = useSelector(({ departments }) => departments);\n  const { sections } = useSelector(({ sections }) => sections);\n  const { subSections } = useSelector(({ subSections }) => subSections);\n  const { users } = useSelector(({ users }) => users);\n  const { currencies, priorities, complianceFrequencies } = useSelector(({ utils }) => utils);\n  const { classes, activeStep, handleNext, handlePrev, complianceDetails, setComplianceDetails, handleOnSave } = props;\n  const [selectedDeadline, setSelectedDeadline] = useState(new Date());\n  const initValue = { id: '', name: '' };\n  const options = ['Both', 'Quantitative', 'Qualitative'];\n  const [inputValue, setInputValue] = useState('');\n  // const [checked, setChecked] = useState(false);\n  // const [isSub, setIsSub] = useState(false);\n  // const [attachment, setAttachment] = useState(false);\n  const { statutoryComplianceData } = useSelector(({ compliance }) => compliance);\n\n\n\n  useEffect(() =>{\n    dispatch(fetchStatutoryCompliance());\n  },[])\n\n  useEffect(()=>{\n    dispatch(fetchRisks());\n  },[])\n\n\n  const flags  ={\n    first: \"HasSubCompliance\",\n    second:\"Link to an existing compliance\",\n    third:\"Compliance requires a supporting documentation\"\n  }\n\n  const hasSubComplianceCheck = e => {\n    setComplianceDetails({...complianceDetails, hasSubCompliance: e.target.checked});\n    console.log(e.target.checked);\n  };\n\n  const isSubComplianceCheck = e => {\n    setComplianceDetails({...complianceDetails, isSubCompliance: e.target.checked});\n    console.log(e.target.checked);\n  };\n\n  const handleAttachment = e => {\n    setComplianceDetails({...complianceDetails,hasAttachment: e.target.checked})\n    console.log(e.target.checked);\n  };\n\n  const handleComplianceOption =(e,value)=> {\n    if(value !== null){\n      setComplianceDetails({...complianceDetails, subId: value.id})\n    }\n    else{\n      setComplianceDetails({...complianceDetails, subId: null});\n    }\n  };\n\n  const handleTypeChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleOnSubsidiaryChange = (event, value) => {\n    if (value !== null) {\n      setComplianceDetails({\n        ...complianceDetails,\n        companyId: value.id,\n        companyName: value.name,\n      });\n    } else {\n      setComplianceDetails({\n        ...complianceDetails,\n        companyId: null,\n        companyName: '',\n      });\n    }\n  };\n\n  const handleRiskChange = (event,value) =>{\n    if(value !== null){\n      setComplianceDetails({\n        ...complianceDetails,\n        riskUniverseName: value.name,\n        riskUniverseId:value.id,\n      })\n    }else{\n      setComplianceDetails({\n        ...complianceDetails,\n        riskUniverseName: '',\n        riskUniverseId: null,\n      })\n    }\n  }\n  const handleOnDepartmentChange = index => (event, value) => {\n    const data = [...complianceDetails.organization];\n    if (value !== null) {\n      data[index] = {\n        departmentId: value.id,\n        departmentName: value.name,\n        sectionId: null,\n        sectionName: '',\n        subSectionId: null,\n        subSectionName: '',\n      };\n    } else {\n      data[index] = {\n        departmentId: null,\n        departmentName: '',\n        sectionId: null,\n        sectionName: '',\n        subSectionId: null,\n        subSectionName: '',\n      };\n    }\n    setComplianceDetails({ ...complianceDetails, organization: [...data] });\n  };\n  const handleOnSectionChange = index => (event, value) => {\n    const data = [...organization];\n    if (value !== null) {\n      data[index] = {\n        ...data[index],\n        sectionId: value.id,\n        sectionName: value.name,\n        subSectionId: null,\n        subSectionName: '',\n      };\n    } else {\n      data[index] = {\n        ...data[index],\n        sectionId: null,\n        sectionName: '',\n        subSectionId: null,\n        subSectionName: '',\n      };\n    }\n    setComplianceDetails({ ...complianceDetails, organization: [...data] });\n  };\n  const handleOnSubSectionChange = index => (event, value) => {\n    const data = [...organization];\n    if (value !== null) {\n      data[index] = {\n        ...data[index],\n        subSectionId: value.id,\n        subSectionName: value.name,\n      };\n    } else {\n      data[index] = {\n        ...data[index],\n        subSectionId: null,\n        subSectionName: '',\n      };\n    }\n    setComplianceDetails({ ...complianceDetails, organization: [...data] });\n  };\n\n  const handleOnPrimaryOwnerChange = (event, value) => {\n    if (value !== null) {\n      setComplianceDetails({\n        ...complianceDetails,\n        primaryOwnerId: value.id,\n        primaryOwnerName: value.firstName + ' ' + value.lastName,\n      });\n    } else {\n      setComplianceDetails({ ...complianceDetails, primaryOwnerId: null, primaryOwnerName: '' });\n    }\n  };\n  const handleOnSecondaryOwnerChange = (event, value) => {\n    if (value !== null) {\n      setComplianceDetails({\n        ...complianceDetails,\n        secondaryOwnerId: value.id,\n        secondaryOwnerName: value.firstName + ' ' + value.lastName,\n      });\n    } else {\n      setComplianceDetails({ ...complianceDetails, secondaryOwnerId: null, secondaryOwnerName: '' });\n    }\n  };\n  const handleOnEscalationOwnerChange = (event, value) => {\n    if (value !== null) {\n      setComplianceDetails({\n        ...complianceDetails,\n        escalationOwnerId: value.id,\n        escalationOwnerName: value.firstName + ' ' + value.lastName,\n      });\n    } else {\n      setComplianceDetails({ ...complianceDetails, escalationOwnerId: null, escalationOwnerName: '' });\n    }\n  };\n\n  const handleRemoveDept = index => {\n    const data = [...organization];\n    if (data.length - 1 !== 0) {\n      data.splice(index, 1);\n      setComplianceDetails({ ...complianceDetails, organization: data });\n    } else {\n      dispatch(fetchError('At least One Department is Required'));\n    }\n  };\n\n  useEffect(() => {\n    setComplianceDetails({\n      ...complianceDetails,\n      submissionDeadline: moment(selectedDeadline).format('YYYY-MM-DD'),\n    });\n  }, [selectedDeadline]);\n  useEffect(() => {\n    setComplianceDetails({\n      ...complianceDetails,\n      companyId: currentSubsidiary,\n    });\n  }, [currentSubsidiary]);\n  useEffect(() => {\n    dispatch(fetchSubsidiaries());\n    dispatch(fetchDepartments());\n    dispatch(fetchSections());\n    dispatch(fetchSubSections());\n    dispatch(fetchUsers());\n    dispatch(fetchComplianceFrequencies());\n    dispatch(fetchPriorities());\n    dispatch(fetchCurrencies());\n  }, []);\n\n  const { organization } = complianceDetails;\n  const initialOrganization = {\n    departmentId: null,\n    departmentName: '',\n    sectionId: null,\n    sectionName: '',\n    subSectionId: null,\n    subSectionName: '',\n  };\n  const handleAddDepartment = () => {\n    setComplianceDetails({ ...complianceDetails, organization: [...complianceDetails.organization, initialOrganization] });\n  };\n\n  return (\n    <>\n      <Box className={classes.inBuildAppMainContent} minHeight={400}>\n        <PerfectScrollbar className={classes.perfectScrollbarContactCon}>\n          <Box p={5} display=\"flex\">\n            {activeStep === 0 && (\n              <Box width={'100%'}>\n                <GridContainer>\n                  <Grid item md={12} xs={12}>\n                    <AppTextInput\n                      fullWidth\n                      variant=\"outlined\"\n                      label={'Compliance Title'}\n                      value={complianceDetails.title}\n                      onChange={e => setComplianceDetails({ ...complianceDetails, title: e.target.value })}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <AppTextInput\n                      fullWidth\n                      multiline\n                      minRows={4}\n                      variant=\"outlined\"\n                      label={'Compliance Description'}\n                      value={complianceDetails.description}\n                      onChange={e => setComplianceDetails({ ...complianceDetails, description: e.target.value })}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <AppTextInput\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Authority\"\n                      value={complianceDetails.authority}\n                      onChange={e => setComplianceDetails({ ...complianceDetails, authority: e.target.value })}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                  <Autocomplete\n                      fullWidth\n                      options={risks}\n                      value={getAutoCompleteValue(risks, complianceDetails.riskUniverseId)}\n                      getOptionLabel={option => option.riskTitle}\n                      onChange={handleRiskChange}\n                      renderOption={(option, { selected }) => <span key={option.id}>{option.riskTitle}</span>}\n                      renderInput={params => (\n                        <TextField required fullWidth {...params} size={'small'} variant={'outlined'} label=\"RiskUniverse\" />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <Autocomplete\n                      fullWidth\n                      options={subsidiaries}\n                      value={subsidiaries?.find(subsidiary => subsidiary.id === complianceDetails.companyId) ?? initValue}\n                      getOptionLabel={option => option.name}\n                      onChange={handleOnSubsidiaryChange}\n                      renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\n                      renderInput={params => (\n                        <TextField required fullWidth {...params} size={'small'} variant={'outlined'} label=\"Subsidiary\" />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <Box width={'100%'} mt={5} mb={2} display={'flex'}>\n                      <Button\n                        onClick={handleAddDepartment}\n                        type={'button'}\n                        size={'small'}\n                        startIcon={<AddCircle />}\n                        variant={'outlined'}\n                        color={'primary'}>\n                        Assign Department\n                      </Button>\n                    </Box>\n                  </Grid>\n\n                  {organization.length !== 0 &&\n                    organization.map((org, index) => (\n                      <Grid item md={12} xs={12}>\n                        <Box key={index} mt={3}>\n                          <AddDepartmentForm\n                            {...{\n                              departments,\n                              sections,\n                              subSections,\n                              organization: org,\n                              complianceDetails,\n                              handleOnDepartmentChange,\n                              handleOnSectionChange,\n                              handleOnSubSectionChange,\n                              index,\n                              handleRemoveDept,\n                            }}\n                          />\n                        </Box>\n                      </Grid>\n                    ))}\n                  <Grid item md={12} xs={12}>\n                    <Autocomplete\n                      fullWidth\n                      options={users}\n                      value={users.find(user => user.id === complianceDetails.primaryOwnerId) ?? initValue}\n                      getOptionLabel={option => option.name ?? option.firstName + ' ' + option.lastName}\n                      onChange={handleOnPrimaryOwnerChange}\n                      renderOption={(option, { selected }) => (\n                        <span key={option.id}>{option.firstName + ' ' + option.lastName}</span>\n                      )}\n                      renderInput={params => (\n                        <TextField fullWidth {...params} size={'small'} variant={'outlined'} label=\"Primary Owner\" />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <Autocomplete\n                      fullWidth\n                      options={users}\n                      value={users.find(user => user.id === complianceDetails.secondaryOwnerId) ?? initValue}\n                      getOptionLabel={option => option.name ?? option.firstName + ' ' + option.lastName}\n                      onChange={handleOnSecondaryOwnerChange}\n                      renderOption={(option, { selected }) => (\n                        <span key={option.id}>{option.firstName + ' ' + option.lastName}</span>\n                      )}\n                      renderInput={params => (\n                        <TextField fullWidth {...params} size={'small'} variant={'outlined'} label=\"Secondary Owner\" />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <Autocomplete\n                      fullWidth\n                      options={users}\n                      value={users.find(user => user.id === complianceDetails.escalationOwnerId) ?? initValue}\n                      getOptionLabel={option => option.name ?? option.firstName + ' ' + option.lastName}\n                      onChange={handleOnEscalationOwnerChange}\n                      renderOption={(option, { selected }) => (\n                        <span key={option.id}>{option.firstName + ' ' + option.lastName}</span>\n                      )}\n                      renderInput={params => (\n                        <TextField fullWidth {...params} size={'small'} variant={'outlined'} label=\"Escalation Owner\" />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <Autocomplete\n                      fullWidth\n                      options={options}\n                      onChange={(e, newValue) => setComplianceDetails({...complianceDetails, penaltyType: newValue})}\n                      value={complianceDetails.penaltyType}\n                      renderInput={params => (\n                        <TextField fullWidth {...params} size={'small'} variant={'outlined'} label=\"Penalty Types\" />\n                      )}\n                    />\n                  </Grid>\n\n                  {complianceDetails.penaltyType === options[0] ? (\n                    <>\n                      <Grid item md={6} xs={12}>\n                        <TextField\n                          fullWidth\n                          label=\"Penalty\"\n                          type={'number'}\n                          variant=\"outlined\"\n                          value={complianceDetails.penalty}\n                          onChange={e => {\n                            setComplianceDetails({ ...complianceDetails, penalty: e.target.value });\n                          }}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <TextField\n                                  select\n                                  style={{ width: '90px' }}\n                                  label=\"\"\n                                  value={complianceDetails.penaltyCurrency}\n                                  onChange={e =>\n                                    setComplianceDetails({ ...complianceDetails, penaltyCurrency: e.target.value })\n                                  }\n                                  InputProps={{\n                                    disableUnderline: true,\n                                  }}>\n                                  {currencies.map(option => (\n                                    <MenuItem key={option.id} value={option.name}>\n                                      {option.name}\n                                    </MenuItem>\n                                  ))}\n                                </TextField>\n                              </InputAdornment>\n                            ),\n                          }}\n                        />\n                      </Grid>\n                      <Grid item md={6} xs={12}>\n                        <AppTextInput\n                          fullWidth\n                          multiline\n                          minRows={4}\n                          variant=\"outlined\"\n                          label={'Narrative'}\n                          value={complianceDetails.description}\n                          onChange={e => setComplianceDetails({ ...complianceDetails, description: e.target.value })}\n                        />\n                      </Grid>\n                    </>\n                  ) : (\n                    null\n                  )}\n                  {complianceDetails.penaltyType === options[1] ? (\n                    <Grid item md={12} xs={12}>\n                      <TextField\n                        fullWidth\n                        label=\"Penalty\"\n                        type={'number'}\n                        variant=\"outlined\"\n                        value={complianceDetails.penalty}\n                        onChange={e => {\n                          setComplianceDetails({ ...complianceDetails, penalty: e.target.value });\n                        }}\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <TextField\n                                select\n                                style={{ width: '90px' }}\n                                label=\"\"\n                                value={complianceDetails.penaltyCurrency}\n                                onChange={e =>\n                                  setComplianceDetails({ ...complianceDetails, penaltyCurrency: e.target.value })\n                                }\n                                InputProps={{\n                                  disableUnderline: true,\n                                }}>\n                                {currencies.map(option => (\n                                  <MenuItem key={option.id} value={option.name}>\n                                    {option.name}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </InputAdornment>\n                          ),\n                        }}\n                      />\n                    </Grid>\n                  ) : (\n                    null\n                  )}\n                  {complianceDetails.penaltyType === options[2] ? (\n                    <Grid item md={12} xs={12}>\n                      <AppTextInput\n                        fullWidth\n                        multiline\n                        minRows={4}\n                        variant=\"outlined\"\n                        label={'Narrative'}\n                        value={complianceDetails.penaltyNarrative}\n                        onChange={e => setComplianceDetails({ ...complianceDetails, penaltyNarrative: e.target.value })}\n                      />\n                    </Grid>\n                  ) : (\n                   null\n                  )}\n\n                  <Grid item md={12} xs={12}>\n                    <AppSelectBox\n                      fullWidth\n                      data={priorities}\n                      label=\"Priority\"\n                      valueKey=\"name\"\n                      variant=\"outlined\"\n                      labelKey=\"name\"\n                      value={complianceDetails.priority}\n                      onChange={e => setComplianceDetails({ ...complianceDetails, priority: e.target.value })}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <AppSelectBox\n                      fullWidth\n                      data={complianceFrequencies}\n                      label=\"Frequency\"\n                      valueKey=\"id\"\n                      variant=\"outlined\"\n                      labelKey=\"name\"\n                      value={complianceDetails.frequency}\n                      onChange={e => setComplianceDetails({ ...complianceDetails, frequency: e.target.value })}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <DatePicker\n                      autoOk\n                      fullWidth\n                      clearable\n                      inputVariant={'outlined'}\n                      label=\"Submission Deadline\"\n                      onChange={date => {\n                        setSelectedDeadline(date);\n                      }}\n                      value={\n                        complianceDetails.submissionDeadline !== '' ? complianceDetails.submissionDeadline : selectedDeadline\n                      }\n                      format=\"DD-MM-yyyy\"\n                      animateYearScrolling\n                    />\n                  </Grid>\n                  <Grid item md={4} xs={12}>\n                    <FormControlLabel\n                      value=\"start\"\n                      control={<Checkbox checked={complianceDetails.hasSubCompliance} onChange={hasSubComplianceCheck} color=\"primary\" />}\n                      label={flags.first}\n                      labelPlacement=\"start\"\n                    />\n                  </Grid>\n                  <Grid item md={4} xs={12}>\n                    <FormControlLabel\n                      value=\"start\"\n                      control={<Checkbox checked={complianceDetails.isSubCompliance} onChange={isSubComplianceCheck} color=\"primary\" />}\n                      label={flags.second}\n                      labelPlacement=\"start\"\n                    />\n                  </Grid>\n                  <Grid item md={4} xs={12}>\n                    <FormControlLabel\n                      value=\"start\"\n                      control={<Checkbox checked={complianceDetails.hasAttachment} onChange={handleAttachment} color=\"primary\" />}\n                      label={flags.third}\n                      labelPlacement=\"start\"\n                    />\n                  </Grid>\n                  {complianceDetails.isSubCompliance ? (\n                    <Grid item md={12} xs={12}>\n                      <Autocomplete\n                        fullWidth\n                        options={statutoryComplianceData}\n                        value={getAutoCompleteValue(statutoryComplianceData, complianceDetails.subId)}\n                        getOptionLabel={option => option.title}\n                        onChange={handleComplianceOption}\n                        renderOption={(option, { selected }) => <span key={option.id}>{option.title}</span>}\n                        renderInput={params => ( \n                          <TextField fullWidth {...params} size={'small'} variant={'outlined'} label=\"Select Compliance\" />\n                        )}\n                      />\n                    </Grid>\n                  ) : (\n                    null\n                  )}\n                </GridContainer>\n              </Box>\n            )}\n            {activeStep === 1 && (\n              <Box width={'100%'}>\n                <Preview {...{ complianceDetails }} />\n              </Box>\n            )}\n          </Box>\n          <Box display=\"flex\" m={3} pb={3}>\n            {activeStep === steps.length - 1 && (\n              <Button onClick={handlePrev} variant={'contained'} color={'primary'} size={'small'}>\n                Prev\n              </Button>\n            )}\n            <Box flex={'1 0 auto'} />\n            {activeStep !== steps.length - 1 && (\n              <Button onClick={handleNext} variant={'contained'} color={'primary'} size={'small'}>\n                Continue\n              </Button>\n            )}\n            {activeStep === steps.length - 1 && (\n              <Button onClick={handleOnSave} variant={'contained'} color={'primary'} size={'small'}>\n                Save\n              </Button>\n            )}\n          </Box>\n        </PerfectScrollbar>\n      </Box>\n    </>\n  );\n};\nexport const Preview = props => {\n  const { complianceDetails, isView } = props;\n  const renderHTML = rawHTML => React.createElement('div', { dangerouslySetInnerHTML: { __html: rawHTML } });\n  const classes = useStyles();\n  return (\n    <TableContainer className={classes.inBuildAppCard}>\n      <Table size=\"small\" aria-label=\"a dense table\">\n        {!isView && (\n          <TableHead className={classes.tableHeader}>\n            <TableRow>\n              <TableCell className={classes.tableHeaderCell}>Field Name</TableCell>\n              <TableCell className={classes.tableHeaderCell}>Input Value</TableCell>\n            </TableRow>\n          </TableHead>\n        )}\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <b>Compliance Title</b>\n            </TableCell>\n            <TableCell>{complianceDetails.title !== '' ? complianceDetails.title : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Compliance Description</b>\n            </TableCell>\n            <TableCell>\n              {complianceDetails.description !== '' ? renderHTML(complianceDetails.description) : 'Not Set'}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Company</b>\n            </TableCell>\n            <TableCell>{complianceDetails.companyName !== '' ? complianceDetails.companyName : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Department</b>\n            </TableCell>\n            <TableCell>{complianceDetails.departmentsName !== '' ? complianceDetails.departmentsName : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Section</b>\n            </TableCell>\n            <TableCell>{complianceDetails.sectionsName !== '' ? complianceDetails.sectionsName : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Sub Section</b>\n            </TableCell>\n            <TableCell>{complianceDetails.subSectionsName !== '' ? complianceDetails.subSectionsName : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Authority</b>\n            </TableCell>\n            <TableCell>{complianceDetails.authority !== '' ? complianceDetails.authority : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Penalty in {complianceDetails.penaltyCurrency}</b>\n            </TableCell>\n            <TableCell>{complianceDetails.penalty !== '' ? complianceDetails.penalty : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Primary Owner</b>\n            </TableCell>\n            <TableCell>\n              {complianceDetails.primaryOwnerName !== '' ? complianceDetails.primaryOwnerName : 'Not Set'}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Secondary Owner</b>\n            </TableCell>\n            <TableCell>\n              {complianceDetails.secondaryOwnerName !== '' ? complianceDetails.secondaryOwnerName : 'Not Set'}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Escalation Person</b>\n            </TableCell>\n            <TableCell>\n              {complianceDetails.escalationOwnerName !== '' ? complianceDetails.escalationOwnerName : 'Not Set'}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Priority</b>\n            </TableCell>\n            <TableCell>{complianceDetails.priority !== '' ? complianceDetails.priority : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Frequency</b>\n            </TableCell>\n            <TableCell>{complianceDetails.frequency !== '' ? complianceDetails.frequency : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Submission Deadline</b>\n            </TableCell>\n            <TableCell>\n              {complianceDetails.submissionDeadline !== '' ? complianceDetails.submissionDeadline : 'Not Set'}\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\nconst SuccessPage = props => {\n  const { classes, handleReset, isUpdate } = props;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n      <CmtImage src={'/images/ic_ok.svg'} style={{ width: '50px' }} />\n      <p className={classes.instructions} style={{ marginTop: '10px' }}>\n        <b>Compliance was {isUpdate ? 'updated' : 'created'} successfully!</b>\n      </p>\n      <Box mt={10}>\n        <Link to={'/compliance/statutory-compliance'}>\n          <Button color={'primary'} variant={'contained'}>\n            Back to Compliance Dashboard\n          </Button>\n        </Link>\n        {!isUpdate && (\n          <Button onClick={handleReset} className={classes.button}>\n            Create New Compliance\n          </Button>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default AddEditStatutoryCompliance;\n"],"sourceRoot":""}