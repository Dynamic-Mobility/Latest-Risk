{"version":3,"sources":["../node_modules/@material-ui/icons/esm/Close.js","../node_modules/@material-ui/icons/esm/ArrowBackIos.js","../node_modules/@mui/icons-material/esm/PersonAdd.js","../node_modules/@mui/icons-material/esm/Work.js","../node_modules/@mui/icons-material/esm/PanoramaFishEye.js","routes/Pages/Users/AddEditUser/UserForm.js","routes/Pages/Users/AddEditUser/index.js"],"names":["createSvgIcon","React","d","_jsx","ColorlibConnector","withStyles","alternativeLabel","top","active","backgroundImage","completed","line","height","border","backgroundColor","borderRadius","StepConnector","useColorlibStepIconStyles","makeStyles","theme","root","zIndex","color","width","display","justifyContent","alignItems","boxShadow","ColorlibStepIcon","props","classes","icons","1","PersonAdd","2","Work","3","PanoramaFishEye","Box","className","clsx","String","icon","Preview","userDetails","organization","useStyles","TableContainer","inBuildAppCard","Table","size","aria-label","TableHead","tableHeader","TableRow","TableCell","tableHeaderCell","TableBody","firstName","lastName","email","phoneNumber","staffNumber","companyName","length","map","org","index","key","departmentName","sectionName","subSectionName","roleName","SuccessPage","handleReset","isUpdate","flexDirection","CmtImage","src","style","instructions","marginTop","mt","to","Button","variant","onClick","button","AddDepartmentForm","departments","sections","subSections","handleOnDepartmentChange","handleOnSectionChange","handleOnSubSectionChange","handleRemoveDept","GridContainer","Grid","item","md","xs","Autocomplete","fullWidth","id","options","getFilteredOptions","value","getAutoCompleteValue","departmentId","getOptionLabel","option","name","onChange","renderOption","selected","renderInput","params","TextField","required","helperText","companyId","label","sectionId","subSectionId","IconButton","e","Close","fontSize","UserForm","isValid","initialState","setUserDetails","subsidiaries","roles","setOpenDialog","currentSubsidiary","useSelector","initialOrganization","useState","activeStep","setActiveStep","steps","dispatch","useDispatch","handleNext","prevActiveStep","data","splice","fetchError","event","useEffect","roleId","fetchRoles","Stepper","connector","Step","StepLabel","StepIconComponent","pt","pb","pr","pl","flex","AppTextInput","type","target","isValidEmail","userName","mb","startIcon","AddCircle","justifyItems","disabled","ArrowBackIos","updateUser","addUser","Transition","forwardRef","ref","Slide","direction","ADDialog","openDialog","onCloseDialog","username","setUsername","handleOnSearchUsername","dialogRoot","position","dialogHeader","palette","primary","main","dialogTitleRoot","common","white","Dialog","open","onClose","TransitionComponent","DialogTitle","DialogContent","sx","marginBottom","sm","ml","AddEditUser","initialBreadcrumbs","HEADER","DASHBOARD","link","USERS","setIsValid","breadcrumbs","setBreadcrumbs","password","confirmPassword","ext_Number","setIsUpdate","filteredDepartments","filteredSections","filteredSubSections","rolesList","location","useLocation","undefined","state","EDIT_USER","isActive","CREATE_USER","phoneNo","checkErrors","fetchSubsidiaries","fetchDepartments","fetchSections","fetchSubSections","Fragment","PageContainer","heading","Paper","paper","console","log"],"mappings":"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","file":"static/js/6.1b36cdfa.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"\n}), 'ArrowBackIos');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm-9-2V7H4v3H1v2h3v3h2v-3h3v-2H6zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'PersonAdd');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 6h-4V4c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-6 0h-4V4h4v2z\"\n}), 'Work');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'PanoramaFishEye');","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Button from '@material-ui/core/Button';\nimport {\n  Box,\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\nimport { AccountBox, PanoramaFishEye, PersonAdd, Work } from '@mui/icons-material';\nimport GridContainer from '../../../../@jumbo/components/GridContainer';\nimport TextField from '@material-ui/core/TextField';\nimport AppTextInput from '../../../../@jumbo/components/Common/formElements/AppTextInput';\nimport { AddCircle, ArrowBackIos, Close } from '@material-ui/icons';\nimport { getAutoCompleteValue, getFilteredOptions, isValidEmail } from '../../../../@jumbo/utils/commonHelper';\nimport CmtImage from '../../../../@coremat/CmtImage';\nimport { Link } from 'react-router-dom';\nimport useStyles from '../../Roles/index.style';\nimport { Autocomplete } from '@material-ui/lab';\nimport { fetchRoles } from '../../../../redux/actions/Roles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchError } from '../../../../redux/actions';\nimport { addUser, updateUser } from '../../../../redux/actions/Users';\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  completed: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1,\n  },\n})(StepConnector);\nconst useColorlibStepIconStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  active: {\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n    // background: `linear-gradient(136deg, ${theme.palette.primary.main}, ${theme.palette.primary.main}  50%, ${theme.palette.secondary.main}  100%)`,\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n  },\n  completed: {\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n    //background: `linear-gradient(136deg, ${theme.palette.primary.main}, ${theme.palette.primary.main}  50%, ${theme.palette.secondary.main}  100%)`,\n  },\n}));\n\nfunction ColorlibStepIcon(props) {\n  const classes = useColorlibStepIconStyles();\n  const { active, completed } = props;\n\n  const icons = {\n    1: <PersonAdd />,\n    2: <Work />,\n    3: <PanoramaFishEye />,\n  };\n\n  return (\n    <Box\n      className={clsx(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed,\n      })}>\n      {icons[String(props.icon)]}\n    </Box>\n  );\n}\n\nColorlibStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node,\n};\n\nfunction getSteps() {\n  return ['Personal Details', 'Work Details', 'Preview'];\n}\n\nconst Preview = props => {\n  const { userDetails } = props;\n  const { organization } = userDetails;\n  const classes = useStyles();\n  return (\n    <TableContainer className={classes.inBuildAppCard}>\n      <Table size=\"small\" aria-label=\"a dense table\">\n        <TableHead className={classes.tableHeader}>\n          <TableRow>\n            <TableCell className={classes.tableHeaderCell}>Field Name</TableCell>\n            <TableCell className={classes.tableHeaderCell}>Input Value</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <b>First Name</b>\n            </TableCell>\n            <TableCell>{userDetails.firstName !== '' ? userDetails.firstName : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Last Name</b>\n            </TableCell>\n            <TableCell>{userDetails.lastName !== '' ? userDetails.lastName : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Email Address</b>\n            </TableCell>\n            <TableCell>{userDetails.email !== '' ? userDetails.email : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Phone Number</b>\n            </TableCell>\n            <TableCell>{userDetails.phoneNumber !== '' ? userDetails.phoneNumber : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Staff Number</b>\n            </TableCell>\n            <TableCell>{userDetails.staffNumber !== '' ? userDetails.staffNumber : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Subsidiary</b>\n            </TableCell>\n            <TableCell>{userDetails.companyName !== '' ? userDetails.companyName : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Department(s)</b>\n            </TableCell>\n            <TableCell>\n              {organization.length !== 0 && organization.map((org, index) => <li key={index}>{org.departmentName} </li>)}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Sections</b>\n            </TableCell>\n            <TableCell>\n              {organization.length !== 0 && organization.map((org, index) => <li key={index}>{org.sectionName}, </li>)}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Sub-Section</b>\n            </TableCell>\n            <TableCell>\n              {organization.length !== 0 && organization.map((org, index) => <li key={index}>{org.subSectionName} </li>)}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Role</b>\n            </TableCell>\n            <TableCell>{userDetails.roleName !== '' ? userDetails.roleName : 'Not Set'}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\nconst SuccessPage = props => {\n  const { classes, handleReset, isUpdate } = props;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n      <CmtImage src={'/images/ic_ok.svg'} style={{ width: '50px' }} />\n      <p className={classes.instructions} style={{ marginTop: '10px' }}>\n        <b>User was {isUpdate ? 'updated' : 'created'} successfully!</b>\n      </p>\n      {/*{!isUpdate && (*/}\n      {/*  <p>*/}\n      {/*    An email with login credential has also been sent to!{' '}*/}\n      {/*    <i>*/}\n      {/*      <b>{userDetails.email}</b>*/}\n      {/*    </i>*/}\n      {/*    .*/}\n      {/*  </p>*/}\n      {/*)}*/}\n      <Box mt={10}>\n        <Link to={'/users'}>\n          <Button color={'primary'} variant={'contained'}>\n            Back to Users Dashboard\n          </Button>\n        </Link>\n        {!isUpdate && (\n          <Button onClick={handleReset} className={classes.button}>\n            Create New User\n          </Button>\n        )}\n      </Box>\n    </Box>\n  );\n};\nconst UserForm = props => {\n  const {\n    isValid,\n    isUpdate,\n    initialState,\n    userDetails,\n    setUserDetails,\n    departments,\n    subsidiaries,\n    sections,\n    subSections,\n    roles,\n    setOpenDialog,\n  } = props;\n  const classes = useStyles();\n  const { currentSubsidiary } = useSelector(({ subsidiaries }) => subsidiaries);\n  const initialOrganization = {\n    departmentId: null,\n    departmentName: '',\n    sectionId: null,\n    sectionName: '',\n    subSectionId: null,\n    subSectionName: '',\n  };\n  const [activeStep, setActiveStep] = useState(0);\n  const steps = getSteps();\n  const { organization } = userDetails;\n  const dispatch = useDispatch();\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n  const handleRemoveDept = index => {\n    const data = [...organization];\n    if (data.length - 1 !== 0) {\n      data.splice(index, 1);\n      setUserDetails({ ...userDetails, organization: data });\n    } else {\n      dispatch(fetchError('At least One Department is Required'));\n    }\n  };\n  const handleAddDepartment = () => {\n    setUserDetails({ ...userDetails, organization: [...userDetails.organization, initialOrganization] });\n  };\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setUserDetails(initialState);\n  };\n\n  const handleSubmit = () => {\n    if (isUpdate) {\n      dispatch(updateUser(userDetails, () => handleNext()));\n    } else {\n      dispatch(addUser(userDetails, () => handleNext()));\n    }\n    //handleNext();\n  };\n  const handleOnSubsidiaryChange = (event, value) => {\n    if (value !== null) {\n      setUserDetails({\n        ...userDetails,\n        companyId: value.id,\n        companyName: value.name,\n        roleId: null,\n        roleName: '',\n        organization: [initialOrganization],\n      });\n      dispatch(fetchRoles(value.id));\n    } else {\n      setUserDetails({\n        ...userDetails,\n        companyId: '',\n        companyName: '',\n        roleId: null,\n        roleName: '',\n        organization: [initialOrganization],\n      });\n      dispatch(fetchRoles('All'));\n    }\n  };\n  const handleOnRoleChange = (event, value) => {\n    if (value !== null) {\n      setUserDetails({ ...userDetails, roleId: value.id, roleName: value.name });\n    } else {\n      setUserDetails({ ...userDetails, roleId: null, roleName: '' });\n    }\n  };\n  const handleOnDepartmentChange = index => (event, value) => {\n    const data = [...userDetails.organization];\n    if (value !== null) {\n      data[index] = {\n        departmentId: value.id,\n        departmentName: value.name,\n        sectionId: null,\n        sectionName: '',\n        subSectionId: null,\n        subSectionName: '',\n      };\n    } else {\n      data[index] = {\n        departmentId: null,\n        departmentName: '',\n        sectionId: null,\n        sectionName: '',\n        subSectionId: null,\n        subSectionName: '',\n      };\n    }\n    setUserDetails({ ...userDetails, organization: [...data] });\n  };\n  const handleOnSectionChange = index => (event, value) => {\n    const data = [...organization];\n    if (value !== null) {\n      data[index] = {\n        ...data[index],\n        sectionId: value.id,\n        sectionName: value.name,\n        subSectionId: null,\n        subSectionName: '',\n      };\n    } else {\n      data[index] = {\n        ...data[index],\n        sectionId: null,\n        sectionName: '',\n        subSectionId: null,\n        subSectionName: '',\n      };\n    }\n    setUserDetails({ ...userDetails, organization: [...data] });\n  };\n  const handleOnSubSectionChange = index => (event, value) => {\n    const data = [...organization];\n    if (value !== null) {\n      data[index] = {\n        ...data[index],\n        subSectionId: value.id,\n        subSectionName: value.name,\n      };\n    } else {\n      data[index] = {\n        ...data[index],\n        subSectionId: null,\n        subSectionName: '',\n      };\n    }\n    setUserDetails({ ...userDetails, organization: [...data] });\n  };\n\n  useEffect(() => {\n    setUserDetails({\n      ...userDetails,\n      companyId: currentSubsidiary,\n      roleId: null,\n      roleName: '',\n      organization: [initialOrganization],\n    });\n    dispatch(fetchRoles(currentSubsidiary));\n  }, [currentSubsidiary]);\n  return (\n    <Box className={classes.root}>\n      <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\n        {steps.map(label => (\n          <Step key={label}>\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <Box pt={5} pb={10} pr={10} pl={10}>\n        {activeStep === steps.length ? (\n          <SuccessPage {...{ classes, handleReset, userDetails, isUpdate }} />\n        ) : (\n          <Box display={'flex'} flexDirection={'column'}>\n            {activeStep === 0 && (\n              <>\n                <GridContainer>\n                  {!isUpdate && (\n                    <Grid item md={12} xs={12}>\n                      <Box display={'flex'}>\n                        <Box flex={'1 0 auto'} />\n                        <Button variant={'outlined'} color={'primary'} onClick={e => setOpenDialog(true)}>\n                          Import From Active Directory\n                        </Button>\n                      </Box>\n                    </Grid>\n                  )}\n                  <Grid item md={6} xs={12}>\n                    <AppTextInput\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"First Name\"\n                      helperText={userDetails.firstName === '' ? 'First Name is required.' : ''}\n                      type=\"text\"\n                      value={userDetails.firstName}\n                      onChange={e => setUserDetails({ ...userDetails, firstName: e.target.value })}\n                    />\n                  </Grid>\n                  <Grid item md={6} xs={12}>\n                    <AppTextInput\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Last Name\"\n                      helperText={userDetails.lastName === '' ? 'Last Name is required.' : ''}\n                      value={userDetails.lastName}\n                      onChange={e => setUserDetails({ ...userDetails, lastName: e.target.value })}\n                    />\n                  </Grid>\n                  <Grid item md={6} xs={12}>\n                    <AppTextInput\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Email Address\"\n                      helperText={isValidEmail(userDetails.email) ? '' : 'Email is Invalid!'}\n                      value={userDetails.email}\n                      onChange={e => setUserDetails({ ...userDetails, email: e.target.value, userName: e.target.value })}\n                    />\n                  </Grid>\n                  <Grid item md={6} xs={12}>\n                    <AppTextInput\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Phone Number\"\n                      value={userDetails.phoneNumber}\n                      helperText={userDetails.phoneNumber === '' ? 'Phone number is required.' : ''}\n                      onChange={e => setUserDetails({ ...userDetails, phoneNumber: e.target.value })}\n                    />\n                  </Grid>\n                </GridContainer>\n              </>\n            )}\n            {activeStep === 1 && (\n              <>\n                <GridContainer>\n                  <Grid item md={4} xs={12}>\n                    <AppTextInput\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Staff Number [Optional]\"\n                      value={userDetails.staffNumber}\n                      onChange={e => setUserDetails({ ...userDetails, staffNumber: e.target.value })}\n                    />\n                  </Grid>\n                  <Grid item md={4} xs={12}>\n                    <Autocomplete\n                      fullWidth\n                      options={subsidiaries}\n                      value={getAutoCompleteValue(subsidiaries, userDetails.companyId)}\n                      getOptionLabel={option => option.name}\n                      onChange={handleOnSubsidiaryChange}\n                      renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\n                      renderInput={params => (\n                        <TextField required fullWidth {...params} size={'small'} variant={'outlined'} label=\"Subsidiary\" />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item md={4} xs={12}>\n                    <Autocomplete\n                      fullWidth\n                      options={roles}\n                      value={getAutoCompleteValue(roles, userDetails.roleId)}\n                      getOptionLabel={option => option.name}\n                      onChange={handleOnRoleChange}\n                      renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\n                      renderInput={params => (\n                        <TextField fullWidth {...params} size={'small'} variant={'outlined'} label=\"Role\" />\n                      )}\n                    />\n                  </Grid>\n                </GridContainer>\n                <Box width={'100%'} mt={5} mb={2} display={'flex'}>\n                  <Button\n                    onClick={handleAddDepartment}\n                    type={'button'}\n                    size={'small'}\n                    startIcon={<AddCircle />}\n                    variant={'outlined'}\n                    color={'primary'}>\n                    Assign Department\n                  </Button>\n                </Box>\n\n                {organization.length !== 0 &&\n                  organization.map((org, index) => (\n                    <Box key={index} mt={3}>\n                      <AddDepartmentForm\n                        {...{\n                          departments,\n                          sections,\n                          subSections,\n                          organization: org,\n                          userDetails,\n                          handleOnDepartmentChange,\n                          handleOnSectionChange,\n                          handleOnSubSectionChange,\n                          index,\n                          handleRemoveDept,\n                        }}\n                      />\n                    </Box>\n                  ))}\n              </>\n            )}\n            {activeStep === 2 && (\n              <Box display={'flex'} alignItems={'center'} justifyItems=\"center\">\n                <Preview {...{ userDetails }} />\n              </Box>\n            )}\n            <Box display={'flex'} mt={10}>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                <ArrowBackIos /> Back\n              </Button>\n              <Box flex={'1 0 auto'} />\n              {activeStep === steps.length - 1 ? (\n                <Button\n                  variant=\"contained\"\n                  disabled={!isValid}\n                  color=\"primary\"\n                  onClick={handleSubmit}\n                  className={classes.button}>\n                  Finish\n                </Button>\n              ) : (\n                <Button variant=\"contained\" color=\"primary\" onClick={handleNext} className={classes.button}>\n                  Next\n                </Button>\n              )}\n            </Box>\n          </Box>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nconst AddDepartmentForm = props => {\n  const {\n    departments,\n    sections,\n    subSections,\n    organization,\n    userDetails,\n    index,\n    handleOnDepartmentChange,\n    handleOnSectionChange,\n    handleOnSubSectionChange,\n    handleRemoveDept,\n  } = props;\n\n  return (\n    <>\n      <GridContainer>\n        <Grid item md={4} xs={12}>\n          <Autocomplete\n            fullWidth\n            id={`department_${index}`}\n            options={getFilteredOptions(departments, userDetails, 'companyId')}\n            value={getAutoCompleteValue(departments, organization.departmentId)}\n            getOptionLabel={option => option.name}\n            onChange={handleOnDepartmentChange(index)}\n            renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\n            renderInput={params => (\n              <TextField\n                required\n                helperText={userDetails.companyId === '' ? 'Select Subsidiary' : ''}\n                fullWidth\n                {...params}\n                size={'small'}\n                variant={'outlined'}\n                label=\"Department\"\n              />\n            )}\n          />\n        </Grid>\n        <Grid item md={3} xs={12}>\n          <Autocomplete\n            fullWidth\n            options={getFilteredOptions(sections, organization, 'departmentId', 'departmentsId')}\n            value={getAutoCompleteValue(sections, organization.sectionId)}\n            getOptionLabel={option => option.name}\n            onChange={handleOnSectionChange(index)}\n            renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\n            renderInput={params => (\n              <TextField\n                helperText={organization.departmentId === '' ? 'Select Department' : ''}\n                fullWidth\n                {...params}\n                size={'small'}\n                variant={'outlined'}\n                label=\"Section\"\n              />\n            )}\n          />\n        </Grid>\n        <Grid item md={4} xs={12}>\n          <Autocomplete\n            fullWidth\n            options={getFilteredOptions(subSections, organization, 'sectionId', 'sectionsId')}\n            value={getAutoCompleteValue(subSections, organization.subSectionId)}\n            getOptionLabel={option => option.name}\n            onChange={handleOnSubSectionChange(index)}\n            renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\n            renderInput={params => (\n              <TextField fullWidth {...params} size={'small'} variant={'outlined'} label=\"Sub-Section\" />\n            )}\n          />\n        </Grid>\n        <Grid item md={1} xs={12}>\n          <IconButton color={'secondary'} onClick={e => handleRemoveDept(index)}>\n            <Close fontSize={'small'} />\n          </IconButton>\n        </Grid>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default UserForm;\n","import React, { useEffect, useState } from 'react';\nimport { HEADER } from '../../../../@jumbo/constants/HeaderMessages';\nimport PageContainer from '../../../../@jumbo/components/PageComponents/layouts/PageContainer';\nimport UserForm from './UserForm';\nimport useStyles from '../../index.style';\nimport { Box, Button, Dialog, DialogContent, DialogTitle, Grid, Paper, Slide } from '@material-ui/core';\nimport GridContainer from '../../../../@jumbo/components/GridContainer';\nimport AppTextInput from '../../../../@jumbo/components/Common/formElements/AppTextInput';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchSubsidiaries } from '../../../../redux/actions/Subsidiaries';\nimport { fetchDepartments } from '../../../../redux/actions/Departments';\nimport { fetchSections } from '../../../../redux/actions/Sections';\nimport { fetchRoles } from '../../../../redux/actions/Roles';\nimport { fetchSubSections } from '../../../../redux/actions/SubSections';\n\nconst Transition = React.forwardRef((props, ref) => {\n  return <Slide direction=\"down\" ref={ref} {...props} />;\n});\nconst AddEditUser = () => {\n  const classes = useStyles();\n  const initialBreadcrumbs = [\n    { label: HEADER.DASHBOARD, link: '/' },\n    { label: HEADER.USERS, link: '/users' },\n  ];\n  const [isValid, setIsValid] = useState(false);\n  const [username, setUsername] = useState('');\n  const [openDialog, setOpenDialog] = useState(false);\n  const [breadcrumbs, setBreadcrumbs] = useState(initialBreadcrumbs);\n  const initialState = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    userName: '',\n    password: '12345678',\n    companyId: '',\n    companyName: '',\n    organization: [\n      {\n        departmentId: null,\n        departmentName: '',\n        sectionId: null,\n        sectionName: '',\n        subSectionId: null,\n        subSectionName: '',\n      },\n    ],\n    confirmPassword: '12345678',\n    phoneNumber: '',\n    staffNumber: '',\n    ext_Number: '',\n    roleId: null,\n    roleName: '',\n  };\n  const [isUpdate, setIsUpdate] = useState(false);\n  const dispatch = useDispatch();\n  const { subsidiaries, currentSubsidiary } = useSelector(({ subsidiaries }) => subsidiaries);\n  const { filteredDepartments } = useSelector(({ departments }) => departments);\n  const { filteredSections } = useSelector(({ sections }) => sections);\n  const { filteredSubSections } = useSelector(({ subSections }) => subSections);\n  const { rolesList } = useSelector(({ roles }) => roles);\n  const [userDetails, setUserDetails] = useState(initialState);\n  const location = useLocation();\n\n  function checkErrors() {\n    const { firstName, lastName, email, phoneNo, companyId } = userDetails;\n    if (firstName !== '' && lastName !== '' && email !== '' && phoneNo !== '' && companyId !== '') {\n      setIsValid(true);\n    } else {\n      setIsValid(false);\n    }\n  }\n  const onCloseDialog = () => {\n    setOpenDialog(false);\n  };\n  const handleOnSearchUsername = () => {\n    console.log(username);\n  };\n  useEffect(() => {\n    if (location.state !== undefined) {\n      setBreadcrumbs([...breadcrumbs, { label: HEADER.EDIT_USER, isActive: true }]);\n      setUserDetails(location.state);\n      dispatch(fetchRoles(location.state?.companyId));\n      setIsUpdate(true);\n    } else {\n      setBreadcrumbs([...breadcrumbs, { label: HEADER.CREATE_USER, isActive: true }]);\n      setUserDetails(initialState);\n      setIsUpdate(false);\n      dispatch(fetchRoles('All'));\n    }\n  }, [location]);\n  useEffect(() => {\n    checkErrors();\n  }, [userDetails]);\n  useEffect(() => {\n    dispatch(fetchSubsidiaries());\n    dispatch(fetchDepartments());\n    dispatch(fetchSections());\n    dispatch(fetchSubSections());\n  }, []);\n\n  return (\n    <React.Fragment>\n      <PageContainer heading={isUpdate ? HEADER.EDIT_USER : HEADER.CREATE_USER} breadcrumbs={breadcrumbs}>\n        <div className={classes.root}>\n          <Paper className={classes.paper}>\n            <UserForm\n              {...{\n                initialState,\n                userDetails,\n                isUpdate,\n                isValid,\n                setIsValid,\n                setUserDetails,\n                departments: filteredDepartments,\n                subsidiaries,\n                sections: filteredSections,\n                subSections: filteredSubSections,\n                roles: rolesList,\n                setOpenDialog,\n              }}\n            />\n          </Paper>\n        </div>\n      </PageContainer>\n      <ADDialog {...{ openDialog, onCloseDialog, username, setUsername, handleOnSearchUsername }} />\n    </React.Fragment>\n  );\n};\nconst ADDialog = props => {\n  const { openDialog, onCloseDialog, username, setUsername, handleOnSearchUsername } = props;\n  const useStyles = makeStyles(theme => ({\n    dialogRoot: {\n      position: 'relative',\n    },\n    dialogHeader: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    dialogTitleRoot: {\n      '& .MuiTypography-h6': {\n        fontSize: 16,\n        color: theme.palette.common.white,\n      },\n    },\n  }));\n  const classes = useStyles();\n  return (\n    <Dialog open={openDialog} onClose={onCloseDialog} TransitionComponent={Transition} className={classes.dialogRoot}>\n      <div className={classes.dialogHeader}>\n        <DialogTitle className={classes.dialogTitleRoot}>Import from Active Directory</DialogTitle>\n      </div>\n      <DialogContent style={{ marginTop: 10 }}>\n        <Box sx={{ width: 400 }}>\n          <GridContainer style={{ marginBottom: 12 }}>\n            <Grid item xs={12} sm={12}>\n              <AppTextInput\n                fullWidth\n                variant=\"outlined\"\n                label=\"Username\"\n                value={username}\n                onChange={e => setUsername(e.target.value)}\n              />\n            </Grid>\n          </GridContainer>\n        </Box>\n\n        <Box display=\"flex\" justifyContent=\"flex-end\" mb={4}>\n          <Button onClick={onCloseDialog} size=\"small\">\n            Cancel\n          </Button>\n          <Box ml={2}>\n            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={handleOnSearchUsername}>\n              Search\n            </Button>\n          </Box>\n        </Box>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default AddEditUser;\n"],"sourceRoot":""}