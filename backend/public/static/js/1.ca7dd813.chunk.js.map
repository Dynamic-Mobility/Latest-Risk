{"version":3,"sources":["redux/actions/Compliance.js","routes/Pages/ComplianceModule/EnterpriseCompliance/AddEditEnterpriseCompliance/index.js"],"names":["fetchLegalCompliance","dispatch","a","axiosInstance","useAxios","get","API_URL","FETCH_LEGAL","then","res","status","REQUEST_STATUS","STATUS_OK","type","COMPLIANCE","LEGAL","GET_ALL","payload","data","catch","err","addLegalCompliance","callBackFunc","post","CREATE_LEGAL","fetchSuccess","id","ADD_ONE","console","log","undefined","response","BAD_REQUEST","fetchError","errors","Name","message","updateLegalCompliance","updatedData","UPDATE_LEGAL","UPDATE_ONE","fetchEnterpriseCompliance","FETCH_ENTERPRISE","ENTERPRISE","addEnterpriseCompliance","CREATE_ENTERPRISE","updateEnterpriseCompliance","UPDATE_ENTERPRISE","fetchStatutoryCompliance","FETCH_STATUTORY","STATUTORY","fetchCompliances","FETCH_COMPLIANCES","formattedData","length","map","datum","push","compliance","GET_COMPLIANCES","fetchApprovals","FETCH_APPROVALS","GET_APPROVALS","addStatutoryCompliance","CREATE_STATUTORY","updateStatutoryCompliance","UPDATE_STATUTORY","approveCompliance","APPROVE_COMPLIANCE","success","complyCompliance","COMPLY_COMPLIANCE","initialBreadcrumbs","label","HEADER","DASHBOARD","link","AppHeader","props","classes","useStyles","handleOnSave","showForm","handleOnCancel","isEditable","setIsEditable","className","inBuildAppHeader","inBuildAppHeaderSidebar","style","color","onClick","e","history","back","inBuildAppHeaderTitle","component","variant","inBuildAppHeaderContent","ml","display","alignItems","backgroundColor","size","steps","SideBarIncident","activeStep","handleNext","handlePrev","setActiveStep","inBuildAppSidebar","perfectScrollbarContactSidebar","justifyItems","justifyContent","mt","disabled","m","appNav","renderRow","item","index","SideBarItem","key","labelRef","useRef","Fragment","ref","button","title","clsx","appNavItem","appTaskNavItem","active","completed","primary","ComplianceContent","useDispatch","useSelector","subsidiaries","currentSubsidiary","departments","sections","subSections","users","utils","currencies","priorities","complianceFrequencies","complianceDetails","setComplianceDetails","useState","Date","selectedDeadline","setSelectedDeadline","initValue","name","useEffect","submissionDeadline","moment","format","companyId","fetchSubsidiaries","fetchDepartments","fetchSections","fetchSubSections","fetchUsers","fetchComplianceFrequencies","fetchPriorities","fetchCurrencies","inBuildAppMainContent","minHeight","perfectScrollbarContactCon","p","width","md","xs","fullWidth","value","onChange","target","multiline","minRows","description","authority","options","find","subsidiary","getOptionLabel","option","event","companyName","departmentsId","departmentsName","sectionsId","sectionsName","subSectionsId","subSectionsName","renderOption","selected","renderInput","params","required","filter","department","helperText","section","subSection","user","primaryOwnerId","firstName","lastName","primaryOwnerName","secondaryOwnerId","secondaryOwnerName","escalationOwnerId","escalationOwnerName","penalty","InputProps","startAdornment","position","select","penaltyCurrency","disableUnderline","valueKey","labelKey","priority","frequency","autoOk","clearable","inputVariant","date","animateYearScrolling","Preview","pb","flex","rawHTML","isView","inBuildAppCard","aria-label","tableHeader","tableHeaderCell","React","createElement","dangerouslySetInnerHTML","__html","SuccessPage","handleReset","isUpdate","flexDirection","src","instructions","marginTop","to","AddEditEnterpriseCompliance","initialDetails","sourceDoc","breadcrumbs","setBreadcrumbs","setIsUpdate","location","useLocation","state","ENTERPRISE_COMPLIANCE","url","UPDATE_ENTERPRISE_COMPLIANCE","isActive","CREATE_ENTERPRISE_COMPLIANCE","heading","inBuildAppContainer","preventDefault","parseFloat"],"mappings":"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","file":"static/js/1.ca7dd813.chunk.js","sourcesContent":["import { COMPLIANCE, DEPARTMENTS } from '../../@jumbo/constants/ActionTypes';\r\nimport { fetchError, fetchSuccess } from './Common';\r\nimport { API_URL, REQUEST_STATUS } from '../../@jumbo/utils/apis';\r\nimport useAxios from '../../services/Requests/useAxios';\r\n\r\n//------------------ Legal Compliance -----------------------//\r\nexport const fetchLegalCompliance = () => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .get(`${API_URL.FETCH_LEGAL}`)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch({\r\n            type: COMPLIANCE.LEGAL.GET_ALL,\r\n            payload: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // if (err.response.status !== undefined) {\r\n        //   if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n        //     dispatch(fetchError(err.response.data.errors.Name[0]));\r\n        //   }\r\n        // } else {\r\n        //   dispatch(fetchError(err.message));\r\n        // }\r\n      });\r\n  };\r\n};\r\nexport const addLegalCompliance = (data, callBackFunc) => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.CREATE_LEGAL}`, data)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch(fetchSuccess('Legal Compliance Created Successfully!'));\r\n          data.id = res.data?.id;\r\n          dispatch({\r\n            type: COMPLIANCE.LEGAL.ADD_ONE,\r\n            payload: data,\r\n          });\r\n          callBackFunc();\r\n        }\r\n        console.log(res);\r\n      })\r\n      .catch(err => {\r\n        if (err.response.status !== undefined) {\r\n          if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n            dispatch(fetchError(err.response.data.errors?.Name[0]));\r\n          }\r\n        } else {\r\n          dispatch(fetchError(err.message));\r\n        }\r\n      });\r\n  };\r\n};\r\nexport const updateLegalCompliance = (updatedData, callBackFunc) => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.UPDATE_LEGAL}`, updatedData)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch(fetchSuccess('Compliance Updated Successfully!'));\r\n          dispatch({\r\n            type: COMPLIANCE.LEGAL.UPDATE_ONE,\r\n            payload: updatedData,\r\n          });\r\n          callBackFunc();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.response?.status !== undefined) {\r\n          if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n            dispatch(fetchError(err.response.data.errors?.Name[0]));\r\n          }\r\n        } else {\r\n          dispatch(fetchError(err.message));\r\n        }\r\n      });\r\n  };\r\n  // return dispatch => {\r\n  //   dispatch({\r\n  //     type: DEPARTMENTS.UPDATE_ONE,\r\n  //     payload: updatedData,\r\n  //   });\r\n  //   dispatch(fetchSuccess('Department Updated Successfully!'));\r\n  // };\r\n};\r\nexport const deleteLegalCompliance = id => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: COMPLIANCE.LEGAL.DELETE_ONE,\r\n      payload: id,\r\n    });\r\n    dispatch(fetchSuccess('Compliance Removed Successfully!'));\r\n  };\r\n};\r\n\r\n//------------------ Enterprise Compliance -----------------------//\r\nexport const fetchEnterpriseCompliance = () => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .get(`${API_URL.FETCH_ENTERPRISE}`)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch({\r\n            type: COMPLIANCE.ENTERPRISE.GET_ALL,\r\n            payload: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // if (err.response.status !== undefined) {\r\n        //   if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n        //     dispatch(fetchError(err.response.data.errors.Name[0]));\r\n        //   }\r\n        // } else {\r\n        //   dispatch(fetchError(err.message));\r\n        // }\r\n      });\r\n  };\r\n};\r\nexport const addEnterpriseCompliance = (data, callBackFunc) => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.CREATE_ENTERPRISE}`, data)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch(fetchSuccess('Enterprise Compliance Created Successfully!'));\r\n          data.id = res.data?.id;\r\n          dispatch({\r\n            type: COMPLIANCE.ENTERPRISE.ADD_ONE,\r\n            payload: data,\r\n          });\r\n          callBackFunc();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.response.status !== undefined) {\r\n          if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n            dispatch(fetchError(err.response.data.errors?.Name[0]));\r\n          }\r\n        } else {\r\n          dispatch(fetchError(err.message));\r\n        }\r\n      });\r\n  };\r\n};\r\nexport const updateEnterpriseCompliance = (updatedData, callBackFunc) => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.UPDATE_ENTERPRISE}`, updatedData)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch(fetchSuccess('Compliance Updated Successfully!'));\r\n          dispatch({\r\n            type: COMPLIANCE.ENTERPRISE.UPDATE_ONE,\r\n            payload: updatedData,\r\n          });\r\n          callBackFunc();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.response?.status !== undefined) {\r\n          if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n            dispatch(fetchError(err.response.data.errors?.Name[0]));\r\n          }\r\n        } else {\r\n          dispatch(fetchError(err.message));\r\n        }\r\n      });\r\n  };\r\n  // return dispatch => {\r\n  //   dispatch({\r\n  //     type: DEPARTMENTS.UPDATE_ONE,\r\n  //     payload: updatedData,\r\n  //   });\r\n  //   dispatch(fetchSuccess('Department Updated Successfully!'));\r\n  // };\r\n};\r\nexport const deleteEnterpriseCompliance = id => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: COMPLIANCE.ENTERPRISE.DELETE_ONE,\r\n      payload: id,\r\n    });\r\n    dispatch(fetchSuccess('Compliance Removed Successfully!'));\r\n  };\r\n};\r\n\r\n//------------------ Statutory Compliance -----------------------//\r\nexport const fetchStatutoryComplianceMain = () => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .get(`${API_URL.FETCH_STATUTORY_MAIN}`)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch({\r\n            type: COMPLIANCE.STATUTORY.GET_ALL,\r\n            payload: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // if (err.response.status !== undefined) {\r\n        //   if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n        //     dispatch(fetchError(err.response.data.errors.Name[0]));\r\n        //   }\r\n        // } else {\r\n        //   dispatch(fetchError(err.message));\r\n        // }\r\n      });\r\n  };\r\n};\r\nexport const fetchStatutoryCompliance = () => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .get(`${API_URL.FETCH_STATUTORY}`)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch({\r\n            type: COMPLIANCE.STATUTORY.GET_ALL,\r\n            payload: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // if (err.response.status !== undefined) {\r\n        //   if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n        //     dispatch(fetchError(err.response.data.errors.Name[0]));\r\n        //   }\r\n        // } else {\r\n        //   dispatch(fetchError(err.message));\r\n        // }\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchCompliances = () => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .get(`${API_URL.FETCH_COMPLIANCES}`)\r\n      .then(res => {\r\n        const { data } = res;\r\n        const formattedData = [];\r\n        if (data.length > 0) {\r\n          data.map(datum => formattedData.push({ ...datum.compliance }));\r\n        }\r\n\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch({\r\n            type: COMPLIANCE.STATUTORY.GET_COMPLIANCES,\r\n            payload: formattedData,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // if (err.response.status !== undefined) {\r\n        //   if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n        //     dispatch(fetchError(err.response.data.errors.Name[0]));\r\n        //   }\r\n        // } else {\r\n        //   dispatch(fetchError(err.message));\r\n        // }\r\n      });\r\n  };\r\n};\r\n\r\n\r\n// FETCH APPROVALS\r\nexport const fetchApprovals = () => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance.get(`${API_URL.FETCH_APPROVALS}`).then(res => {\r\n      const { data } = res;\r\n      const formattedData = [];\r\n      if (data.length > 0) {\r\n        data.map(datum => formattedData.push({ ...datum.compliance }));\r\n      }\r\n\r\n      if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n        dispatch({\r\n          type: COMPLIANCE.STATUTORY.GET_APPROVALS,\r\n          payload: formattedData,\r\n        });\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchStatutoryComplianceSub = id => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    return await axiosInstance\r\n      .post(`${API_URL.FETCH_STATUTORY_SUB}`, { id })\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch({\r\n            type: COMPLIANCE.STATUTORY.GET_SUB,\r\n            payload: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // if (err.response.status !== undefined) {\r\n        //   if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n        //     dispatch(fetchError(err.response.data.errors.Name[0]));\r\n        //   }\r\n        // } else {\r\n        //   dispatch(fetchError(err.message));\r\n        // }\r\n      });\r\n  };\r\n};\r\nexport const addStatutoryCompliance = (data, callBackFunc) => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.CREATE_STATUTORY}`, data)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch(fetchSuccess('Statutory Compliance Created Successfully!'));\r\n          data.id = res.data?.id;\r\n          dispatch({\r\n            type: COMPLIANCE.STATUTORY.ADD_ONE,\r\n            payload: data,\r\n          });\r\n          callBackFunc();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.response.status !== undefined) {\r\n          if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n            dispatch(fetchError(err.response.data.errors?.Name[0]));\r\n          }\r\n        } else {\r\n          dispatch(fetchError(err.message));\r\n        }\r\n      });\r\n  };\r\n};\r\nexport const updateStatutoryCompliance = (updatedData, callBackFunc) => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.UPDATE_STATUTORY}`, updatedData)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch(fetchSuccess('Compliance Updated Successfully!'));\r\n          dispatch({\r\n            type: COMPLIANCE.STATUTORY.UPDATE_ONE,\r\n            payload: updatedData,\r\n          });\r\n          callBackFunc();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.response?.status !== undefined) {\r\n          if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n            dispatch(fetchError(err.response.data.errors?.Name[0]));\r\n          }\r\n        } else {\r\n          dispatch(fetchError(err.message));\r\n        }\r\n      });\r\n  };\r\n  // return dispatch => {\r\n  //   dispatch({\r\n  //     type: DEPARTMENTS.UPDATE_ONE,\r\n  //     payload: updatedData,\r\n  //   });\r\n  //   dispatch(fetchSuccess('Department Updated Successfully!'));\r\n  // };\r\n};\r\nexport const deleteStatutoryCompliance = id => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: COMPLIANCE.STATUTORY.DELETE_ONE,\r\n      payload: id,\r\n    });\r\n    dispatch(fetchSuccess('Compliance Removed Successfully!'));\r\n  };\r\n};\r\n\r\n// APPROVE COMPLIANCE\r\nexport const approveCompliance = data => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.APPROVE_COMPLIANCE}`, data)\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          dispatch(fetchSuccess('Compliance Approved Successfully!'));\r\n        } else {\r\n          dispatch(fetchError(res.data.message ?? 'Ann error occured try again later!'));\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\n\r\n// COMPLY COMPLIANCE\r\nexport const complyCompliance = data => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.COMPLY_COMPLIANCE}`, data)\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          dispatch(fetchSuccess('Complied Successfully!'));\r\n        } else {\r\n          dispatch(fetchError(res.data.message ?? 'Ann error occured try again later!'));\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n","import React, { useEffect, useRef, useState } from 'react';\nimport PageContainer from '../../../../../@jumbo/components/PageComponents/layouts/PageContainer';\nimport { HEADER } from '../../../../../@jumbo/constants/HeaderMessages';\nimport {\n  Box,\n  Button,\n  Grid,\n  IconButton,\n  InputAdornment,\n  MenuItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { NotificationContainer } from 'react-notifications';\nimport useStyles from '../../../Roles/index.style';\nimport { ArrowBack } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { ArrowBackIos, ArrowForwardIos } from '@mui/icons-material';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CmtList from '../../../../../@coremat/CmtList';\nimport List from '@material-ui/core/List';\nimport GridContainer from '../../../../../@jumbo/components/GridContainer';\nimport AppTextInput from '../../../../../@jumbo/components/Common/formElements/AppTextInput';\nimport AppSelectBox from '../../../../../@jumbo/components/Common/formElements/AppSelectBox';\nimport { frequencies, priority } from '../../dummyData';\nimport { DatePicker } from '@material-ui/pickers';\nimport moment from 'moment';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchSubsidiaries } from '../../../../../redux/actions/Subsidiaries';\nimport { fetchDepartments } from '../../../../../redux/actions/Departments';\nimport { fetchSections } from '../../../../../redux/actions/Sections';\nimport { fetchSubSections } from '../../../../../redux/actions/SubSections';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Autocomplete } from '@material-ui/lab';\nimport { fetchUsers } from '../../../../../redux/actions/Users';\nimport { addEnterpriseCompliance, updateEnterpriseCompliance } from '../../../../../redux/actions/Compliance';\nimport CmtImage from '../../../../../@coremat/CmtImage';\nimport { fetchComplianceFrequencies, fetchCurrencies, fetchPriorities } from '../../../../../redux/actions/Utils';\n\nconst initialBreadcrumbs = [{ label: HEADER.DASHBOARD, link: '/' }];\nconst AppHeader = props => {\n  const classes = useStyles();\n  const { handleOnSave, showForm, handleOnCancel, isEditable, setIsEditable } = props;\n  const handleBackClick = e => {\n    // eslint-disable-next-line no-restricted-globals\n    history.back();\n  };\n  return (\n    <Box className={classes.inBuildAppHeader}>\n      <Box className={classes.inBuildAppHeaderSidebar}>\n        {/*<CmtImage src={'/images/roles.png'} style={{ width: '50px' }} />*/}\n        <IconButton style={{ color: 'white' }} onClick={handleBackClick}>\n          <ArrowBack />\n        </IconButton>\n        <Typography className={classes.inBuildAppHeaderTitle} component=\"div\" variant=\"h1\">\n          Compliance\n        </Typography>\n      </Box>\n      <Box className={classes.inBuildAppHeaderContent}>\n        {showForm && (\n          <Box ml=\"auto\" display=\"flex\" alignItems=\"center\">\n            {isEditable ? (\n              <>\n                <Box ml={1}>\n                  <Button\n                    variant={'contained'}\n                    style={{ backgroundColor: 'green', color: 'white' }}\n                    size={'small'}\n                    onClick={handleOnSave}>\n                    Save\n                  </Button>\n                </Box>\n              </>\n            ) : (\n              <>\n                <Box ml={1}>\n                  <Button\n                    variant={'contained'}\n                    style={{ backgroundColor: 'green', color: 'white' }}\n                    size={'small'}\n                    onClick={() => setIsEditable(true)}>\n                    Edit\n                  </Button>\n                </Box>\n              </>\n            )}\n            <Box ml={1}>\n              <Button\n                variant={'contained'}\n                style={{ backgroundColor: 'darkred', color: 'white' }}\n                size={'small'}\n                onClick={handleOnCancel}>\n                Close\n              </Button>\n            </Box>\n          </Box>\n        )}\n      </Box>\n    </Box>\n  );\n};\nconst steps = ['1. Compliance Details', '2. Finish'];\nconst AddEditEnterpriseCompliance = () => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const initialDetails = {\n    title: '',\n    description: '',\n    authority: '',\n    companyId: '',\n    departmentsId: '',\n    departmentsName: '',\n    sectionsId: '',\n    sectionsName: '',\n    subSectionsId: '',\n    subSectionsName: '',\n    penalty: 0,\n    penaltyCurrency: 'KES',\n    primaryOwnerId: null,\n    secondaryOwnerId: null,\n    escalationOwnerId: null,\n    priority: '',\n    frequency: '',\n    active: true,\n    submissionDeadline: '',\n    //\"nextDeadline\": \"2022-07-27T05:37:06.521Z\",\n    sourceDoc: '',\n  };\n  const [complianceDetails, setComplianceDetails] = useState(initialDetails);\n  const [breadcrumbs, setBreadcrumbs] = useState(initialBreadcrumbs);\n  const [isUpdate, setIsUpdate] = useState(false);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n  const handleReset = () => {\n    setComplianceDetails(initialDetails);\n    setIsUpdate(false);\n    setActiveStep(0);\n  };\n  const handleOnSave = e => {\n    e.preventDefault();\n    let data = { ...complianceDetails, penalty: parseFloat(complianceDetails.penalty) };\n    if (isUpdate) {\n      dispatch(updateEnterpriseCompliance(data, () => handleNext()));\n    } else {\n      dispatch(addEnterpriseCompliance(data, () => handleNext()));\n    }\n  };\n  const handlePrev = () => {\n    setActiveStep(activeStep - 1);\n  };\n  useEffect(() => {\n    if (location.state !== undefined) {\n      setBreadcrumbs([\n        ...breadcrumbs,\n        { label: HEADER.ENTERPRISE_COMPLIANCE.name, link: `/compliance/${HEADER.ENTERPRISE_COMPLIANCE.url}` },\n        { label: HEADER.UPDATE_ENTERPRISE_COMPLIANCE, isActive: true },\n      ]);\n      setComplianceDetails(location.state);\n      setIsUpdate(true);\n    } else {\n      setBreadcrumbs([\n        ...breadcrumbs,\n        { label: HEADER.ENTERPRISE_COMPLIANCE.name, link: `/compliance/${HEADER.ENTERPRISE_COMPLIANCE.url}` },\n        { label: HEADER.CREATE_ENTERPRISE_COMPLIANCE, isActive: true },\n      ]);\n      setComplianceDetails(initialDetails);\n      setIsUpdate(false);\n    }\n  }, [location]);\n\n  return (\n    <React.Fragment>\n      <PageContainer\n        heading={isUpdate ? HEADER.UPDATE_ENTERPRISE_COMPLIANCE : HEADER.CREATE_ENTERPRISE_COMPLIANCE}\n        breadcrumbs={breadcrumbs}>\n        <Box className={classes.inBuildAppCard}>\n          <AppHeader />\n          {activeStep === steps.length ? (\n            <Box className={clsx(classes.inBuildAppContainer)} minHeight={400}>\n              <Box width={'100%'} m={5}>\n                <SuccessPage {...{ classes, handleReset, isUpdate }} />\n              </Box>\n            </Box>\n          ) : (\n            <Box className={clsx(classes.inBuildAppContainer)}>\n              <SideBarIncident {...{ activeStep, handleNext, handlePrev, setActiveStep }} />\n              <ComplianceContent\n                {...{\n                  classes,\n                  isUpdate,\n                  activeStep,\n                  handleNext,\n                  handlePrev,\n                  handleReset,\n                  complianceDetails,\n                  setComplianceDetails,\n                  handleOnSave,\n                }}\n              />\n            </Box>\n          )}\n        </Box>\n      </PageContainer>\n      <NotificationContainer />\n    </React.Fragment>\n  );\n};\nconst SideBarIncident = props => {\n  const classes = useStyles();\n  const { activeStep, handleNext, handlePrev, setActiveStep } = props;\n  return (\n    <Box className={classes.inBuildAppSidebar}>\n      <PerfectScrollbar className={classes.perfectScrollbarContactSidebar}>\n        <Box display=\"flex\" justifyItems={'center'} justifyContent={'center'} mt={2}>\n          <IconButton color={'primary'} onClick={handlePrev} disabled={activeStep === 0}>\n            <ArrowBackIos />\n          </IconButton>\n          <Box m={1} />\n          <IconButton color={'primary'} onClick={handleNext} disabled={activeStep === steps.length - 1}>\n            <ArrowForwardIos />\n          </IconButton>\n        </Box>\n        <Box mt={5}>\n          <List component=\"nav\" className={classes.appNav}>\n            <CmtList\n              data={steps}\n              renderRow={(item, index) => (\n                <SideBarItem {...{ key: index, index, activeStep, item, classes, setActiveStep }} />\n              )}\n            />\n          </List>\n        </Box>\n      </PerfectScrollbar>\n    </Box>\n  );\n};\nconst SideBarItem = props => {\n  const { index, item, classes, activeStep, setActiveStep } = props;\n  const labelRef = useRef(null);\n\n  return (\n    <React.Fragment>\n      <ListItem\n        ref={labelRef}\n        button\n        title={item}\n        //disabled={activeStep < index}\n        onClick={e => setActiveStep(index)}\n        className={clsx(classes.appNavItem, classes.appTaskNavItem, {\n          active: index === activeStep,\n          completed: activeStep > index,\n        })}>\n        <ListItemText primary={item} className=\"Cmt-nav-text\" />\n      </ListItem>\n    </React.Fragment>\n  );\n};\nconst ComplianceContent = props => {\n  const dispatch = useDispatch();\n  const { subsidiaries, currentSubsidiary } = useSelector(({ subsidiaries }) => subsidiaries);\n  const { departments } = useSelector(({ departments }) => departments);\n  const { sections } = useSelector(({ sections }) => sections);\n  const { subSections } = useSelector(({ subSections }) => subSections);\n  const { users } = useSelector(({ users }) => users);\n  const { currencies, priorities, complianceFrequencies } = useSelector(({ utils }) => utils);\n  const { classes, activeStep, handleNext, handlePrev, complianceDetails, setComplianceDetails, handleOnSave } = props;\n  const [selectedDeadline, setSelectedDeadline] = useState(new Date());\n  const initValue = { id: '', name: '' };\n\n  const handleOnSubsidiaryChange = (event, value) => {\n    if (value !== null) {\n      setComplianceDetails({\n        ...complianceDetails,\n        companyId: value.id,\n        companyName: value.name,\n        departmentsId: null,\n        departmentsName: '',\n        sectionsId: null,\n        sectionsName: '',\n        subSectionsId: null,\n        subSectionsName: '',\n      });\n    } else {\n      setComplianceDetails({\n        ...complianceDetails,\n        companyId: null,\n        companyName: '',\n        departmentsId: null,\n        departmentsName: '',\n        sectionsId: null,\n        sectionsName: '',\n        subSectionsId: null,\n        subSectionsName: '',\n      });\n    }\n  };\n  const handleOnDepartmentChange = (event, value) => {\n    if (value !== null) {\n      setComplianceDetails({\n        ...complianceDetails,\n        departmentsId: value.id,\n        departmentsName: value.name,\n        sectionsId: null,\n        sectionsName: '',\n        subSectionsId: null,\n        subSectionsName: '',\n      });\n    } else {\n      setComplianceDetails({\n        ...complianceDetails,\n        departmentsId: null,\n        departmentsName: '',\n        sectionsId: null,\n        sectionsName: '',\n        subSectionsId: null,\n        subSectionsName: '',\n      });\n    }\n  };\n  const handleOnSectionChange = (event, value) => {\n    if (value !== null) {\n      setComplianceDetails({\n        ...complianceDetails,\n        sectionsId: value.id,\n        sectionsName: value.name,\n        subSectionsId: null,\n        subSectionsName: '',\n      });\n    } else {\n      setComplianceDetails({\n        ...complianceDetails,\n        sectionsId: null,\n        sectionsName: '',\n        subSectionsId: null,\n        subSectionsName: '',\n      });\n    }\n  };\n  const handleOnSubSectionChange = (event, value) => {\n    if (value !== null) {\n      setComplianceDetails({ ...complianceDetails, subSectionsId: value.id, subSectionsName: value.name });\n    } else {\n      setComplianceDetails({ ...complianceDetails, subSectionsId: null, subSectionsName: '' });\n    }\n  };\n  const handleOnPrimaryOwnerChange = (event, value) => {\n    if (value !== null) {\n      setComplianceDetails({\n        ...complianceDetails,\n        primaryOwnerId: value.id,\n        primaryOwnerName: value.firstName + ' ' + value.lastName,\n      });\n    } else {\n      setComplianceDetails({ ...complianceDetails, primaryOwnerId: null, primaryOwnerName: '' });\n    }\n  };\n  const handleOnSecondaryOwnerChange = (event, value) => {\n    if (value !== null) {\n      setComplianceDetails({\n        ...complianceDetails,\n        secondaryOwnerId: value.id,\n        secondaryOwnerName: value.firstName + ' ' + value.lastName,\n      });\n    } else {\n      setComplianceDetails({ ...complianceDetails, secondaryOwnerId: null, secondaryOwnerName: '' });\n    }\n  };\n  const handleOnEscalationOwnerChange = (event, value) => {\n    if (value !== null) {\n      setComplianceDetails({\n        ...complianceDetails,\n        escalationOwnerId: value.id,\n        escalationOwnerName: value.firstName + ' ' + value.lastName,\n      });\n    } else {\n      setComplianceDetails({ ...complianceDetails, escalationOwnerId: null, escalationOwnerName: '' });\n    }\n  };\n\n  useEffect(() => {\n    setComplianceDetails({\n      ...complianceDetails,\n      submissionDeadline: moment(selectedDeadline).format('YYYY-MM-DD'),\n    });\n  }, [selectedDeadline]);\n  useEffect(() => {\n    setComplianceDetails({\n      ...complianceDetails,\n      companyId: currentSubsidiary,\n    });\n  }, [currentSubsidiary]);\n  useEffect(() => {\n    dispatch(fetchSubsidiaries());\n    dispatch(fetchDepartments());\n    dispatch(fetchSections());\n    dispatch(fetchSubSections());\n    dispatch(fetchUsers());\n    dispatch(fetchComplianceFrequencies());\n    dispatch(fetchPriorities());\n    dispatch(fetchCurrencies());\n  }, []);\n\n  return (\n    <>\n      <Box className={classes.inBuildAppMainContent} minHeight={400}>\n        <PerfectScrollbar className={classes.perfectScrollbarContactCon}>\n          <Box p={5} display=\"flex\">\n            {activeStep === 0 && (\n              <Box width={'100%'}>\n                <GridContainer>\n                  <Grid item md={12} xs={12}>\n                    <AppTextInput\n                      fullWidth\n                      variant=\"outlined\"\n                      label={'Compliance Title'}\n                      value={complianceDetails.title}\n                      onChange={e => setComplianceDetails({ ...complianceDetails, title: e.target.value })}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <AppTextInput\n                      fullWidth\n                      multiline\n                      minRows={4}\n                      variant=\"outlined\"\n                      label={'Compliance Description'}\n                      value={complianceDetails.description}\n                      onChange={e => setComplianceDetails({ ...complianceDetails, description: e.target.value })}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <AppTextInput\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Authority\"\n                      value={complianceDetails.authority}\n                      onChange={e => setComplianceDetails({ ...complianceDetails, authority: e.target.value })}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <Autocomplete\n                      fullWidth\n                      options={subsidiaries}\n                      value={subsidiaries?.find(subsidiary => subsidiary.id === complianceDetails.companyId) ?? initValue}\n                      getOptionLabel={option => option.name}\n                      onChange={handleOnSubsidiaryChange}\n                      renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\n                      renderInput={params => (\n                        <TextField required fullWidth {...params} size={'small'} variant={'outlined'} label=\"Subsidiary\" />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <Autocomplete\n                      fullWidth\n                      options={departments.filter(department => department.companyId == complianceDetails.companyId)}\n                      value={departments.find(department => department.id === complianceDetails.departmentsId) ?? initValue}\n                      getOptionLabel={option => option.name}\n                      onChange={handleOnDepartmentChange}\n                      renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\n                      renderInput={params => (\n                        <TextField\n                          helperText={complianceDetails.companyId === null ? 'Select Subsidiary' : ''}\n                          fullWidth\n                          {...params}\n                          size={'small'}\n                          variant={'outlined'}\n                          label=\"Department\"\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <Autocomplete\n                      fullWidth\n                      options={sections.filter(section => section.departmentsId == complianceDetails.departmentsId)}\n                      value={sections.find(section => section.id === complianceDetails.sectionsId) ?? initValue}\n                      getOptionLabel={option => option.name}\n                      onChange={handleOnSectionChange}\n                      renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\n                      renderInput={params => (\n                        <TextField\n                          helperText={complianceDetails.departmentsId === null ? 'Select Department' : ''}\n                          fullWidth\n                          {...params}\n                          size={'small'}\n                          variant={'outlined'}\n                          label=\"Section\"\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <Autocomplete\n                      fullWidth\n                      options={subSections.filter(subSection => subSection.sectionsId == complianceDetails.sectionsId)}\n                      value={subSections.find(subSection => subSection.id === complianceDetails.sectionsId) ?? initValue}\n                      getOptionLabel={option => option.name}\n                      onChange={handleOnSubSectionChange}\n                      renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\n                      renderInput={params => (\n                        <TextField\n                          helperText={complianceDetails.sectionsId === null ? 'Select Section' : ''}\n                          fullWidth\n                          {...params}\n                          size={'small'}\n                          variant={'outlined'}\n                          label=\"Sub-Section\"\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <Autocomplete\n                      fullWidth\n                      options={users}\n                      value={users.find(user => user.id === complianceDetails.primaryOwnerId) ?? initValue}\n                      getOptionLabel={option => option.name ?? option.firstName + ' ' + option.lastName}\n                      onChange={handleOnPrimaryOwnerChange}\n                      renderOption={(option, { selected }) => (\n                        <span key={option.id}>{option.firstName + ' ' + option.lastName}</span>\n                      )}\n                      renderInput={params => (\n                        <TextField fullWidth {...params} size={'small'} variant={'outlined'} label=\"Primary Owner\" />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <Autocomplete\n                      fullWidth\n                      options={users}\n                      value={users.find(user => user.id === complianceDetails.secondaryOwnerId) ?? initValue}\n                      getOptionLabel={option => option.name ?? option.firstName + ' ' + option.lastName}\n                      onChange={handleOnSecondaryOwnerChange}\n                      renderOption={(option, { selected }) => (\n                        <span key={option.id}>{option.firstName + ' ' + option.lastName}</span>\n                      )}\n                      renderInput={params => (\n                        <TextField fullWidth {...params} size={'small'} variant={'outlined'} label=\"Secondary Owner\" />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <Autocomplete\n                      fullWidth\n                      options={users}\n                      value={users.find(user => user.id === complianceDetails.escalationOwnerId) ?? initValue}\n                      getOptionLabel={option => option.name ?? option.firstName + ' ' + option.lastName}\n                      onChange={handleOnEscalationOwnerChange}\n                      renderOption={(option, { selected }) => (\n                        <span key={option.id}>{option.firstName + ' ' + option.lastName}</span>\n                      )}\n                      renderInput={params => (\n                        <TextField fullWidth {...params} size={'small'} variant={'outlined'} label=\"Escalation Owner\" />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Penalty\"\n                      type={'number'}\n                      variant=\"outlined\"\n                      value={complianceDetails.penalty}\n                      onChange={e => {\n                        setComplianceDetails({ ...complianceDetails, penalty: e.target.value });\n                      }}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <TextField\n                              select\n                              style={{ width: '90px' }}\n                              label=\"\"\n                              value={complianceDetails.penaltyCurrency}\n                              onChange={e => setComplianceDetails({ ...complianceDetails, penaltyCurrency: e.target.value })}\n                              InputProps={{\n                                disableUnderline: true,\n                              }}>\n                              {currencies.map(option => (\n                                <MenuItem key={option.id} value={option.name}>\n                                  {option.name}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <AppSelectBox\n                      fullWidth\n                      data={priorities}\n                      label=\"Priority\"\n                      valueKey=\"name\"\n                      variant=\"outlined\"\n                      labelKey=\"name\"\n                      value={complianceDetails.priority}\n                      onChange={e => setComplianceDetails({ ...complianceDetails, priority: e.target.value })}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <AppSelectBox\n                      fullWidth\n                      data={complianceFrequencies}\n                      label=\"Frequency\"\n                      valueKey=\"id\"\n                      variant=\"outlined\"\n                      labelKey=\"name\"\n                      value={complianceDetails.frequency}\n                      onChange={e => setComplianceDetails({ ...complianceDetails, frequency: e.target.value })}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <DatePicker\n                      autoOk\n                      fullWidth\n                      clearable\n                      inputVariant={'outlined'}\n                      label=\"Submission Deadline\"\n                      onChange={date => {\n                        setSelectedDeadline(date);\n                      }}\n                      value={\n                        complianceDetails.submissionDeadline !== '' ? complianceDetails.submissionDeadline : selectedDeadline\n                      }\n                      format=\"DD-MM-yyyy\"\n                      animateYearScrolling\n                    />\n                  </Grid>\n                </GridContainer>\n              </Box>\n            )}\n            {activeStep === 1 && (\n              <Box width={'100%'}>\n                <Preview {...{ complianceDetails }} />\n              </Box>\n            )}\n          </Box>\n          <Box display=\"flex\" m={3} pb={3}>\n            {activeStep === steps.length - 1 && (\n              <Button onClick={handlePrev} variant={'contained'} color={'primary'} size={'small'}>\n                Prev\n              </Button>\n            )}\n            <Box flex={'1 0 auto'} />\n            {activeStep !== steps.length - 1 && (\n              <Button onClick={handleNext} variant={'contained'} color={'primary'} size={'small'}>\n                Continue\n              </Button>\n            )}\n            {activeStep === steps.length - 1 && (\n              <Button onClick={handleOnSave} variant={'contained'} color={'primary'} size={'small'}>\n                Save\n              </Button>\n            )}\n          </Box>\n        </PerfectScrollbar>\n      </Box>\n    </>\n  );\n};\nexport const Preview = props => {\n  const { complianceDetails, isView } = props;\n  const renderHTML = rawHTML => React.createElement('div', { dangerouslySetInnerHTML: { __html: rawHTML } });\n  const classes = useStyles();\n  return (\n    <TableContainer className={classes.inBuildAppCard}>\n      <Table size=\"small\" aria-label=\"a dense table\">\n        {!isView && (\n          <TableHead className={classes.tableHeader}>\n            <TableRow>\n              <TableCell className={classes.tableHeaderCell}>Field Name</TableCell>\n              <TableCell className={classes.tableHeaderCell}>Input Value</TableCell>\n            </TableRow>\n          </TableHead>\n        )}\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <b>Compliance Title</b>\n            </TableCell>\n            <TableCell>{complianceDetails.title !== '' ? complianceDetails.title : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Compliance Description</b>\n            </TableCell>\n            <TableCell>\n              {complianceDetails.description !== '' ? renderHTML(complianceDetails.description) : 'Not Set'}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Company</b>\n            </TableCell>\n            <TableCell>{complianceDetails.companyName !== '' ? complianceDetails.companyName : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Department</b>\n            </TableCell>\n            <TableCell>{complianceDetails.departmentsName !== '' ? complianceDetails.departmentsName : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Section</b>\n            </TableCell>\n            <TableCell>{complianceDetails.sectionsName !== '' ? complianceDetails.sectionsName : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Sub Section</b>\n            </TableCell>\n            <TableCell>{complianceDetails.subSectionsName !== '' ? complianceDetails.subSectionsName : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Authority</b>\n            </TableCell>\n            <TableCell>{complianceDetails.authority !== '' ? complianceDetails.authority : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Penalty in {complianceDetails.penaltyCurrency}</b>\n            </TableCell>\n            <TableCell>{complianceDetails.penalty !== '' ? complianceDetails.penalty : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Primary Owner</b>\n            </TableCell>\n            <TableCell>\n              {complianceDetails.primaryOwnerName !== '' ? complianceDetails.primaryOwnerName : 'Not Set'}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Secondary Owner</b>\n            </TableCell>\n            <TableCell>\n              {complianceDetails.secondaryOwnerName !== '' ? complianceDetails.secondaryOwnerName : 'Not Set'}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Escalation Person</b>\n            </TableCell>\n            <TableCell>\n              {complianceDetails.escalationOwnerName !== '' ? complianceDetails.escalationOwnerName : 'Not Set'}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Priority</b>\n            </TableCell>\n            <TableCell>{complianceDetails.priority !== '' ? complianceDetails.priority : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Frequency</b>\n            </TableCell>\n            <TableCell>{complianceDetails.frequency !== '' ? complianceDetails.frequency : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Submission Deadline</b>\n            </TableCell>\n            <TableCell>\n              {complianceDetails.submissionDeadline !== '' ? complianceDetails.submissionDeadline : 'Not Set'}\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\nconst SuccessPage = props => {\n  const { classes, handleReset, isUpdate } = props;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n      <CmtImage src={'/images/ic_ok.svg'} style={{ width: '50px' }} />\n      <p className={classes.instructions} style={{ marginTop: '10px' }}>\n        <b>Compliance was {isUpdate ? 'updated' : 'created'} successfully!</b>\n      </p>\n      <Box mt={10}>\n        <Link to={'/compliance/enterprise-compliance'}>\n          <Button color={'primary'} variant={'contained'}>\n            Back to Compliance Dashboard\n          </Button>\n        </Link>\n        {!isUpdate && (\n          <Button onClick={handleReset} className={classes.button}>\n            Create New Compliance\n          </Button>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default AddEditEnterpriseCompliance;\n"],"sourceRoot":""}