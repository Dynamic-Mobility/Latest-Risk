{"version":3,"sources":["routes/Pages/Dashboard/AssessmentDashboard/AssessmentGraphs/AssessmentTreeMap.js","routes/Pages/Dashboard/AssessmentDashboard/RisksTables/index.js","routes/Pages/Dashboard/AssessmentDashboard/AssessmentGraphs/index.js","routes/Pages/Dashboard/AssessmentDashboard/index.js"],"names":["useStyles","makeStyles","theme","cardContentRoot","position","titleRoot","letterSpacing","marginBottom","listItemRoot","padding","fontSize","color","palette","text","secondary","subTitleRoot","lossCategoryRoot","primary","fill","countryCellItem","cursor","transition","borderRadius","backgroundColor","alpha","common","dark","transform","boxShadow","RisksTreeMapKey","data","department","currentFilter","rest","classes","Grid","container","spacing","undefined","length","map","item","index","xs","md","key","Box","display","alignItems","justifyContent","className","clsx","active","name","component","ml","height","width","bgcolor","px","mx","risks","Typography","gutterBottom","variant","children","slug","RisksTreeMapChat","props","useTheme","CustomizedContent","COLORS","handleOnMapClick","root","depth","x","y","id","x1","y1","x2","y2","gradientTransform","offset","stopColor","stopOpacity","getGradientColor","style","stroke","strokeWidth","strokeOpacity","textAnchor","fontFamily","typography","fontWeight","fontWeightLight","white","gradientColor","GRADIENT_COLORS","find","element","margin","top","right","left","bottom","dataKey","ratio","content","colors","isAnimationActive","payload","label","Paper","value","AssessmentTreeMap","setCurrentFilter","filters","setDepartment","setOpenDialog","useState","action","level","breadcrumbsList","setBreadcrumbsList","handleFilterChange","e","target","resetBreadcrumbs","onClickBreadcrumbs","list","splice","CmtAdvCard","CmtCardHeader","title","subTitle","mr","Select","selectBoxRoot","labelId","onChange","MenuItem","CmtAdvCardContent","mb","Breadcrumbs","aria-label","separator","underline","Link","href","onClick","preventDefault","GridContainer","push","RisksTableView","multipleValues","displayValue","columnAutoWidth","dataSource","showColumnLines","showRowLines","showBorders","allowColumnResizing","rowAlternationEnabled","visible","enabled","type","storageKey","mode","allowSearch","dataField","caption","allowHeaderFiltering","allowFiltering","minWidth","allowHiding","cellRender","Chip","borderColor","size","rowRenderingMode","defaultPageSize","displayMode","showPageSizeSelector","showInfo","showNavigationButtons","headerItem","paddingLeft","paddingRight","breakpoints","down","borderLeft","marginRight","backdropContent","borderBottomColor","dialogRoot","dialogHeader","main","dialogTitleRoot","filterOptions","Transition","React","forwardRef","ref","Zoom","unmountOnExit","ShowRisksTable","onCloseDialog","openDialog","Dialog","open","fullWidth","maxWidth","onClose","scroll","TransitionComponent","DialogTitle","DialogContent","marginTop","sx","Button","RisksGraphs","setData","probabilityData","setProbabiltyData","lossTypeData","setLossTypeData","controlTypeData","setControlTypeData","setRisks","useEffect","risksList","riskTreeDataSections","assessedTreeDataDepartments","lossTypeRisksDeptProgress","riskProbabilityData","riskControlTypeData","assessedTreeDataCat","lossTypeRisksCatProgress","riskProbabilityDataCat","riskControlTypeDataCat","Fragment","LossTypeProbabilityChart","ControlsChart","breadcrumbs","HEADER","DASHBOARD","link","ASSESSMENT_DASHBOARD","isActive","AssessmentDashboard","PageContainer","heading","mt"],"mappings":"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","file":"static/js/21.6ed1672c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { ResponsiveContainer, Tooltip, Treemap } from 'recharts';\nimport CmtImage from '../../../../../@coremat/CmtImage';\nimport CmtBackDrop from '../../../../../@coremat/CmtBackDrop';\nimport CmtCardContent from '../../../../../@coremat/CmtCard/CmtCardContent';\nimport AppSelectBox from '../../../../../@jumbo/components/Common/formElements/AppSelectBox';\nimport { Box, IconButton, Link, MenuItem, Paper, Select, Typography, useTheme } from '@material-ui/core';\nimport { alpha } from '@material-ui/core/styles';\nimport { ArrowBackIos, Visibility } from '@material-ui/icons';\nimport CmtCardHeader from '../../../../../@coremat/CmtCard/CmtCardHeader';\nimport CmtAdvCardContent from '../../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\nimport GridContainer from '../../../../../@jumbo/components/GridContainer';\nimport Grid from '@material-ui/core/Grid';\nimport CmtAdvCard from '../../../../../@coremat/CmtAdvCard';\nimport { Breadcrumbs } from '@mui/material';\nimport { COLORS, GRADIENT_COLORS } from '../../dummyData';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n  cardContentRoot: {\n    position: 'relative',\n  },\n  titleRoot: {\n    letterSpacing: 0.5,\n    marginBottom: 20,\n  },\n  listItemRoot: {\n    padding: 0,\n    '& .root': {\n      marginBottom: 1,\n    },\n    '& .Cmt-label-container': {\n      fontSize: 12,\n      color: theme.palette.text.secondary,\n    },\n  },\n  subTitleRoot: {\n    fontSize: 12,\n    color: theme.palette.text.secondary,\n  },\n  lossCategoryRoot: {\n    color: theme.palette.text.primary,\n    '& text': {\n      fill: theme.palette.text.primary,\n    },\n  },\n  countryCellItem: {\n    cursor: 'pointer',\n    padding: 10,\n    fontSize: 12,\n    transition: 'all .2s',\n    borderRadius: 4,\n    '&:hover, &.active': {\n      backgroundColor: alpha(theme.palette.common.dark, 0.04),\n      '& .text-hover': {\n        color: theme.palette.text.primary,\n      },\n    },\n    '&:hover': {\n      transform: 'translateY(-4px)',\n      boxShadow: `0 3px 10px 0 ${alpha(theme.palette.common.dark, 0.2)}`,\n    },\n  },\n}));\nconst Filter = props => {\n  const { currentFilter, setCurrentFilter, classes, filters } = props;\n  const handleChange = event => {\n    setCurrentFilter(event.target.value);\n  };\n\n  return (\n    <CmtCardContent>\n      <Box className={classes.backdropContent}>\n        <AppSelectBox\n          label=\"Filter with\"\n          data={filters}\n          valueKey=\"label\"\n          labelKey=\"label\"\n          value={currentFilter}\n          onChange={handleChange}\n        />\n      </Box>\n    </CmtCardContent>\n  );\n};\nconst FilterHeader = ({ currentFilter, classes }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\" mx={{ xs: -2, sm: -4 }}>\n      <Box className={classes.headerItem}>\n        {/*<DashboardIcon />*/}\n        {currentFilter}\n      </Box>\n      {/*<Box className={classes.headerItem}>*/}\n      {/*  <CalendarTodayIcon />*/}\n      {/*  {getFormattedDate(startDate, ' DD MMM')} - {getFormattedDate(endDate, ' DD MMM')}*/}\n      {/*</Box>*/}\n    </Box>\n  );\n};\nconst OldRisksTreeMap = props => {\n  const { data, currentFilter, setCurrentFilter, classes, filters, department, setDepartment, setOpenDialog } = props;\n  const [revealed, setRevealed] = useState(false);\n  const handleOnRevealed = () => {\n    setRevealed(!revealed);\n  };\n\n  return (\n    <CmtBackDrop\n      concealedIcon={<CmtImage src={'/images/icons/filter_icon.png'} alt=\"filter\" />}\n      backLayerConcealed={revealed ? '' : <FilterHeader {...{ currentFilter, classes }} />}\n      backLayerRevealed={<Filter {...{ currentFilter, setCurrentFilter, classes, filters }} />}\n      onRevealed={handleOnRevealed}>\n      <Box display=\"flex\" alignItems=\"center\" p={{ xs: 4, lg: 6, xl: 8 }}>\n        <Box>\n          <Box pl={{ xs: 4, lg: 6, xl: 8 }}>\n            <Box display=\"flex\" alignItems=\"center\" alignContent={'center'}>\n              {department.name !== '' && (\n                <IconButton onClick={e => setDepartment({ id: '', name: '' })}>\n                  <ArrowBackIos fontSize={'small'} />\n                </IconButton>\n              )}\n              <Typography component=\"div\" variant=\"h4\">\n                Number of Risks by {currentFilter} {department.name !== '' && `- ${department.name}`}\n              </Typography>\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n      <Box padding={2}>\n        <RisksTreeMapChat {...{ data, department, setDepartment, currentFilter, filters, setOpenDialog }} />\n      </Box>\n    </CmtBackDrop>\n  );\n};\nconst AssessmentTreeMap = props => {\n  const { data, currentFilter, setCurrentFilter, classes, filters, department, setDepartment, setOpenDialog } = props;\n  const [breadcrumbsList, setBreadcrumbsList] = useState([{ name: currentFilter, action: '', level: 0 }]);\n  const handleFilterChange = e => {\n    setCurrentFilter(e.target.value);\n    resetBreadcrumbs(e.target.value);\n  };\n  const handleOnMapClick = data => {\n    if (department.id === '' && currentFilter === filters[0].label) {\n      setDepartment({ id: data.id, name: data.name });\n      if (breadcrumbsList.length < 2) {\n        const list = [...breadcrumbsList];\n        list.push({ name: data.name, level: breadcrumbsList.length + 1, action: '' });\n        setBreadcrumbsList(list);\n      }\n    } else {\n      setOpenDialog(true);\n    }\n  };\n  const resetBreadcrumbs = name => {\n    onClickBreadcrumbs(0, name);\n  };\n  const onClickBreadcrumbs = (index, name) => {\n    const list = [...breadcrumbsList];\n    list.splice(index + 1, list.length);\n    list[0].name = name;\n    setBreadcrumbsList(list);\n    setDepartment({ id: '', name: '' });\n  };\n  const getBreadcrumbs = () => {\n    return (\n      <>\n        <Breadcrumbs aria-label={'breadcrumb'} separator={'>'} className=\"bread-crumbs\">\n          {breadcrumbsList.map((item, index) =>\n            breadcrumbsList.length - 1 === index ? (\n              <Typography underline=\"hover\" variant={'h6'} key={index}>\n                {item.name}\n              </Typography>\n            ) : (\n              <Link\n                underline=\"hover\"\n                color=\"primary\"\n                variant={'h6'}\n                href=\"\"\n                onClick={e => {\n                  e.preventDefault();\n                  onClickBreadcrumbs(index, currentFilter);\n                }}\n                key={index}>\n                {item.name}\n              </Link>\n            ),\n          )}\n        </Breadcrumbs>\n      </>\n    );\n  };\n  const getFilters = () => {\n    return (\n      <>\n        <Box component=\"span\" mr={3} height={10} width={10} bgcolor={COLORS[4]} borderRadius=\"50%\" />\n        <Select\n          className={classes.selectBoxRoot}\n          labelId=\"simple-select-label\"\n          id=\"simple\"\n          value={currentFilter}\n          onChange={handleFilterChange}>\n          {filters.map((item, index) => (\n            <MenuItem key={index} value={item.label}>\n              {item.label}\n            </MenuItem>\n          ))}\n        </Select>\n      </>\n    );\n  };\n\n  return (\n    <CmtAdvCard>\n      <CmtCardHeader title={`Number of Risks  by ${currentFilter}`} subTitle={``}>\n        {getFilters()}\n      </CmtCardHeader>\n      <CmtAdvCardContent className={classes.cardContentRoot}>\n        <Box mb={2}>{getBreadcrumbs()}</Box>\n        <GridContainer>\n          <Grid item xs={12} md={12}>\n            <RisksTreeMapChat {...{ data, handleOnMapClick }} />\n          </Grid>\n          <Grid item xs={12} md={12}>\n            <Typography gutterBottom variant={'h4'}>\n              KEY\n            </Typography>\n            <RisksTreeMapKey {...{ data, department, currentFilter }} />\n          </Grid>\n        </GridContainer>\n      </CmtAdvCardContent>\n    </CmtAdvCard>\n  );\n};\nconst RisksTreeMapKey = ({ data, department, currentFilter, ...rest }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Grid container spacing={1}>\n        {data !== undefined &&\n          data.length !== 0 &&\n          data.map((item, index) => (\n            <Grid item xs={12} md={3} key={index}>\n              <Box\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"space-between\"\n                className={clsx(classes.countryCellItem, {\n                  active: department.name === item.name,\n                })}\n                {...rest}>\n                <Box component=\"span\" ml={3} height={10} width={10} bgcolor={item.color} borderRadius=\"50%\" />\n                <Box>\n                  <Box className=\"text-hover\" px={1}>\n                    <b>{item.name}</b>\n                  </Box>\n                </Box>\n                <Box px={1} display=\"flex\" alignItems=\"center\">\n                  <Box mx={1}>{item.risks}</Box>\n                </Box>\n              </Box>\n            </Grid>\n          ))}\n      </Grid>\n      <Typography gutterBottom variant={'h6'}>\n        {currentFilter}\n      </Typography>\n      <Grid container spacing={1}>\n        {data !== undefined &&\n          data.length !== 0 &&\n          data[0].children.map((item, index) => (\n            <Grid item xs={12} md={3} key={index}>\n              <Box\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"space-between\"\n                className={clsx(classes.countryCellItem, {\n                  active: department.name === item.name,\n                })}\n                {...rest}>\n                {/*<Box component=\"span\" ml={3} height={10} width={10} bgcolor={COLORS[4]} borderRadius=\"50%\" />*/}\n                <Box>\n                  <Box className=\"text-hover\" px={1}>\n                    <b>{item.slug}</b> - {item.name}\n                  </Box>\n                </Box>\n                <Box px={1} display=\"flex\" alignItems=\"center\">\n                  <Box mx={1}></Box>\n                </Box>\n              </Box>\n            </Grid>\n          ))}\n      </Grid>\n    </>\n  );\n};\nconst RisksTreeMapChat = props => {\n  const theme = useTheme();\n  const { data, color = COLORS[4], handleOnMapClick } = props;\n  const onClickTreeMap = data => {\n    handleOnMapClick(data);\n  };\n\n  const CustomizedContent = props => {\n    const { root, depth, x, y, width, height, index, fill, color, risks, name, slug } = props;\n    //colors[Math.floor((index / root.children.length) * 6)]\n    return (\n      <g>\n        {depth === 1 && (\n          <defs>\n            <linearGradient id={`color${index}`} x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\" gradientTransform=\"rotate(90)\">\n              <stop offset=\"20%\" stopColor={color} stopOpacity={1} />\n              <stop offset=\"100%\" stopColor={getGradientColor(color)} stopOpacity={1} />\n            </linearGradient>\n          </defs>\n        )}\n        <rect\n          x={x}\n          y={y}\n          width={width}\n          height={height}\n          style={{\n            fill: depth === 1 ? `url(#color${index})` : 'none',\n            stroke: '#fff',\n            strokeWidth: 2 / (depth + 1e-10),\n            strokeOpacity: 1 / (depth + 1e-10),\n            cursor: 'pointer',\n          }}\n        />\n        {depth === 2 ? (\n          <text\n            x={x + width / 2}\n            y={y + height / 2 + 7}\n            textAnchor=\"middle\"\n            fontFamily={theme.typography.fontFamily}\n            letterSpacing={2}\n            fontWeight={theme.typography.fontWeightLight}\n            fill={alpha(theme.palette.common.white, 0.74)}\n            fontSize={14}>\n            {slug}\n          </text>\n        ) : null}\n        {depth === 2 ? (\n          <text\n            x={x + width / 2}\n            y={y + height / 2 + 27}\n            fontFamily={theme.typography.fontFamily}\n            letterSpacing={2}\n            fontWeight={theme.typography.fontWeightLight}\n            textAnchor=\"middle\"\n            fill={alpha(theme.palette.common.white, 0.74)}\n            fontSize={12}>\n            {risks}\n          </text>\n        ) : null}\n        {/*{depth === 1 ? (*/}\n        {/*  <text x={x + 4} y={y + 18} fill=\"#fff\" fontSize={14} fillOpacity={0.9}>*/}\n        {/*    {index + 1}*/}\n        {/*  </text>*/}\n        {/*) : null}*/}\n      </g>\n    );\n  };\n  const getGradientColor = color => {\n    const gradientColor = GRADIENT_COLORS.find(element => element[0] === color);\n    if (gradientColor !== undefined) {\n      return gradientColor[1];\n    }\n    return null;\n  };\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      return (\n        <Box component={Paper} boxShadow={2} padding={2}>\n          <Typography variant={'h5'} style={{ color: payload[0].payload.fill }}>\n            {payload[0].payload.name}\n          </Typography>\n          <Typography variant={'caption'}>{`Risks : ${payload[0].value}`}</Typography>\n        </Box>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      <Treemap\n        margin={{ top: 0, right: 0, left: 0, bottom: 0 }}\n        data={data}\n        dataKey=\"risks\"\n        ratio={4 / 3}\n        stroke=\"#fff\"\n        //onClick={data => onClickTreeMap(data)}\n        fill={`url(#color1)`}\n        content={<CustomizedContent colors={COLORS} />}\n        isAnimationActive={true}>\n        <Tooltip content={CustomTooltip} />\n      </Treemap>\n    </ResponsiveContainer>\n  );\n};\n\nexport default AssessmentTreeMap;\n","import React from 'react';\nimport {\n  Column,\n  ColumnChooser,\n  FilterPanel,\n  FilterRow,\n  HeaderFilter,\n  Pager,\n  Paging,\n  Scrolling,\n  SearchPanel,\n  StateStoring,\n} from 'devextreme-react/data-grid';\nimport { Chip } from '@material-ui/core';\nimport { DataGrid } from 'devextreme-react';\n\nconst RisksTableView = props => {\n  const { risks } = props;\n  const multipleValues = ({ displayValue }) => {\n    return displayValue.map((value, index) => <li key={index}>{value}</li>);\n  };\n  function actionStatus({ displayValue }) {\n    let color;\n    if (displayValue === 'Approved') {\n      color = 'green';\n    } else if (displayValue === 'Pending') {\n      color = 'orange';\n    } else if (displayValue === 'Rejected') {\n      color = 'red';\n    }\n\n    return <Chip style={{ color: color, borderColor: color }} size={'small'} variant={'outlined'} label={displayValue} />;\n  }\n\n  return (\n    <>\n      <DataGrid\n        id=\"risksView\"\n        columnAutoWidth={true}\n        dataSource={risks}\n        showColumnLines={true}\n        showRowLines={true}\n        showBorders={true}\n        allowColumnResizing={true}\n        rowAlternationEnabled={true}>\n        <FilterRow visible={true} />\n        <StateStoring enabled={false} type=\"localStorage\" storageKey=\"risksView\" />\n        <FilterPanel visible={true} />\n        <SearchPanel visible={true} />\n        <ColumnChooser enabled={true} mode=\"select\" />\n        <HeaderFilter visible={true} allowSearch={true} />\n        <Column dataField=\"id\" caption=\"Risk ID\" key=\"id\" visible={true} />\n        <Column\n          dataField=\"riskTitle\"\n          width={150}\n          caption=\"Risk Title\"\n          allowHeaderFiltering={true}\n          allowSearch={true}\n          allowFiltering={false}\n        />\n        <Column\n          dataField=\"riskEvent\"\n          width={200}\n          caption=\"Risk Event\"\n          allowHeaderFiltering={true}\n          allowSearch={true}\n          allowFiltering={false}\n        />\n        <Column\n          dataField=\"status\"\n          minWidth={100}\n          caption=\"Status\"\n          allowHeaderFiltering={true}\n          allowSearch={true}\n          allowFiltering={false}\n          allowHiding={true}\n          cellRender={actionStatus}\n        />\n        <Column\n          dataField=\"riskCategory\"\n          minWidth={100}\n          caption=\"Risk Category\"\n          allowHeaderFiltering={true}\n          allowSearch={true}\n          allowFiltering={false}\n        />\n        <Column\n          dataField=\"department\"\n          minWidth={100}\n          caption=\"Department\"\n          allowHeaderFiltering={true}\n          allowSearch={true}\n          allowFiltering={false}\n        />\n        <Column\n          dataField=\"section\"\n          minWidth={100}\n          caption=\"Section\"\n          allowHeaderFiltering={true}\n          allowSearch={true}\n          allowFiltering={false}\n        />\n        <Column\n          dataField=\"subSection\"\n          minWidth={100}\n          caption=\"Sub-Section\"\n          allowHeaderFiltering={true}\n          allowSearch={true}\n          allowFiltering={false}\n        />\n        <Column\n          dataField=\"rootCauses\"\n          minWidth={100}\n          caption=\"Root Causes\"\n          allowHeaderFiltering={true}\n          allowSearch={true}\n          cellRender={multipleValues}\n          allowFiltering={false}\n        />\n        <Column dataField=\"riskImpact\" minWidth={100} caption=\"Risk Impact\" cellRender={multipleValues} />\n        <Column\n          dataField=\"riskImpactAmount\"\n          minWidth={100}\n          caption=\"Risk Impact Amount\"\n          allowHeaderFiltering={true}\n          allowSearch={true}\n          allowFiltering={false}\n        />\n        <Column\n          dataField=\"probability\"\n          minWidth={100}\n          caption=\"Probability\"\n          allowHeaderFiltering={true}\n          allowSearch={true}\n          allowFiltering={false}\n        />\n        <Column\n          dataField=\"severity\"\n          minWidth={100}\n          caption=\"Severity\"\n          allowHeaderFiltering={true}\n          allowSearch={true}\n          allowFiltering={false}\n        />\n        <Column\n          dataField=\"residualRisk\"\n          minWidth={100}\n          caption=\"Residual Risk\"\n          allowHeaderFiltering={true}\n          allowSearch={true}\n          allowFiltering={false}\n        />\n        <Column\n          dataField=\"riskControlCat\"\n          minWidth={100}\n          caption=\"Risk Control Category\"\n          allowHeaderFiltering={true}\n          allowSearch={true}\n          allowFiltering={false}\n        />\n        <Column\n          dataField=\"controlActions\"\n          minWidth={100}\n          caption=\"Mitigations/Control\"\n          allowHeaderFiltering={true}\n          allowSearch={true}\n          allowFiltering={false}\n          cellRender={multipleValues}\n        />\n        <Column\n          dataField=\"lossType\"\n          minWidth={100}\n          caption=\"Loss Type\"\n          allowHeaderFiltering={true}\n          allowSearch={true}\n          allowFiltering={false}\n        />\n        <Column\n          dataField=\"riskOwner\"\n          minWidth={100}\n          caption=\"Risk Owner\"\n          allowHeaderFiltering={true}\n          allowSearch={true}\n          allowFiltering={false}\n        />\n        <Column\n          dataField=\"keyIndicator\"\n          minWidth={100}\n          caption=\"Risk Indicator\"\n          allowHeaderFiltering={true}\n          allowSearch={true}\n          allowFiltering={false}\n        />\n        <Column\n          dataField=\"riskAppetite\"\n          minWidth={100}\n          caption=\"Risk Appetite\"\n          allowHeaderFiltering={true}\n          allowSearch={true}\n          allowFiltering={false}\n        />\n        <Scrolling rowRenderingMode=\"virtual\" />\n        <Paging defaultPageSize={20} />\n        <Pager\n          visible={true}\n          // allowedPageSizes={allowedPageSizes}\n          displayMode={true}\n          showPageSizeSelector={false}\n          showInfo={true}\n          showNavigationButtons={true}\n        />\n      </DataGrid>\n    </>\n  );\n};\n\nexport default RisksTableView;\n","import React, { useEffect, useState } from 'react';\nimport GridContainer from '../../../../../@jumbo/components/GridContainer';\nimport { Box, Button, Dialog, DialogContent, DialogTitle, Grid, makeStyles, Slide, Zoom } from '@material-ui/core';\n\nimport { alpha } from '@material-ui/core/styles';\nimport AssessmentTreeMap from './AssessmentTreeMap';\nimport {\n  assessedTreeDataCat,\n  assessedTreeDataDepartments,\n  lossTypeRisksCatProgress,\n  lossTypeRisksDeptProgress,\n  riskControlTypeData,\n  riskControlTypeDataCat,\n  riskProbabilityData,\n  riskProbabilityDataCat,\n  riskTreeDataSections,\n} from '../../dummyData';\n\nimport RisksTableView from '../RisksTables';\nimport { risksList } from '../../../RiskManagement/dummyData';\nimport LossTypeProbabilityChart from '../../GeneralDashboard/RisksGraphs/LossTypeProbabilityChart';\nimport ControlsChart from '../../GeneralDashboard/RisksGraphs/ControlsChart';\n\nconst useStyles = makeStyles(theme => ({\n  headerItem: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.down('xs')]: {\n      fontSize: 13,\n      paddingLeft: 8,\n      paddingRight: 8,\n    },\n    color: alpha(theme.palette.common.white, 0.74),\n    '&:not(:first-child)': {\n      borderLeft: `1px solid ${alpha(theme.palette.common.white, 0.8)}`,\n    },\n    '& .MuiSvgIcon-root': {\n      marginRight: 12,\n    },\n  },\n  backdropContent: {\n    color: alpha(theme.palette.common.white, 0.74),\n    '& .form-control': {\n      marginBottom: 20,\n      '& label, & .MuiInput-formControl, & .MuiSelect-icon, & .MuiIconButton-root': {\n        color: alpha(theme.palette.common.white, 0.74),\n      },\n      '& .MuiInput-underline:before, & .MuiInput-underline:after': {\n        borderBottomColor: alpha(theme.palette.common.white, 0.74),\n      },\n    },\n  },\n  dialogRoot: {\n    position: 'relative',\n  },\n  dialogHeader: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  dialogTitleRoot: {\n    '& .MuiTypography-h6': {\n      fontSize: 16,\n      color: theme.palette.common.white,\n    },\n  },\n  selectBoxRoot: {\n    '&:before, &:after': {\n      display: 'none',\n    },\n    '& .MuiSelect-select:focus': {\n      backgroundColor: 'transparent',\n    },\n  },\n}));\nconst filterOptions = [\n  { id: 1, label: 'Departments' },\n  { id: 2, label: 'Control Categories' },\n];\n\nconst RisksGraphs = () => {\n  const [data, setData] = useState([]);\n  const [probabilityData, setProbabiltyData] = useState([]);\n  const [lossTypeData, setLossTypeData] = useState([]);\n  const [controlTypeData, setControlTypeData] = useState([]);\n  const [filters, setFilters] = useState(filterOptions);\n  const [department, setDepartment] = useState({ id: '', name: '' });\n  const [risks, setRisks] = useState([]);\n  const [currentFilter, setCurrentFilter] = useState(filters[0].label);\n  const [openDialog, setOpenDialog] = useState(false);\n  const classes = useStyles();\n\n  const fetchData = () => {\n    if (currentFilter === filters[0].label) {\n      //Set data by departments\n      if (department.id !== '' && department.name !== '') {\n        setData(riskTreeDataSections);\n      } else {\n        setData(assessedTreeDataDepartments);\n        setLossTypeData(lossTypeRisksDeptProgress);\n        setProbabiltyData(riskProbabilityData);\n        setControlTypeData(riskControlTypeData);\n      }\n    } else if (currentFilter === filters[1].label) {\n      //Set data by control Categories\n      setData(assessedTreeDataCat);\n      setLossTypeData(lossTypeRisksCatProgress);\n      setProbabiltyData(riskProbabilityDataCat);\n      setControlTypeData(riskControlTypeDataCat);\n    }\n  };\n  // const fetchProbabilityData = () => {\n  //   setProbabiltyData(riskProbabilityData);\n  // };\n  // const fetchLossTypeData = () => {\n  //   setLossTypeData(riskLossTypeData);\n  // };\n  const fetchRisks = () => {\n    setRisks(risksList);\n  };\n  const onCloseDialog = () => {\n    setOpenDialog(false);\n  };\n  useEffect(() => {\n    if (openDialog) {\n      fetchRisks();\n    } else {\n      setRisks([]);\n    }\n  }, [openDialog]);\n  useEffect(() => {\n    fetchData();\n  }, [currentFilter, department]);\n\n  // useEffect(() => {\n  //  // fetchProbabilityData();\n  //  // fetchLossTypeData();\n  // }, []);\n\n  return (\n    <React.Fragment>\n      <GridContainer>\n        <Grid item xs={12} md={12}>\n          <AssessmentTreeMap\n            {...{ data, classes, filters, currentFilter, setCurrentFilter, department, setDepartment, setOpenDialog }}\n          />\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <LossTypeProbabilityChart\n            {...{ data: probabilityData, lossTypeData, classes, currentFilter, setCurrentFilter, filters }}\n          />\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <ControlsChart {...{ data: controlTypeData, classes, currentFilter, setCurrentFilter, filters }} />\n        </Grid>\n      </GridContainer>\n      <ShowRisksTable {...{ currentFilter, openDialog, onCloseDialog, risks }} />\n    </React.Fragment>\n  );\n};\n\nconst Transition = React.forwardRef((props, ref) => {\n  return <Zoom ref={ref} {...props} unmountOnExit />;\n});\nconst ShowRisksTable = props => {\n  const { onCloseDialog, openDialog, currentFilter, risks } = props;\n  const classes = useStyles();\n  return (\n    <Dialog\n      open={openDialog}\n      fullWidth={true}\n      maxWidth={'lg'}\n      onClose={onCloseDialog}\n      scroll={'paper'}\n      TransitionComponent={Transition}>\n      <div className={classes.dialogHeader}>\n        <DialogTitle className={classes.dialogTitleRoot}>Risks by {currentFilter}</DialogTitle>\n      </div>\n\n      <DialogContent style={{ marginTop: 10 }}>\n        <Box sx={{ width: '100%' }}>\n          <RisksTableView {...{ risks }} />\n        </Box>\n\n        <Box display=\"flex\" justifyContent=\"flex-end\" mb={4}>\n          <Button onClick={onCloseDialog} size=\"small\">\n            Cancel\n          </Button>\n        </Box>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default RisksGraphs;\n","import React from 'react';\nimport PageContainer from '../../../../@jumbo/components/PageComponents/layouts/PageContainer';\nimport { HEADER } from '../../../../@jumbo/constants/HeaderMessages';\nimport { Box, Button, Grid } from '@material-ui/core';\nimport { Menu, MenuItem } from '@mui/material';\nimport { ArrowDropDown } from '@material-ui/icons';\nimport { useHistory } from 'react-router-dom';\nimport GridContainer from '../../../../@jumbo/components/GridContainer';\nimport RisksGraphs from './AssessmentGraphs';\nimport { NavigationButton } from '../DashboardHeader';\n\nconst breadcrumbs = [\n  { label: HEADER.DASHBOARD, link: '/' },\n  { label: HEADER.ASSESSMENT_DASHBOARD, isActive: true },\n];\n\nconst AssessmentDashboard = () => {\n  return (\n    <PageContainer heading={HEADER.ASSESSMENT_DASHBOARD} breadcrumbs={breadcrumbs}>\n      <NavigationButton />\n      <Box mt={3}>\n        <RisksGraphs />\n      </Box>\n    </PageContainer>\n  );\n};\n\nexport default AssessmentDashboard;\n"],"sourceRoot":""}