{"version":3,"sources":["redux/actions/Compliance.js","routes/Pages/ComplianceModule/LegalCompliance/AddEditLegalCompliance/index.js"],"names":["fetchLegalCompliance","dispatch","a","axiosInstance","useAxios","get","API_URL","FETCH_LEGAL","then","res","status","REQUEST_STATUS","STATUS_OK","type","COMPLIANCE","LEGAL","GET_ALL","payload","data","catch","err","addLegalCompliance","callBackFunc","post","CREATE_LEGAL","fetchSuccess","id","ADD_ONE","console","log","undefined","response","BAD_REQUEST","fetchError","errors","Name","message","updateLegalCompliance","updatedData","UPDATE_LEGAL","UPDATE_ONE","fetchEnterpriseCompliance","FETCH_ENTERPRISE","ENTERPRISE","addEnterpriseCompliance","CREATE_ENTERPRISE","updateEnterpriseCompliance","UPDATE_ENTERPRISE","fetchStatutoryCompliance","FETCH_STATUTORY","STATUTORY","fetchCompliances","FETCH_COMPLIANCES","formattedData","length","map","datum","push","compliance","GET_COMPLIANCES","fetchApprovals","FETCH_APPROVALS","GET_APPROVALS","addStatutoryCompliance","CREATE_STATUTORY","updateStatutoryCompliance","UPDATE_STATUTORY","approveCompliance","APPROVE_COMPLIANCE","success","complyCompliance","COMPLY_COMPLIANCE","initialBreadcrumbs","label","HEADER","DASHBOARD","link","AppHeader","props","classes","useStyles","handleOnSave","showForm","handleOnCancel","isEditable","setIsEditable","className","inBuildAppHeader","inBuildAppHeaderSidebar","style","color","onClick","e","history","back","inBuildAppHeaderTitle","component","variant","inBuildAppHeaderContent","ml","display","alignItems","backgroundColor","size","steps","SideBarIncident","activeStep","handleNext","handlePrev","setActiveStep","inBuildAppSidebar","perfectScrollbarContactSidebar","justifyItems","justifyContent","mt","disabled","m","appNav","renderRow","item","index","SideBarItem","key","labelRef","useRef","Fragment","ref","button","title","clsx","appNavItem","appTaskNavItem","active","completed","primary","ComplianceContent","useDispatch","useSelector","subsidiaries","currentSubsidiary","departments","sections","subSections","utils","currencies","caseTypes","handleReset","isUpdate","complianceDetails","setComplianceDetails","useState","Date","selectedDeadline","setSelectedDeadline","initValue","name","useEffect","dateofNextHearing","moment","format","fees","fines","feesAmount","parseFloat","finesAmount","totalFees","computeTotalFees","fine","companyId","departmentsId","departmentsName","sectionsId","sectionsName","subSectionsId","subSectionsName","fetchSubsidiaries","fetchDepartments","fetchSections","fetchSubSections","fetchCaseTypes","fetchCurrencies","inBuildAppMainContent","minHeight","perfectScrollbarContactCon","p","width","md","xs","fullWidth","required","value","onChange","target","multiline","minRows","details","valueKey","labelKey","caseType","judgement","options","find","subsidiary","getOptionLabel","option","event","companyName","renderOption","selected","renderInput","params","filter","department","helperText","section","subSection","InputProps","startAdornment","position","select","penaltyCurrency","disableUnderline","autoOk","clearable","inputVariant","date","animateYearScrolling","managementComments","Preview","pb","flex","rawHTML","isView","inBuildAppCard","aria-label","tableHeader","tableHeaderCell","React","createElement","dangerouslySetInnerHTML","__html","caseFileAttachment","SuccessPage","flexDirection","src","instructions","marginTop","to","AddEditLegalCompliance","initialDetails","breadcrumbs","setBreadcrumbs","setIsUpdate","location","useLocation","state","LEGAL_COMPLIANCE","url","UPDATE_LEGAL_COMPLIANCE","isActive","CREATE_LEGAL_COMPLIANCE","heading","inBuildAppContainer","preventDefault"],"mappings":"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","file":"static/js/2.833fb785.chunk.js","sourcesContent":["import { COMPLIANCE, DEPARTMENTS } from '../../@jumbo/constants/ActionTypes';\r\nimport { fetchError, fetchSuccess } from './Common';\r\nimport { API_URL, REQUEST_STATUS } from '../../@jumbo/utils/apis';\r\nimport useAxios from '../../services/Requests/useAxios';\r\n\r\n//------------------ Legal Compliance -----------------------//\r\nexport const fetchLegalCompliance = () => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .get(`${API_URL.FETCH_LEGAL}`)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch({\r\n            type: COMPLIANCE.LEGAL.GET_ALL,\r\n            payload: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // if (err.response.status !== undefined) {\r\n        //   if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n        //     dispatch(fetchError(err.response.data.errors.Name[0]));\r\n        //   }\r\n        // } else {\r\n        //   dispatch(fetchError(err.message));\r\n        // }\r\n      });\r\n  };\r\n};\r\nexport const addLegalCompliance = (data, callBackFunc) => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.CREATE_LEGAL}`, data)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch(fetchSuccess('Legal Compliance Created Successfully!'));\r\n          data.id = res.data?.id;\r\n          dispatch({\r\n            type: COMPLIANCE.LEGAL.ADD_ONE,\r\n            payload: data,\r\n          });\r\n          callBackFunc();\r\n        }\r\n        console.log(res);\r\n      })\r\n      .catch(err => {\r\n        if (err.response.status !== undefined) {\r\n          if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n            dispatch(fetchError(err.response.data.errors?.Name[0]));\r\n          }\r\n        } else {\r\n          dispatch(fetchError(err.message));\r\n        }\r\n      });\r\n  };\r\n};\r\nexport const updateLegalCompliance = (updatedData, callBackFunc) => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.UPDATE_LEGAL}`, updatedData)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch(fetchSuccess('Compliance Updated Successfully!'));\r\n          dispatch({\r\n            type: COMPLIANCE.LEGAL.UPDATE_ONE,\r\n            payload: updatedData,\r\n          });\r\n          callBackFunc();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.response?.status !== undefined) {\r\n          if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n            dispatch(fetchError(err.response.data.errors?.Name[0]));\r\n          }\r\n        } else {\r\n          dispatch(fetchError(err.message));\r\n        }\r\n      });\r\n  };\r\n  // return dispatch => {\r\n  //   dispatch({\r\n  //     type: DEPARTMENTS.UPDATE_ONE,\r\n  //     payload: updatedData,\r\n  //   });\r\n  //   dispatch(fetchSuccess('Department Updated Successfully!'));\r\n  // };\r\n};\r\nexport const deleteLegalCompliance = id => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: COMPLIANCE.LEGAL.DELETE_ONE,\r\n      payload: id,\r\n    });\r\n    dispatch(fetchSuccess('Compliance Removed Successfully!'));\r\n  };\r\n};\r\n\r\n//------------------ Enterprise Compliance -----------------------//\r\nexport const fetchEnterpriseCompliance = () => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .get(`${API_URL.FETCH_ENTERPRISE}`)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch({\r\n            type: COMPLIANCE.ENTERPRISE.GET_ALL,\r\n            payload: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // if (err.response.status !== undefined) {\r\n        //   if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n        //     dispatch(fetchError(err.response.data.errors.Name[0]));\r\n        //   }\r\n        // } else {\r\n        //   dispatch(fetchError(err.message));\r\n        // }\r\n      });\r\n  };\r\n};\r\nexport const addEnterpriseCompliance = (data, callBackFunc) => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.CREATE_ENTERPRISE}`, data)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch(fetchSuccess('Enterprise Compliance Created Successfully!'));\r\n          data.id = res.data?.id;\r\n          dispatch({\r\n            type: COMPLIANCE.ENTERPRISE.ADD_ONE,\r\n            payload: data,\r\n          });\r\n          callBackFunc();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.response.status !== undefined) {\r\n          if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n            dispatch(fetchError(err.response.data.errors?.Name[0]));\r\n          }\r\n        } else {\r\n          dispatch(fetchError(err.message));\r\n        }\r\n      });\r\n  };\r\n};\r\nexport const updateEnterpriseCompliance = (updatedData, callBackFunc) => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.UPDATE_ENTERPRISE}`, updatedData)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch(fetchSuccess('Compliance Updated Successfully!'));\r\n          dispatch({\r\n            type: COMPLIANCE.ENTERPRISE.UPDATE_ONE,\r\n            payload: updatedData,\r\n          });\r\n          callBackFunc();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.response?.status !== undefined) {\r\n          if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n            dispatch(fetchError(err.response.data.errors?.Name[0]));\r\n          }\r\n        } else {\r\n          dispatch(fetchError(err.message));\r\n        }\r\n      });\r\n  };\r\n  // return dispatch => {\r\n  //   dispatch({\r\n  //     type: DEPARTMENTS.UPDATE_ONE,\r\n  //     payload: updatedData,\r\n  //   });\r\n  //   dispatch(fetchSuccess('Department Updated Successfully!'));\r\n  // };\r\n};\r\nexport const deleteEnterpriseCompliance = id => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: COMPLIANCE.ENTERPRISE.DELETE_ONE,\r\n      payload: id,\r\n    });\r\n    dispatch(fetchSuccess('Compliance Removed Successfully!'));\r\n  };\r\n};\r\n\r\n//------------------ Statutory Compliance -----------------------//\r\nexport const fetchStatutoryComplianceMain = () => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .get(`${API_URL.FETCH_STATUTORY_MAIN}`)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch({\r\n            type: COMPLIANCE.STATUTORY.GET_ALL,\r\n            payload: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // if (err.response.status !== undefined) {\r\n        //   if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n        //     dispatch(fetchError(err.response.data.errors.Name[0]));\r\n        //   }\r\n        // } else {\r\n        //   dispatch(fetchError(err.message));\r\n        // }\r\n      });\r\n  };\r\n};\r\nexport const fetchStatutoryCompliance = () => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .get(`${API_URL.FETCH_STATUTORY}`)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch({\r\n            type: COMPLIANCE.STATUTORY.GET_ALL,\r\n            payload: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // if (err.response.status !== undefined) {\r\n        //   if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n        //     dispatch(fetchError(err.response.data.errors.Name[0]));\r\n        //   }\r\n        // } else {\r\n        //   dispatch(fetchError(err.message));\r\n        // }\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchCompliances = () => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .get(`${API_URL.FETCH_COMPLIANCES}`)\r\n      .then(res => {\r\n        const { data } = res;\r\n        const formattedData = [];\r\n        if (data.length > 0) {\r\n          data.map(datum => formattedData.push({ ...datum.compliance }));\r\n        }\r\n\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch({\r\n            type: COMPLIANCE.STATUTORY.GET_COMPLIANCES,\r\n            payload: formattedData,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // if (err.response.status !== undefined) {\r\n        //   if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n        //     dispatch(fetchError(err.response.data.errors.Name[0]));\r\n        //   }\r\n        // } else {\r\n        //   dispatch(fetchError(err.message));\r\n        // }\r\n      });\r\n  };\r\n};\r\n\r\n\r\n// FETCH APPROVALS\r\nexport const fetchApprovals = () => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance.get(`${API_URL.FETCH_APPROVALS}`).then(res => {\r\n      const { data } = res;\r\n      const formattedData = [];\r\n      if (data.length > 0) {\r\n        data.map(datum => formattedData.push({ ...datum.compliance }));\r\n      }\r\n\r\n      if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n        dispatch({\r\n          type: COMPLIANCE.STATUTORY.GET_APPROVALS,\r\n          payload: formattedData,\r\n        });\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchStatutoryComplianceSub = id => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    return await axiosInstance\r\n      .post(`${API_URL.FETCH_STATUTORY_SUB}`, { id })\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch({\r\n            type: COMPLIANCE.STATUTORY.GET_SUB,\r\n            payload: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // if (err.response.status !== undefined) {\r\n        //   if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n        //     dispatch(fetchError(err.response.data.errors.Name[0]));\r\n        //   }\r\n        // } else {\r\n        //   dispatch(fetchError(err.message));\r\n        // }\r\n      });\r\n  };\r\n};\r\nexport const addStatutoryCompliance = (data, callBackFunc) => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.CREATE_STATUTORY}`, data)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch(fetchSuccess('Statutory Compliance Created Successfully!'));\r\n          data.id = res.data?.id;\r\n          dispatch({\r\n            type: COMPLIANCE.STATUTORY.ADD_ONE,\r\n            payload: data,\r\n          });\r\n          callBackFunc();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.response.status !== undefined) {\r\n          if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n            dispatch(fetchError(err.response.data.errors?.Name[0]));\r\n          }\r\n        } else {\r\n          dispatch(fetchError(err.message));\r\n        }\r\n      });\r\n  };\r\n};\r\nexport const updateStatutoryCompliance = (updatedData, callBackFunc) => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.UPDATE_STATUTORY}`, updatedData)\r\n      .then(res => {\r\n        if (res.status === REQUEST_STATUS.STATUS_OK) {\r\n          dispatch(fetchSuccess('Compliance Updated Successfully!'));\r\n          dispatch({\r\n            type: COMPLIANCE.STATUTORY.UPDATE_ONE,\r\n            payload: updatedData,\r\n          });\r\n          callBackFunc();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.response?.status !== undefined) {\r\n          if (err.response.status === REQUEST_STATUS.BAD_REQUEST) {\r\n            dispatch(fetchError(err.response.data.errors?.Name[0]));\r\n          }\r\n        } else {\r\n          dispatch(fetchError(err.message));\r\n        }\r\n      });\r\n  };\r\n  // return dispatch => {\r\n  //   dispatch({\r\n  //     type: DEPARTMENTS.UPDATE_ONE,\r\n  //     payload: updatedData,\r\n  //   });\r\n  //   dispatch(fetchSuccess('Department Updated Successfully!'));\r\n  // };\r\n};\r\nexport const deleteStatutoryCompliance = id => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: COMPLIANCE.STATUTORY.DELETE_ONE,\r\n      payload: id,\r\n    });\r\n    dispatch(fetchSuccess('Compliance Removed Successfully!'));\r\n  };\r\n};\r\n\r\n// APPROVE COMPLIANCE\r\nexport const approveCompliance = data => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.APPROVE_COMPLIANCE}`, data)\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          dispatch(fetchSuccess('Compliance Approved Successfully!'));\r\n        } else {\r\n          dispatch(fetchError(res.data.message ?? 'Ann error occured try again later!'));\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\n\r\n// COMPLY COMPLIANCE\r\nexport const complyCompliance = data => {\r\n  return async dispatch => {\r\n    let axiosInstance = useAxios(dispatch);\r\n    await axiosInstance\r\n      .post(`${API_URL.COMPLY_COMPLIANCE}`, data)\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          dispatch(fetchSuccess('Complied Successfully!'));\r\n        } else {\r\n          dispatch(fetchError(res.data.message ?? 'Ann error occured try again later!'));\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n","import React, { useEffect, useRef, useState } from 'react';\nimport PageContainer from '../../../../../@jumbo/components/PageComponents/layouts/PageContainer';\nimport { HEADER } from '../../../../../@jumbo/constants/HeaderMessages';\nimport {\n  Box,\n  Button,\n  Grid,\n  IconButton,\n  InputAdornment,\n  MenuItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { NotificationContainer } from 'react-notifications';\nimport useStyles from '../../../Roles/index.style';\nimport { ArrowBack } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { ArrowBackIos, ArrowForwardIos } from '@mui/icons-material';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CmtList from '../../../../../@coremat/CmtList';\nimport List from '@material-ui/core/List';\nimport GridContainer from '../../../../../@jumbo/components/GridContainer';\nimport AppTextInput from '../../../../../@jumbo/components/Common/formElements/AppTextInput';\nimport AppSelectBox from '../../../../../@jumbo/components/Common/formElements/AppSelectBox';\nimport { frequencies, priority } from '../../dummyData';\nimport { DatePicker } from '@material-ui/pickers';\nimport moment from 'moment';\nimport { departmentList, sectionsList, subSectionList, usersList } from '../../../Organization/dummyData';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useHistory, useParams } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addLegalCompliance, updateLegalCompliance } from '../../../../../redux/actions/Compliance';\nimport { fetchRoles } from '../../../../../redux/actions/Roles';\nimport { Autocomplete } from '@material-ui/lab';\nimport { fetchSubsidiaries } from '../../../../../redux/actions/Subsidiaries';\nimport { fetchDepartments } from '../../../../../redux/actions/Departments';\nimport { fetchSubSections } from '../../../../../redux/actions/SubSections';\nimport { fetchSections } from '../../../../../redux/actions/Sections';\nimport CmtImage from '../../../../../@coremat/CmtImage';\nimport { fetchCaseTypes, fetchCurrencies } from '../../../../../redux/actions/Utils';\n\nconst initialBreadcrumbs = [{ label: HEADER.DASHBOARD, link: '/' }];\nconst AppHeader = props => {\n  const classes = useStyles();\n  const { handleOnSave, showForm, handleOnCancel, isEditable, setIsEditable } = props;\n  const handleBackClick = e => {\n    // eslint-disable-next-line no-restricted-globals\n    history.back();\n  };\n  return (\n    <Box className={classes.inBuildAppHeader}>\n      <Box className={classes.inBuildAppHeaderSidebar}>\n        {/*<CmtImage src={'/images/roles.png'} style={{ width: '50px' }} />*/}\n        <IconButton style={{ color: 'white' }} onClick={handleBackClick}>\n          <ArrowBack />\n        </IconButton>\n        <Typography className={classes.inBuildAppHeaderTitle} component=\"div\" variant=\"h1\">\n          Compliance\n        </Typography>\n      </Box>\n      <Box className={classes.inBuildAppHeaderContent}>\n        {showForm && (\n          <Box ml=\"auto\" display=\"flex\" alignItems=\"center\">\n            {isEditable ? (\n              <>\n                <Box ml={1}>\n                  <Button\n                    variant={'contained'}\n                    style={{ backgroundColor: 'green', color: 'white' }}\n                    size={'small'}\n                    onClick={handleOnSave}>\n                    Save\n                  </Button>\n                </Box>\n              </>\n            ) : (\n              <>\n                <Box ml={1}>\n                  <Button\n                    variant={'contained'}\n                    style={{ backgroundColor: 'green', color: 'white' }}\n                    size={'small'}\n                    onClick={() => setIsEditable(true)}>\n                    Edit\n                  </Button>\n                </Box>\n              </>\n            )}\n            <Box ml={1}>\n              <Button\n                variant={'contained'}\n                style={{ backgroundColor: 'darkred', color: 'white' }}\n                size={'small'}\n                onClick={handleOnCancel}>\n                Close\n              </Button>\n            </Box>\n          </Box>\n        )}\n      </Box>\n    </Box>\n  );\n};\nconst steps = ['1. Compliance Details', '2. Finish'];\nconst AddEditLegalCompliance = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [activeStep, setActiveStep] = useState(0);\n  const initialDetails = {\n    title: '',\n    details: '',\n    judgement: '',\n    companyId: '',\n    departmentsId: null,\n    departmentsName: null,\n    sectionsId: null,\n    sectionsName: null,\n    subSectionsId: null,\n    subSectionsName: null,\n    fine: 0,\n    fees: 0,\n    totalFees: 0,\n    penaltyCurrency: 'KES',\n    managementComments: '',\n    active: true,\n    dateofNextHearing: moment(new Date()).format('YYYY-MM-DD'),\n    caseType: '',\n    caseFileAttachment: '',\n  };\n  const [complianceDetails, setComplianceDetails] = useState(initialDetails);\n  const [breadcrumbs, setBreadcrumbs] = useState(initialBreadcrumbs);\n  const [isUpdate, setIsUpdate] = useState(false);\n  const location = useLocation();\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n  const handlePrev = () => {\n    setActiveStep(activeStep - 1);\n  };\n  const handleReset = () => {\n    setComplianceDetails(initialDetails);\n    setIsUpdate(false);\n    setActiveStep(0);\n  };\n  const handleOnSave = e => {\n    e.preventDefault();\n    let data = { ...complianceDetails, fees: parseFloat(complianceDetails.fees), fine: parseFloat(complianceDetails.fine) };\n    if (isUpdate) {\n      dispatch(updateLegalCompliance(data, () => handleNext()));\n    } else {\n      dispatch(addLegalCompliance(data, () => handleNext()));\n    }\n  };\n\n  useEffect(() => {\n    if (location.state !== undefined) {\n      setBreadcrumbs([\n        ...breadcrumbs,\n        { label: HEADER.LEGAL_COMPLIANCE.name, link: `/compliance/${HEADER.LEGAL_COMPLIANCE.url}` },\n        { label: HEADER.UPDATE_LEGAL_COMPLIANCE, isActive: true },\n      ]);\n      setComplianceDetails(location.state);\n      setIsUpdate(true);\n    } else {\n      setBreadcrumbs([\n        ...breadcrumbs,\n        { label: HEADER.LEGAL_COMPLIANCE.name, link: `/compliance/${HEADER.LEGAL_COMPLIANCE.url}` },\n        { label: HEADER.CREATE_LEGAL_COMPLIANCE, isActive: true },\n      ]);\n      setComplianceDetails(initialDetails);\n      setIsUpdate(false);\n    }\n  }, [location]);\n\n  return (\n    <React.Fragment>\n      <PageContainer\n        heading={isUpdate ? HEADER.UPDATE_LEGAL_COMPLIANCE : HEADER.CREATE_LEGAL_COMPLIANCE}\n        breadcrumbs={breadcrumbs}>\n        <Box className={classes.inBuildAppCard}>\n          <AppHeader />\n          {activeStep === steps.length ? (\n            <Box className={clsx(classes.inBuildAppContainer)} minHeight={400}>\n              <Box width={'100%'} m={5}>\n                <SuccessPage {...{ classes, handleReset, isUpdate }} />\n              </Box>\n            </Box>\n          ) : (\n            <Box className={clsx(classes.inBuildAppContainer)}>\n              <SideBarIncident {...{ activeStep, handleNext, handlePrev, setActiveStep }} />\n              <ComplianceContent\n                {...{\n                  classes,\n                  isUpdate,\n                  activeStep,\n                  handleNext,\n                  handlePrev,\n                  handleReset,\n                  complianceDetails,\n                  setComplianceDetails,\n                  handleOnSave,\n                }}\n              />\n            </Box>\n          )}\n        </Box>\n      </PageContainer>\n      <NotificationContainer />\n    </React.Fragment>\n  );\n};\nconst SideBarIncident = props => {\n  const classes = useStyles();\n  const { activeStep, handleNext, handlePrev, setActiveStep } = props;\n  return (\n    <Box className={classes.inBuildAppSidebar}>\n      <PerfectScrollbar className={classes.perfectScrollbarContactSidebar}>\n        <Box display=\"flex\" justifyItems={'center'} justifyContent={'center'} mt={2}>\n          <IconButton color={'primary'} onClick={handlePrev} disabled={activeStep === 0}>\n            <ArrowBackIos />\n          </IconButton>\n          <Box m={1} />\n          <IconButton color={'primary'} onClick={handleNext} disabled={activeStep === steps.length - 1}>\n            <ArrowForwardIos />\n          </IconButton>\n        </Box>\n        <Box mt={5}>\n          <List component=\"nav\" className={classes.appNav}>\n            <CmtList\n              data={steps}\n              renderRow={(item, index) => (\n                <SideBarItem {...{ key: index, index, activeStep, item, classes, setActiveStep }} />\n              )}\n            />\n          </List>\n        </Box>\n      </PerfectScrollbar>\n    </Box>\n  );\n};\nconst SideBarItem = props => {\n  const { index, item, classes, activeStep, setActiveStep } = props;\n  const labelRef = useRef(null);\n\n  return (\n    <React.Fragment>\n      <ListItem\n        ref={labelRef}\n        button\n        title={item}\n        //disabled={activeStep < index}\n        onClick={e => setActiveStep(index)}\n        className={clsx(classes.appNavItem, classes.appTaskNavItem, {\n          active: index === activeStep,\n          completed: activeStep > index,\n        })}>\n        <ListItemText primary={item} className=\"Cmt-nav-text\" />\n      </ListItem>\n    </React.Fragment>\n  );\n};\nconst ComplianceContent = props => {\n  const dispatch = useDispatch();\n  const { subsidiaries, currentSubsidiary } = useSelector(({ subsidiaries }) => subsidiaries);\n  const { departments } = useSelector(({ departments }) => departments);\n  const { sections } = useSelector(({ sections }) => sections);\n  const { subSections } = useSelector(({ subSections }) => subSections);\n  const { currencies, caseTypes } = useSelector(({ utils }) => utils);\n  const {\n    classes,\n    activeStep,\n    handleNext,\n    handleOnSave,\n    handleReset,\n    isUpdate,\n    handlePrev,\n    complianceDetails,\n    setComplianceDetails,\n  } = props;\n  const [selectedDeadline, setSelectedDeadline] = useState(new Date());\n  const [currency, setCurrency] = useState(['KES', 'USD', 'EUR']);\n  const initValue = { id: '', name: '' };\n  const handleOnSubsidiaryChange = (event, value) => {\n    if (value !== null) {\n      setComplianceDetails({\n        ...complianceDetails,\n        companyId: value.id,\n        companyName: value.name,\n        departmentsId: null,\n        departmentsName: '',\n        sectionsId: null,\n        sectionsName: '',\n        subSectionsId: null,\n        subSectionsName: '',\n      });\n    } else {\n      setComplianceDetails({\n        ...complianceDetails,\n        companyId: null,\n        companyName: '',\n        departmentsId: null,\n        departmentsName: '',\n        sectionsId: null,\n        sectionsName: '',\n        subSectionsId: null,\n        subSectionsName: '',\n      });\n    }\n  };\n  const handleOnDepartmentChange = (event, value) => {\n    if (value !== null) {\n      setComplianceDetails({\n        ...complianceDetails,\n        departmentsId: value.id,\n        departmentsName: value.name,\n        sectionsId: null,\n        sectionsName: '',\n        subSectionsId: null,\n        subSectionsName: '',\n      });\n    } else {\n      setComplianceDetails({\n        ...complianceDetails,\n        departmentsId: null,\n        departmentsName: '',\n        sectionsId: null,\n        sectionsName: '',\n        subSectionsId: null,\n        subSectionsName: '',\n      });\n    }\n  };\n  const handleOnSectionChange = (event, value) => {\n    if (value !== null) {\n      setComplianceDetails({\n        ...complianceDetails,\n        sectionsId: value.id,\n        sectionsName: value.name,\n        subSectionsId: null,\n        subSectionsName: '',\n      });\n    } else {\n      setComplianceDetails({\n        ...complianceDetails,\n        sectionsId: null,\n        sectionsName: '',\n        subSectionsId: null,\n        subSectionsName: '',\n      });\n    }\n  };\n  const handleOnSubSectionChange = (event, value) => {\n    if (value !== null) {\n      setComplianceDetails({ ...complianceDetails, subSectionsId: value.id, subSectionsName: value.name });\n    } else {\n      setComplianceDetails({ ...complianceDetails, subSectionsId: null, subSectionsName: '' });\n    }\n  };\n  const computeTotalFees = (fees, fines) => {\n    const feesAmount = fees !== '' ? parseFloat(fees) : 0;\n    const finesAmount = fines !== '' ? parseFloat(fines) : 0;\n    setComplianceDetails({ ...complianceDetails, totalFees: feesAmount + finesAmount });\n  };\n  useEffect(() => {\n    setComplianceDetails({\n      ...complianceDetails,\n      dateofNextHearing: moment(selectedDeadline).format('YYYY-MM-DD'),\n    });\n  }, [selectedDeadline]);\n  useEffect(() => {\n    computeTotalFees(complianceDetails.fees, complianceDetails.fine);\n  }, [complianceDetails.fees, complianceDetails.fine]);\n  useEffect(() => {\n    setComplianceDetails({\n      ...complianceDetails,\n      companyId: currentSubsidiary,\n      departmentsId: null,\n      departmentsName: '',\n      sectionsId: null,\n      sectionsName: '',\n      subSectionsId: null,\n      subSectionsName: '',\n    });\n  }, [currentSubsidiary]);\n  useEffect(() => {\n    dispatch(fetchSubsidiaries());\n    dispatch(fetchDepartments());\n    dispatch(fetchSections());\n    dispatch(fetchSubSections());\n    dispatch(fetchCaseTypes());\n    dispatch(fetchCurrencies());\n  }, []);\n\n  return (\n    <>\n      <Box className={classes.inBuildAppMainContent} minHeight={400}>\n        <PerfectScrollbar className={classes.perfectScrollbarContactCon}>\n          <Box p={5} display=\"flex\">\n            {activeStep === 0 && (\n              <Box width={'100%'}>\n                <GridContainer>\n                  <Grid item md={12} xs={12}>\n                    <AppTextInput\n                      fullWidth\n                      required\n                      variant=\"outlined\"\n                      label={'Case Title'}\n                      value={complianceDetails.title}\n                      onChange={e => setComplianceDetails({ ...complianceDetails, title: e.target.value })}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <AppTextInput\n                      fullWidth\n                      multiline\n                      minRows={4}\n                      variant=\"outlined\"\n                      label={'Case Details'}\n                      value={complianceDetails.details}\n                      onChange={e => setComplianceDetails({ ...complianceDetails, details: e.target.value })}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <AppSelectBox\n                      fullWidth\n                      required\n                      data={caseTypes}\n                      label=\"Case Type\"\n                      valueKey=\"name\"\n                      variant=\"outlined\"\n                      labelKey=\"name\"\n                      value={complianceDetails.caseType}\n                      onChange={e => setComplianceDetails({ ...complianceDetails, caseType: e.target.value })}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <AppTextInput\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Judgement\"\n                      multiline\n                      minRows={5}\n                      value={complianceDetails.judgement}\n                      onChange={e => setComplianceDetails({ ...complianceDetails, judgement: e.target.value })}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <Autocomplete\n                      fullWidth\n                      options={subsidiaries}\n                      value={subsidiaries?.find(subsidiary => subsidiary.id === complianceDetails.companyId) ?? initValue}\n                      getOptionLabel={option => option.name}\n                      onChange={handleOnSubsidiaryChange}\n                      renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\n                      renderInput={params => (\n                        <TextField required fullWidth {...params} size={'small'} variant={'outlined'} label=\"Subsidiary\" />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <Autocomplete\n                      fullWidth\n                      options={departments.filter(department => department.companyId == complianceDetails.companyId)}\n                      value={departments.find(department => department.id === complianceDetails.departmentsId) ?? initValue}\n                      getOptionLabel={option => option.name}\n                      onChange={handleOnDepartmentChange}\n                      renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\n                      renderInput={params => (\n                        <TextField\n                          helperText={complianceDetails.companyId === null ? 'Select Subsidiary' : ''}\n                          fullWidth\n                          {...params}\n                          size={'small'}\n                          variant={'outlined'}\n                          label=\"Department\"\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <Autocomplete\n                      fullWidth\n                      options={sections.filter(section => section.departmentsId == complianceDetails.departmentsId)}\n                      value={sections.find(section => section.id === complianceDetails.sectionsId) ?? initValue}\n                      getOptionLabel={option => option.name}\n                      onChange={handleOnSectionChange}\n                      renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\n                      renderInput={params => (\n                        <TextField\n                          helperText={complianceDetails.departmentsId === null ? 'Select Department' : ''}\n                          fullWidth\n                          {...params}\n                          size={'small'}\n                          variant={'outlined'}\n                          label=\"Section\"\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <Autocomplete\n                      fullWidth\n                      options={subSections.filter(subSection => subSection.sectionsId == complianceDetails.sectionsId)}\n                      value={subSections.find(subSection => subSection.id === complianceDetails.sectionsId) ?? initValue}\n                      getOptionLabel={option => option.name}\n                      onChange={handleOnSubSectionChange}\n                      renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\n                      renderInput={params => (\n                        <TextField\n                          helperText={complianceDetails.sectionsId === null ? 'Select Section' : ''}\n                          fullWidth\n                          {...params}\n                          size={'small'}\n                          variant={'outlined'}\n                          label=\"Sub-Section\"\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Fees\"\n                      type={'number'}\n                      variant=\"outlined\"\n                      value={complianceDetails.fees}\n                      onChange={e => {\n                        setComplianceDetails({ ...complianceDetails, fees: e.target.value });\n                      }}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <TextField\n                              select\n                              style={{ width: '90px' }}\n                              label=\"\"\n                              value={complianceDetails.penaltyCurrency}\n                              onChange={e => setComplianceDetails({ ...complianceDetails, penaltyCurrency: e.target.value })}\n                              InputProps={{\n                                disableUnderline: true,\n                              }}>\n                              {currencies.map(option => (\n                                <MenuItem key={option.id} value={option.name}>\n                                  {option.name}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Fines\"\n                      type={'number'}\n                      variant=\"outlined\"\n                      value={complianceDetails.fine}\n                      onChange={e => {\n                        setComplianceDetails({ ...complianceDetails, fine: e.target.value });\n                      }}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <TextField\n                              select\n                              style={{ width: '90px' }}\n                              label=\"\"\n                              value={complianceDetails.penaltyCurrency}\n                              onChange={e => setComplianceDetails({ ...complianceDetails, penaltyCurrency: e.target.value })}\n                              InputProps={{\n                                disableUnderline: true,\n                              }}>\n                              {currencies.map(option => (\n                                <MenuItem key={option} value={option.name}>\n                                  {option.name}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Total Fees & Fines\"\n                      type={'number'}\n                      variant=\"outlined\"\n                      value={complianceDetails.totalFees}\n                      onChange={e => {\n                        setComplianceDetails({ ...complianceDetails, totalFees: e.target.value });\n                      }}\n                      disabled\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <TextField\n                              select\n                              disabled\n                              style={{ width: '90px' }}\n                              label=\"\"\n                              value={complianceDetails.penaltyCurrency}\n                              onChange={e => setComplianceDetails({ ...complianceDetails, penaltyCurrency: e.target.value })}\n                              InputProps={{\n                                disableUnderline: true,\n                              }}>\n                              {currencies.map(option => (\n                                <MenuItem key={option} value={option.name}>\n                                  {option.name}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <DatePicker\n                      autoOk\n                      fullWidth\n                      clearable\n                      inputVariant={'outlined'}\n                      label=\"Date of Next Hearing\"\n                      onChange={date => {\n                        setSelectedDeadline(date);\n                      }}\n                      value={\n                        complianceDetails.dateofNextHearing !== '' ? complianceDetails.dateofNextHearing : selectedDeadline\n                      }\n                      format=\"DD-MM-yyyy\"\n                      animateYearScrolling\n                    />\n                  </Grid>\n                  <Grid item md={12} xs={12}>\n                    <AppTextInput\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Management Comments\"\n                      multiline\n                      minRows={5}\n                      value={complianceDetails.managementComments}\n                      onChange={e => setComplianceDetails({ ...complianceDetails, managementComments: e.target.value })}\n                    />\n                  </Grid>\n                </GridContainer>\n              </Box>\n            )}\n            {activeStep === 1 && (\n              <Box width={'100%'}>\n                <Preview {...{ complianceDetails }} />\n              </Box>\n            )}\n          </Box>\n          <Box display=\"flex\" m={3} pb={3}>\n            {activeStep === steps.length - 1 && (\n              <Button onClick={handlePrev} variant={'contained'} color={'primary'} size={'small'}>\n                Prev\n              </Button>\n            )}\n            <Box flex={'1 0 auto'} />\n            {activeStep !== steps.length - 1 && (\n              <Button onClick={handleNext} variant={'contained'} color={'primary'} size={'small'}>\n                Continue\n              </Button>\n            )}\n            {activeStep === steps.length - 1 && (\n              <Button onClick={handleOnSave} variant={'contained'} color={'primary'} size={'small'}>\n                Save\n              </Button>\n            )}\n          </Box>\n        </PerfectScrollbar>\n      </Box>\n    </>\n  );\n};\nexport const Preview = props => {\n  const { complianceDetails, isView } = props;\n  const renderHTML = rawHTML => React.createElement('div', { dangerouslySetInnerHTML: { __html: rawHTML } });\n  const classes = useStyles();\n  return (\n    <TableContainer className={classes.inBuildAppCard}>\n      <Table size=\"small\" aria-label=\"a dense table\">\n        {!isView && (\n          <TableHead className={classes.tableHeader}>\n            <TableRow>\n              <TableCell className={classes.tableHeaderCell}>Field Name</TableCell>\n              <TableCell className={classes.tableHeaderCell}>Input Value</TableCell>\n            </TableRow>\n          </TableHead>\n        )}\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <b>Case Title</b>\n            </TableCell>\n            <TableCell>{complianceDetails.title !== '' ? complianceDetails.title : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Case Details</b>\n            </TableCell>\n            <TableCell>{complianceDetails.details !== '' ? renderHTML(complianceDetails.details) : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Case Type</b>\n            </TableCell>\n            <TableCell>{complianceDetails.caseType !== '' ? complianceDetails.caseType : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Judgement</b>\n            </TableCell>\n            <TableCell>{complianceDetails.judgement !== '' ? complianceDetails.judgement : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Company</b>\n            </TableCell>\n            <TableCell>{complianceDetails.companyName !== '' ? complianceDetails.companyName : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Department</b>\n            </TableCell>\n            <TableCell>{complianceDetails.departmentsName !== '' ? complianceDetails.departmentsName : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Section</b>\n            </TableCell>\n            <TableCell>{complianceDetails.sectionsName !== '' ? complianceDetails.sectionsName : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Sub Section</b>\n            </TableCell>\n            <TableCell>{complianceDetails.subSectionsName !== '' ? complianceDetails.subSectionsName : 'Not Set'}</TableCell>\n          </TableRow>\n\n          <TableRow>\n            <TableCell>\n              <b>Fees in {complianceDetails.penaltyCurrency}</b>\n            </TableCell>\n            <TableCell>{complianceDetails.fees !== '' ? complianceDetails.fees : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Fines in {complianceDetails.penaltyCurrency}</b>\n            </TableCell>\n            <TableCell>{complianceDetails.fine !== '' ? complianceDetails.fine : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Total Fees & Fines in {complianceDetails.penaltyCurrency}</b>\n            </TableCell>\n            <TableCell>{complianceDetails.totalFees !== '' ? complianceDetails.totalFees : 'Not Set'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Date of Next Hearing</b>\n            </TableCell>\n            <TableCell>\n              {complianceDetails.dateofNextHearing !== '' ? complianceDetails.dateofNextHearing : 'Not Set'}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Management Comments</b>\n            </TableCell>\n            <TableCell>\n              {complianceDetails.managementComments !== '' ? complianceDetails.managementComments : 'Not Set'}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>Case File Attachment</b>\n            </TableCell>\n            <TableCell>\n              {complianceDetails.caseFileAttachment !== '' ? complianceDetails.caseFileAttachment : 'Not Uploaded'}\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\nconst SuccessPage = props => {\n  const { classes, handleReset, isUpdate } = props;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n      <CmtImage src={'/images/ic_ok.svg'} style={{ width: '50px' }} />\n      <p className={classes.instructions} style={{ marginTop: '10px' }}>\n        <b>Compliance was {isUpdate ? 'updated' : 'created'} successfully!</b>\n      </p>\n      <Box mt={10}>\n        <Link to={'/compliance/legal-compliance'}>\n          <Button color={'primary'} variant={'contained'}>\n            Back to Compliance Dashboard\n          </Button>\n        </Link>\n        {!isUpdate && (\n          <Button onClick={handleReset} className={classes.button}>\n            Create New Compliance\n          </Button>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default AddEditLegalCompliance;\n"],"sourceRoot":""}